{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/libs/animator/AnimatorDragonBones.ts"],"names":["dragonBones","_decorator","AnimatorBase","ccclass","property","requireComponent","disallowMultiple","AnimatorDragonBones","ArmatureDisplay","_dragonBones","start","PlayOnStart","_hasInit","getComponent","addEventListener","onAnimFinished","AssetRawUrl","initJson","json","onInit","args","initArgs","playAnimation","animName","loop","scaleTime","scale","timeScale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;;AACfC,MAAAA,Y;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,gBAArB;AAAuCC,QAAAA;AAAvC,O,GAA4DL,U;AAElE;AACA;AACA;;yBAIqBM,mB,WADpBF,gBAAgB,CAACL,WAAW,CAACQ,eAAb,C,EAFhBL,O,UACAG,gB,wBADD,MAGqBC,mBAHrB;AAAA;AAAA,wCAG8D;AAAA;AAAA;;AAC1D;AAD0D,eAElDE,YAFkD,GAEN,IAFM;AAAA;;AAIhDC,QAAAA,KAAK,GAAG;AACd,cAAI,CAAC,KAAKC,WAAN,IAAqB,KAAKC,QAA9B,EAAwC;AACpC;AACH;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,eAAKH,YAAL,GAAoB,KAAKI,YAAL,CAAkBb,WAAW,CAACQ,eAA9B,CAApB;;AACA,eAAKC,YAAL,CAAkBK,gBAAlB,CAAmC,UAAnC,EAA+C,KAAKC,cAApD,EAAoE,IAApE;;AAEA,cAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKC,QAAL,CAAc,KAAKD,WAAL,CAAiBE,IAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACWC,QAAAA,MAAM,CAAC,GAAGC,IAAJ,EAAqH;AAC9H,cAAI,KAAKT,WAAL,IAAoB,KAAKC,QAA7B,EAAuC;AACnC;AACH;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,eAAKS,QAAL,CAAc,GAAGD,IAAjB;AAEA,eAAKX,YAAL,GAAoB,KAAKI,YAAL,CAAkBb,WAAW,CAACQ,eAA9B,CAApB;;AACA,eAAKC,YAAL,CAAkBK,gBAAlB,CAAmC,UAAnC,EAA+C,KAAKC,cAApD,EAAoE,IAApE;;AAEA,cAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKC,QAAL,CAAc,KAAKD,WAAL,CAAiBE,IAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACcI,QAAAA,aAAa,CAACC,QAAD,EAAmBC,IAAnB,EAAkC;AACrD,cAAID,QAAJ,EACI,KAAKd,YAAL,CAAkBa,aAAlB,CAAgCC,QAAhC,EAA0CC,IAAI,GAAG,CAAH,GAAO,CAAC,CAAtD;AACP;AAED;AACJ;AACA;AACA;AACA;;;AACcC,QAAAA,SAAS,CAACC,KAAD,EAAgB;AAC/B,cAAIA,KAAK,GAAG,CAAZ,EACI,KAAKjB,YAAL,CAAkBkB,SAAlB,GAA8BD,KAA9B;AACP;;AA5DyD,O","sourcesContent":["import { dragonBones, _decorator } from \"cc\";\r\nimport AnimatorBase, { AnimationPlayer } from \"./core/AnimatorBase\";\r\nimport { AnimatorStateLogic } from \"./core/AnimatorStateLogic\";\r\n\r\nconst { ccclass, property, requireComponent, disallowMultiple } = _decorator;\r\n\r\n/** \r\n * DragonBones状态机组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@requireComponent(dragonBones.ArmatureDisplay)\r\nexport default class AnimatorDragonBones extends AnimatorBase {\r\n    /** DragonBones组件 */\r\n    private _dragonBones: dragonBones.ArmatureDisplay = null!;\r\n\r\n    protected start() {\r\n        if (!this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this._dragonBones = this.getComponent(dragonBones.ArmatureDisplay)!;\r\n        this._dragonBones.addEventListener('complete', this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @override\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        if (this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this.initArgs(...args);\r\n\r\n        this._dragonBones = this.getComponent(dragonBones.ArmatureDisplay)!;\r\n        this._dragonBones.addEventListener('complete', this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @override\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n        if (animName)\r\n            this._dragonBones.playAnimation(animName, loop ? 0 : -1);\r\n    }\r\n\r\n    /**\r\n     * 缩放动画播放速率\r\n     * @override\r\n     * @param scale 缩放倍率\r\n     */\r\n    protected scaleTime(scale: number) {\r\n        if (scale > 0)\r\n            this._dragonBones.timeScale = scale;\r\n    }\r\n}\r\n"]}