{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/libs/animator/AnimatorSpineSecondary.ts"],"names":["sp","_decorator","AnimatorSpine","AnimatorBase","ccclass","property","requireComponent","AnimatorSpineSecondary","Skeleton","tooltip","_main","_spine","start","PlayOnStart","_hasInit","getComponent","addSecondaryListener","onAnimFinished","AssetRawUrl","initJson","json","onInit","args","initArgs","playAnimation","animName","loop","setAnimation","TrackIndex","clearTrack"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,E,OAAAA,E;AAAIC,MAAAA,U,OAAAA,U;;AACNC,MAAAA,a;;AACAC,MAAAA,Y;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA0CL,U;AAEhD;AACA;AACA;;yBAGqBM,sB,WADpBD,gBAAgB,CAACN,EAAE,CAACQ,QAAJ,C,UAEZH,QAAQ,CAAC;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAD,C,EAHZL,O,mCAAD,MAEqBG,sBAFrB;AAAA;AAAA,wCAEiE;AAAA;AAAA;;AAAA;;AAG7D;AAH6D,eAIrDG,KAJqD,GAI9B,IAJ8B;;AAK7D;AAL6D,eAMrDC,MANqD,GAM/B,IAN+B;AAAA;;AAQnDC,QAAAA,KAAK,GAAG;AACd,cAAI,CAAC,KAAKC,WAAN,IAAqB,KAAKC,QAA9B,EAAwC;AACpC;AACH;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,eAAKH,MAAL,GAAc,KAAKI,YAAL,CAAkBf,EAAE,CAACQ,QAArB,CAAd;AACA,eAAKE,KAAL,GAAa,KAAKK,YAAL;AAAA;AAAA,6CAAb;;AACA,eAAKL,KAAL,CAAWM,oBAAX,CAAgC,KAAKC,cAArC,EAAqD,IAArD;;AAEA,cAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKC,QAAL,CAAc,KAAKD,WAAL,CAAiBE,IAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACWC,QAAAA,MAAM,CAAC,GAAGC,IAAJ,EAAqH;AAC9H,cAAI,KAAKT,WAAL,IAAoB,KAAKC,QAA7B,EAAuC;AACnC;AACH;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,eAAKS,QAAL,CAAc,GAAGD,IAAjB;AAEA,eAAKX,MAAL,GAAc,KAAKI,YAAL,CAAkBf,EAAE,CAACQ,QAArB,CAAd;AACA,eAAKE,KAAL,GAAa,KAAKK,YAAL;AAAA;AAAA,6CAAb;;AACA,eAAKL,KAAL,CAAWM,oBAAX,CAAgC,KAAKC,cAArC,EAAqD,IAArD;;AAEA,cAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKC,QAAL,CAAc,KAAKD,WAAL,CAAiBE,IAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACcI,QAAAA,aAAa,CAACC,QAAD,EAAmBC,IAAnB,EAAkC;AACrD,cAAID,QAAJ,EAAc;AACV,iBAAKd,MAAL,CAAYgB,YAAZ,CAAyB,KAAKC,UAA9B,EAA0CH,QAA1C,EAAoDC,IAApD;AACH,WAFD,MAGK;AACD,iBAAKf,MAAL,CAAYkB,UAAZ,CAAuB,KAAKD,UAA5B;AACH;AACJ;;AA5D4D,O;;;;;iBACQ,C","sourcesContent":["import { sp, _decorator } from \"cc\";\r\nimport AnimatorSpine from \"./AnimatorSpine\";\r\nimport AnimatorBase, { AnimationPlayer } from \"./core/AnimatorBase\";\r\nimport { AnimatorStateLogic } from \"./core/AnimatorStateLogic\";\r\n\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n/** \r\n * Spine状态机组件（次状态机），同一节点可添加多个，用于在不同track中播放动画，trackIndex必须大于0\r\n */\r\n@ccclass\r\n@requireComponent(sp.Skeleton)\r\nexport default class AnimatorSpineSecondary extends AnimatorBase {\r\n    @property({ tooltip: '动画播放的trackIndex，必须大于0' }) TrackIndex: number = 1;\r\n\r\n    /** 主状态机 */\r\n    private _main: AnimatorSpine = null!;\r\n    /** spine组件 */\r\n    private _spine: sp.Skeleton = null!;\r\n\r\n    protected start() {\r\n        if (!this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this._spine = this.getComponent(sp.Skeleton)!;\r\n        this._main = this.getComponent(AnimatorSpine)!;\r\n        this._main.addSecondaryListener(this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @override\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        if (this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this.initArgs(...args);\r\n\r\n        this._spine = this.getComponent(sp.Skeleton)!;\r\n        this._main = this.getComponent(AnimatorSpine)!;\r\n        this._main.addSecondaryListener(this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @override\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n        if (animName) {\r\n            this._spine.setAnimation(this.TrackIndex, animName, loop);\r\n        }\r\n        else {\r\n            this._spine.clearTrack(this.TrackIndex);\r\n        }\r\n    }\r\n}\r\n"]}