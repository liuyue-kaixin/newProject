{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/node_modules/crypto-es/lib/enc-utf16.js"],"names":["WordArray","swapEndian","word","Utf16BE","stringify","wordArray","words","sigBytes","utf16Chars","i","codePoint","push","String","fromCharCode","join","parse","utf16Str","utf16StrLength","length","charCodeAt","create","Utf16","Utf16LE"],"mappings":"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","sourcesContent":["import {\r\n  WordArray,\r\n} from './core.js';\r\n\r\nconst swapEndian = word => ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\r\n\r\n/**\r\n * UTF-16 BE encoding strategy.\r\n */\r\nexport const Utf16BE = {\r\n  /**\r\n   * Converts a word array to a UTF-16 BE string.\r\n   *\r\n   * @param {WordArray} wordArray The word array.\r\n   *\r\n   * @return {string} The UTF-16 BE string.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     const utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\r\n   */\r\n  stringify(wordArray) {\r\n    // Shortcuts\r\n    const { words, sigBytes } = wordArray;\r\n\r\n    // Convert\r\n    const utf16Chars = [];\r\n    for (let i = 0; i < sigBytes; i += 2) {\r\n      const codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\r\n      utf16Chars.push(String.fromCharCode(codePoint));\r\n    }\r\n\r\n    return utf16Chars.join('');\r\n  },\r\n\r\n  /**\r\n   * Converts a UTF-16 BE string to a word array.\r\n   *\r\n   * @param {string} utf16Str The UTF-16 BE string.\r\n   *\r\n   * @return {WordArray} The word array.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     const wordArray = CryptoJS.enc.Utf16.parse(utf16String);\r\n   */\r\n  parse(utf16Str) {\r\n    // Shortcut\r\n    const utf16StrLength = utf16Str.length;\r\n\r\n    // Convert\r\n    const words = [];\r\n    for (let i = 0; i < utf16StrLength; i += 1) {\r\n      words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\r\n    }\r\n\r\n    return WordArray.create(words, utf16StrLength * 2);\r\n  },\r\n};\r\nexport const Utf16 = Utf16BE;\r\n\r\n/**\r\n * UTF-16 LE encoding strategy.\r\n */\r\nexport const Utf16LE = {\r\n  /**\r\n   * Converts a word array to a UTF-16 LE string.\r\n   *\r\n   * @param {WordArray} wordArray The word array.\r\n   *\r\n   * @return {string} The UTF-16 LE string.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     const utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\r\n   */\r\n  stringify(wordArray) {\r\n    // Shortcuts\r\n    const { words, sigBytes } = wordArray;\r\n\r\n    // Convert\r\n    const utf16Chars = [];\r\n    for (let i = 0; i < sigBytes; i += 2) {\r\n      const codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\r\n      utf16Chars.push(String.fromCharCode(codePoint));\r\n    }\r\n\r\n    return utf16Chars.join('');\r\n  },\r\n\r\n  /**\r\n   * Converts a UTF-16 LE string to a word array.\r\n   *\r\n   * @param {string} utf16Str The UTF-16 LE string.\r\n   *\r\n   * @return {WordArray} The word array.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     const wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\r\n   */\r\n  parse(utf16Str) {\r\n    // Shortcut\r\n    const utf16StrLength = utf16Str.length;\r\n\r\n    // Convert\r\n    const words = [];\r\n    for (let i = 0; i < utf16StrLength; i += 1) {\r\n      words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\r\n    }\r\n\r\n    return WordArray.create(words, utf16StrLength * 2);\r\n  },\r\n};\r\n"]}