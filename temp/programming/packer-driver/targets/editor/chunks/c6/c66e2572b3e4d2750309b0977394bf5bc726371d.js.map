{"version":3,"sources":["file:///Volumes/SSD/ccProject/node_modules/crypto-es/lib/format-hex.js"],"names":["CipherParams","Hex","HexFormatter","stringify","cipherParams","ciphertext","toString","parse","input","create"],"mappings":";;;;;;AACEA,MAAAA,Y,gBAAAA,Y;;AAGAC,MAAAA,G,iBAAAA,G;;;8BAGWC,Y,GAAe;AAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,QAAAA,SAAS,CAACC,YAAD,EAAe;AACtB,iBAAOA,YAAY,CAACC,UAAb,CAAwBC,QAAxB,CAAiCL,GAAjC,CAAP;AACD,SAhByB;;AAkB1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEM,QAAAA,KAAK,CAACC,KAAD,EAAQ;AACX,gBAAMH,UAAU,GAAGJ,GAAG,CAACM,KAAJ,CAAUC,KAAV,CAAnB;AACA,iBAAOR,YAAY,CAACS,MAAb,CAAoB;AAAEJ,YAAAA;AAAF,WAApB,CAAP;AACD;;AAlCyB,O","sourcesContent":["import {\r\n  CipherParams,\r\n} from './cipher-core.js';\r\nimport {\r\n  Hex,\r\n} from './core.js';\r\n\r\nexport const HexFormatter = {\r\n  /**\r\n   * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\r\n   *\r\n   * @param {CipherParams} cipherParams The cipher params object.\r\n   *\r\n   * @return {string} The hexadecimally encoded string.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\r\n   */\r\n  stringify(cipherParams) {\r\n    return cipherParams.ciphertext.toString(Hex);\r\n  },\r\n\r\n  /**\r\n   * Converts a hexadecimally encoded ciphertext string to a cipher params object.\r\n   *\r\n   * @param {string} input The hexadecimally encoded string.\r\n   *\r\n   * @return {CipherParams} The cipher params object.\r\n   *\r\n   * @static\r\n   *\r\n   * @example\r\n   *\r\n   *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\r\n   */\r\n  parse(input) {\r\n    const ciphertext = Hex.parse(input);\r\n    return CipherParams.create({ ciphertext });\r\n  },\r\n};\r\n"]}