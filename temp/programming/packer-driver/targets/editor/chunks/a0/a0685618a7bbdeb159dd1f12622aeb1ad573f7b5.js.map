{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/core/utils/EncryptUtil.ts"],"names":["EncryptUtil","CryptoES","md5","msg","MD5","toString","initCrypto","key","iv","enc","Hex","parse","aesEncrypt","AES","encrypt","format","JsonFormatter","aesDecrypt","str","decrypted","decrypt","Utf8","stringify","cipherParams","jsonObj","ct","ciphertext","Base64","salt","s","JSON","jsonStr","lib","CipherParams","create"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-09-02 09:28:00\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-10-21 09:46:39\r\n */\r\n\r\nimport CryptoES from \"crypto-es\";\r\n\r\n/** \r\n * CryptoES 加密库封装 \r\n * https://github.com/entronad/crypto-es\r\n * \r\n * 安装第三方库生效\r\n * npm install -g yarn\r\n * yarn add crypto-es\r\n */\r\nexport class EncryptUtil {\r\n    private static key: string = null!;\r\n    private static iv: CryptoES.lib.WordArray = null!;\r\n\r\n    /**\r\n     * MD5加密\r\n     * @param msg 加密信息\r\n     */\r\n    static md5(msg: string): string {\r\n        return CryptoES.MD5(msg).toString();\r\n    }\r\n\r\n    /** 初始化加密库 */\r\n    static initCrypto(key: string, iv: string) {\r\n        this.key = key;\r\n        this.iv = CryptoES.enc.Hex.parse(iv);\r\n    }\r\n\r\n    /**\r\n     * AES 加密\r\n     * @param msg 加密信息\r\n     * @param key aes加密的key \r\n     * @param iv  aes加密的iv\r\n     */\r\n    static aesEncrypt(msg: string, key: string, iv: string): string {\r\n        return CryptoES.AES.encrypt(\r\n            msg,\r\n            this.key,\r\n            {\r\n                iv: this.iv,\r\n                format: this.JsonFormatter\r\n            },\r\n        ).toString();\r\n    }\r\n\r\n    /**\r\n     * AES 解密\r\n     * @param str 解密字符串\r\n     * @param key aes加密的key \r\n     * @param iv  aes加密的iv\r\n     */\r\n    static aesDecrypt(str: string, key: string, iv: string): string {\r\n        const decrypted = CryptoES.AES.decrypt(\r\n            str,\r\n            this.key,\r\n            {\r\n                iv: this.iv,\r\n                format: this.JsonFormatter\r\n            },\r\n        );\r\n        return decrypted.toString(CryptoES.enc.Utf8);\r\n    }\r\n\r\n    private static JsonFormatter = {\r\n        stringify: function (cipherParams: any) {\r\n            const jsonObj: any = { ct: cipherParams.ciphertext.toString(CryptoES.enc.Base64) };\r\n            if (cipherParams.iv) {\r\n                jsonObj.iv = cipherParams.iv.toString();\r\n            }\r\n            if (cipherParams.salt) {\r\n                jsonObj.s = cipherParams.salt.toString();\r\n            }\r\n            return JSON.stringify(jsonObj);\r\n        },\r\n        parse: function (jsonStr: any) {\r\n            const jsonObj = JSON.parse(jsonStr);\r\n            const cipherParams = CryptoES.lib.CipherParams.create(\r\n                { ciphertext: CryptoES.enc.Base64.parse(jsonObj.ct) },\r\n            );\r\n            if (jsonObj.iv) {\r\n                cipherParams.iv = CryptoES.enc.Hex.parse(jsonObj.iv)\r\n            }\r\n            if (jsonObj.s) {\r\n                cipherParams.salt = CryptoES.enc.Hex.parse(jsonObj.s)\r\n            }\r\n            return cipherParams;\r\n        },\r\n    };\r\n}"]}