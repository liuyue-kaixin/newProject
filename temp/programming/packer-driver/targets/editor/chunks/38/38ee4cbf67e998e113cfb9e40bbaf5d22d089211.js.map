{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/assets/script/battle/demos/collisions/Camera3D.ts"],"names":["Camera","clamp","Component","input","Input","Node","Quat","toRadian","Vec2","Vec3","_decorator","ccclass","property","Camera3D","camera","rot","curXY","curScale","touchCount","touchs","id","pre","cur","rotTemp","start","getComponentInChildren","set","horizontal","vertical","node","position","distance","onEnable","on","EventType","MOUSE_WHEEL","onMouseScale","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_CANCEL","onTouchEnd","TOUCH_END","onDisable","off","updateRotate","rotation","y","rotateY","IDENTITY","x","rotateX","slerp","target","rotate","lerp","fromAxisAngle","UNIT_Y","event","scale","getScrollY","getID","pos","getUILocation","i","t","curTouch","getUIDelta","p0","p1","curLen","oldLen","update","dt"],"mappings":"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","sourcesContent":["\nimport { Camera, clamp, Component, input, Input, Node, Quat, toRadian, Vec2, Vec3, _decorator } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Camera3D')\nexport class Camera3D extends Component {\n\n    @property\n    distance:number = 25\n    @property\n    vertical:number = 30;\n    @property\n    horizontal:number = 45;\n\n    @property(Node)\n    target:Node = null!;\n\n    camera?:Camera | null;\n\n\n    private rot: Quat = new Quat();\n    private curXY: Vec2 = new Vec2();\n\n    private curScale: number = 1;\n    private touchCount: number = 0;\n    private touchs: any = [{ id: -1, pre: new Vec2(), cur: new Vec2() }, { id: -1, pre: new Vec2(), cur: new Vec2() }];\n\n    private rotTemp:Quat = new Quat();\n\n    start(){\n        \n        this.camera = this.getComponentInChildren(Camera);\n        this.curXY.set(toRadian(this.horizontal),-toRadian(this.vertical));\n\n        if(this.camera){\n            this.camera.node.position = new Vec3(0,0,this.distance);\n        }\n    }\n\n    onEnable() {\n        input.on(Input.EventType.MOUSE_WHEEL, this.onMouseScale, this);\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.on(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n        input.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    onDisable() {\n        input.off(Input.EventType.MOUSE_WHEEL, this.onMouseScale, this);\n        input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        input.off(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\n        input.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    updateRotate() {\n\n        let node = this.node;\n        let rotation = this.rot;\n        this.curXY.y = clamp(this.curXY.y, toRadian(-60),toRadian(30));\n        Quat.rotateY(rotation, Quat.IDENTITY, -this.curXY.x);\n        Quat.rotateX(rotation, rotation, this.curXY.y);\n        Quat.slerp(rotation, node.rotation, rotation, 0.25);\n        node.rotation = rotation;\n\n        if(this.target){\n            let rotate = this.target.rotation;\n            node.position.lerp(this.target.position,0.25);\n            Quat.fromAxisAngle(this.rotTemp,Vec3.UNIT_Y,-this.curXY.x);\n            this.target.rotation = rotate.lerp(this.rotTemp,0.25);\n        }\n     \n    }\n\n    onMouseScale(event:any) {\n        let scale = event.getScrollY() > 0 ? 1 : -1;\n        this.curScale = clamp(this.curScale - scale * 0.1, 0.25, 1.5);\n        this.node.scale = new Vec3(this.curScale, this.curScale, this.curScale);\n    }\n\n    onTouchStart(event:any) {\n        let id = event.getID();\n        let pos = event.getUILocation();\n        for (let i = 0; i < 2; i++) {\n            let t = this.touchs[i];\n            if (t.id == -1) {\n                t.id = id;\n                t.pre.set(pos);\n                t.cur.set(pos);\n                this.touchCount++;\n                break;\n            }\n        }\n    }\n\n    onTouchMove(event:any) {\n\n        let curTouch = null;\n        let id = event.getID();\n        let pos = event.getUILocation();\n        for (let i = 0; i < 2; i++) {\n            let t = this.touchs[i];\n            if (t.id == id) {\n                t.cur.set(pos);\n                curTouch = t;\n            }\n        }\n\n        if (this.touchCount == 1) {\n            let scale = 0.008;\n            let cur = event.getUIDelta();\n            this.curXY.x += cur.x * scale;\n            this.curXY.y += cur.y * scale;\n\n            // this.updateRotate();\n        } else if (this.touchCount == 2) {\n            let p0 = this.touchs[0];\n            let p1 = this.touchs[1];\n\n            let curLen = Vec2.distance(p0.cur, p1.cur);\n            let oldLen = Vec2.distance(p0.pre, p1.pre);\n            this.curScale = clamp(this.curScale - (curLen - oldLen) * 0.002, 0.25, 1.5);\n            this.node.scale = new Vec3(this.curScale, this.curScale, this.curScale);\n        }\n\n        if (curTouch) {\n            curTouch.pre.set(curTouch.cur);\n        }\n\n    }\n\n    onTouchEnd(event:any) {\n        let id = event.getID();\n        for (let i = 0; i < 2; i++) {\n            let t = this.touchs[i];\n            if (t.id == id) {\n                t.id = -1;\n                this.touchCount--;\n            }\n        }\n    }\n\n    update(dt: number) {\n        this.updateRotate();\n    }\n\n}\n\n"]}