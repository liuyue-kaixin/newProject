{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/libs/behavior-tree/BranchNode.ts"],"names":["BranchNode","BehaviorTree","BTreeNode","constructor","nodes","children","_actualTask","_runningNode","_nodeRunning","_blackboard","start","run","blackboard","length","_control","fail","_run","end","node","getNode","setControl","running","success"],"mappings":";;;uDAUsBA,U;;;;;;;;;;;;;;;;;;AAJbC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,S,iBAAAA,S;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;AAIA;4BACsBF,U,GAAf,MAAeA,UAAf;AAAA;AAAA,kCAA4C;AAWxCG,QAAAA,WAAW,CAACC,KAAD,EAA0B;AACxC;;AAXJ;AAU4C,eATrCC,QASqC;;AAR5C;AAQ4C,eAPlCC,WAOkC;;AAN5C;AAM4C,eALlCC,YAKkC;AAAA,eAJlCC,YAIkC;;AAH5C;AAG4C,eAFlCC,WAEkC;AAExC,eAAKJ,QAAL,GAAgBD,KAAK,IAAI,EAAzB;AACH;;AAEMM,QAAAA,KAAK,GAAG;AACX,eAAKJ,WAAL,GAAmB,CAAnB;AACA,gBAAMI,KAAN;AACH;;AAEMC,QAAAA,GAAG,CAACC,UAAD,EAAmB;AACzB,cAAI,KAAKP,QAAL,CAAcQ,MAAd,IAAwB,CAA5B,EAA+B;AAAyB;AACpD,iBAAKC,QAAL,CAAcC,IAAd;AACH,WAFD,MAGK;AACD,iBAAKN,WAAL,GAAmBG,UAAnB;AACA,iBAAKF,KAAL;;AACA,gBAAI,KAAKJ,WAAL,GAAmB,KAAKD,QAAL,CAAcQ,MAArC,EAA6C;AACzC,mBAAKG,IAAL;AACH;AACJ;;AAED,eAAKC,GAAL;AACH;AAED;;;AACUD,QAAAA,IAAI,CAACJ,UAAD,EAAmB;AAC7B,cAAIM,IAAI,GAAG;AAAA;AAAA,4CAAaC,OAAb,CAAqB,KAAKd,QAAL,CAAc,KAAKC,WAAnB,CAArB,CAAX;AACA,eAAKC,YAAL,GAAoBW,IAApB;AACAA,UAAAA,IAAI,CAACE,UAAL,CAAgB,IAAhB;AACAF,UAAAA,IAAI,CAACR,KAAL,CAAW,KAAKD,WAAhB;AACAS,UAAAA,IAAI,CAACP,GAAL,CAAS,KAAKF,WAAd;AACH;;AAEMY,QAAAA,OAAO,CAACH,IAAD,EAAkB;AAC5B,eAAKV,YAAL,GAAoBU,IAApB;;AACA,eAAKJ,QAAL,CAAcO,OAAd,CAAsBH,IAAtB;AACH;;AAEMI,QAAAA,OAAO,GAAG;AACb,eAAKd,YAAL,GAAoB,IAApB;;AACA,eAAKD,YAAL,CAAkBU,GAAlB,CAAsB,KAAKR,WAA3B;AACH;;AAEMM,QAAAA,IAAI,GAAG;AACV,eAAKP,YAAL,GAAoB,IAApB;;AACA,eAAKD,YAAL,CAAkBU,GAAlB,CAAsB,KAAKR,WAA3B;AACH;;AA1D8C,O","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-06-21 12:05:14\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-07-20 13:58:32\r\n */\r\nimport { BehaviorTree } from './BehaviorTree';\r\nimport { BTreeNode } from './BTreeNode';\r\n\r\n/** 复合节点 */\r\nexport abstract class BranchNode extends BTreeNode {\r\n    /** 子节点数组 */\r\n    public children: Array<BTreeNode>;\r\n    /** 当前任务索引 */\r\n    protected _actualTask!: number;\r\n    /** 正在运行的节点 */\r\n    protected _runningNode!: BTreeNode;\r\n    protected _nodeRunning!: BTreeNode | null;\r\n    /** 外部参数对象 */\r\n    protected _blackboard: any;\r\n\r\n    public constructor(nodes: Array<BTreeNode>) {\r\n        super();\r\n        this.children = nodes || [];\r\n    }\r\n\r\n    public start() {\r\n        this._actualTask = 0;\r\n        super.start();\r\n    }\r\n\r\n    public run(blackboard?: any) {\r\n        if (this.children.length == 0) {                        // 没有子任务直接视为执行失败\r\n            this._control.fail();\r\n        }\r\n        else {\r\n            this._blackboard = blackboard;\r\n            this.start();\r\n            if (this._actualTask < this.children.length) {\r\n                this._run();\r\n            }\r\n        }\r\n\r\n        this.end();\r\n    }\r\n\r\n    /** 执行当前节点逻辑 */\r\n    protected _run(blackboard?: any) {\r\n        var node = BehaviorTree.getNode(this.children[this._actualTask]);\r\n        this._runningNode = node;\r\n        node.setControl(this);\r\n        node.start(this._blackboard);\r\n        node.run(this._blackboard);\r\n    }\r\n\r\n    public running(node: BTreeNode) {\r\n        this._nodeRunning = node;\r\n        this._control.running(node);\r\n    }\r\n\r\n    public success() {\r\n        this._nodeRunning = null;\r\n        this._runningNode.end(this._blackboard);\r\n    }\r\n\r\n    public fail() {\r\n        this._nodeRunning = null;\r\n        this._runningNode.end(this._blackboard);\r\n    }\r\n}\r\n"]}