{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/libs/gui/badge/Badge.ts"],"names":["CCInteger","color","Component","Enum","Label","Layers","Mask","Node","Overflow","Sprite","SpriteFrame","UITransform","Vec3","_decorator","RoundRectMask","ccclass","property","Position","Badge","type","tooltip","badgeNode","textColor","labelNode","text","string","setText","onLoad","initBadge","createBadge","node","addChild","setPosition","position","parentSize","getComponent","contentSize","badgeSize","TOP_LEFT","x","width","y","height","TOP_RIGHT","label","backgroundNode","layer","UI_2D","addComponent","radius","setContentSize","active","_sprite","Type","SIMPLE","spriteFrame","bg","_label","fontSize","isBold","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","lineHeight","overflow","NONE","enableWrapText","start","POSITION"],"mappings":"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","sourcesContent":["import { CCInteger, color, Component, Enum, Label, Layers, Mask, math, Node, Overflow, Sprite, SpriteFrame, UITransform, Vec3, _decorator } from 'cc';\r\nimport { RoundRectMask } from './RoundRectMask';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n// 徽标位置\r\nexport enum Position {\r\n    // 左上角\r\n    TOP_LEFT = 0,\r\n    // 右上角\r\n    TOP_RIGHT = 1,\r\n}\r\n\r\nEnum(Position);\r\n\r\n@ccclass('Badge')\r\nexport class Badge extends Component {\r\n    @property({ type: SpriteFrame, tooltip: '背景' })\r\n    bg: SpriteFrame | null = null;\r\n    @property({ tooltip: '内容' })\r\n    string: string = '6';\r\n    @property({ type: CCInteger, tooltip: '宽' })\r\n    width: number = 30;\r\n    @property({ type: CCInteger, tooltip: '高' })\r\n    height: number = 26;\r\n    @property({ type: CCInteger, tooltip: '圆角' })\r\n    radius: number = 6;\r\n    @property({ type: Position, tooltip: '位置\\n 0: 左上角 \\n 1: 右上角' })\r\n    position: Position = Position.TOP_LEFT;\r\n    // 徽标位置\r\n    public static POSITION: Position;\r\n\r\n    private badgeNode: Node = null!;\r\n    private color = color(214, 30, 30, 240);\r\n    private textColor = color(255, 255, 255, 255);\r\n    private labelNode: Node = null!;\r\n\r\n    public get text(): string {\r\n        return this.string;\r\n    }\r\n    public set text(text: string) {\r\n        this.string = text;\r\n        this.setText(text);\r\n    }\r\n\r\n    onLoad() {\r\n        this.initBadge();\r\n    }\r\n\r\n    // 初始化badge，插入节点等操作\r\n    initBadge() {\r\n        const badgeNode = this.createBadge();\r\n        this.node.addChild(badgeNode);\r\n    }\r\n\r\n    // 设置位置\r\n    setPosition(position: Position) {\r\n        const parentSize = this.node.getComponent(UITransform)?.contentSize as math.Size;\r\n        const badgeSize = this.badgeNode.getComponent(UITransform)?.contentSize as math.Size;\r\n\r\n        switch (position) {\r\n            case Position.TOP_LEFT: {\r\n                const x = -parentSize.width / 2;\r\n                const y = parentSize.height / 2;\r\n\r\n                this.badgeNode.setPosition(new Vec3(x, y, 0));\r\n                break;\r\n            }\r\n            case Position.TOP_RIGHT: {\r\n                const x = parentSize.width / 2;\r\n                const y = parentSize.height / 2;\r\n\r\n                this.badgeNode.setPosition(new Vec3(x, y, 0));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 设置文字\r\n    setText(text: string) {\r\n        this.text = text;\r\n        const label = this.labelNode.getComponent(Label);\r\n\r\n        if (label) {\r\n            label.string = this.text;\r\n            label.color = this.textColor;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    createBadge() {\r\n        this.badgeNode = new Node('BadgeNode');\r\n        const backgroundNode = new Node('backgroundNode');\r\n        this.labelNode = new Node('labelNode');\r\n\r\n        this.badgeNode.layer = Layers.Enum.UI_2D;\r\n        backgroundNode.layer = Layers.Enum.UI_2D;\r\n        this.labelNode.layer = Layers.Enum.UI_2D;\r\n\r\n        // 设置mask\r\n        this.badgeNode.addComponent(Mask);\r\n        this.badgeNode.addComponent(RoundRectMask).radius = this.radius;\r\n        this.badgeNode.getComponent(UITransform)?.setContentSize(this.width, this.height);\r\n        this.badgeNode.active = true;\r\n\r\n        // 设置背景\r\n        const _sprite = backgroundNode.addComponent(Sprite);\r\n        _sprite.type = Sprite.Type.SIMPLE;\r\n        _sprite.color = this.color;\r\n        _sprite.spriteFrame = this.bg;\r\n\r\n        backgroundNode.getComponent(UITransform)?.setContentSize(this.width, this.height);\r\n\r\n        // 设置label信息\r\n        const _label = this.labelNode.addComponent(Label);\r\n        _label.getComponent(UITransform)?.setContentSize(this.width, this.height);\r\n        _label.string = this.text;\r\n        _label.color = this.textColor;\r\n        _label.fontSize = 18;\r\n        _label.isBold = true;\r\n        _label.horizontalAlign = Label.HorizontalAlign.CENTER;\r\n        _label.verticalAlign = Label.VerticalAlign.CENTER;\r\n        _label.lineHeight = 0;\r\n        _label.overflow = Overflow.NONE;\r\n        _label.enableWrapText = false;\r\n\r\n        // 添加节点\r\n        this.badgeNode.addChild(backgroundNode);\r\n        this.badgeNode.addChild(this.labelNode);\r\n        this.setPosition(this.position);\r\n\r\n        return this.badgeNode;\r\n    }\r\n\r\n    start() { }\r\n}"]}