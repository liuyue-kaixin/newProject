{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/libs/animator-effect/EffectFinishedRelease.ts"],"names":["Animation","Component","ParticleSystem","_decorator","sp","oops","EffectEvent","ccclass","property","EffectFinishedRelease","maxDuration","onEnable","spine","getComponent","Skeleton","json","skeletonData","skeletonJson","animations","name","setCompleteListener","onRecovery","bind","setAnimation","anims","node","getComponentsInChildren","length","forEach","animator","aniName","defaultClip","aniState","getState","duration","play","scheduleOnce","particles","particle","clear","stop","parent","message","dispatchEvent","Put"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-08-19 15:36:08\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-03-01 18:28:55\r\n */\r\n\r\nimport { Animation, Component, ParticleSystem, _decorator, sp } from 'cc';\r\nimport { oops } from '../../core/Oops';\r\nimport { EffectEvent } from './EffectEvent';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** 动画播放完释放特效 - Animation、ParticleSystem */\r\n@ccclass('EffectFinishedRelease')\r\nexport class EffectFinishedRelease extends Component {\r\n    /** 动画最大播放时间 */\r\n    private maxDuration: number = 0;\r\n\r\n    protected onEnable() {\r\n        // SPINE动画\r\n        let spine = this.getComponent(sp.Skeleton);\r\n        if (spine) {\r\n            // 播放第一个动画\r\n            let json = (spine.skeletonData.skeletonJson as any).animations;\r\n            for (var name in json) {\r\n                spine.setCompleteListener(this.onRecovery.bind(this));\r\n                spine.setAnimation(0, name, false);\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            // COCOS动画\r\n            let anims: Animation[] = this.node.getComponentsInChildren(Animation);\r\n            if (anims.length > 0) {\r\n                anims.forEach(animator => {\r\n                    let aniName = animator.defaultClip?.name;\r\n                    if (aniName) {\r\n                        let aniState = animator.getState(aniName);\r\n                        if (aniState) {\r\n                            let duration = aniState.duration;\r\n                            this.maxDuration = duration > this.maxDuration ? duration : this.maxDuration;\r\n                        }\r\n                    }\r\n                    animator.play();\r\n                });\r\n                this.scheduleOnce(this.onRecovery.bind(this), this.maxDuration);\r\n            }\r\n            // 粒子动画\r\n            else if (ParticleSystem) {\r\n                let particles: ParticleSystem[] = this.node.getComponentsInChildren(ParticleSystem);\r\n                particles.forEach(particle => {\r\n                    particle.clear();\r\n                    particle.stop();\r\n                    particle.play()\r\n\r\n                    let duration: number = particle.duration;\r\n                    this.maxDuration = duration > this.maxDuration ? duration : this.maxDuration;\r\n                });\r\n                this.scheduleOnce(this.onRecovery.bind(this), this.maxDuration);\r\n            }\r\n        }\r\n    }\r\n\r\n    private onRecovery() {\r\n        if (this.node.parent) oops.message.dispatchEvent(EffectEvent.Put, this.node);\r\n    }\r\n}\r\n"]}