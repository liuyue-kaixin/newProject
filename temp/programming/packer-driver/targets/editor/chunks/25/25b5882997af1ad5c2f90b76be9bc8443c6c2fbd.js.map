{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/core/common/audio/AudioManager.ts"],"names":["AudioManager","Component","oops","AudioEffect","AudioMusic","LOCAL_STORE_KEY","local_data","music","effect","_volume_music","_volume_effect","_switch_music","_switch_effect","setMusicComplete","callback","onComplete","playMusic","url","load","playerMusicLoop","loop","progressMusic","progress","value","volumeMusic","volume","switchMusic","stop","playEffect","volumeEffect","switchEffect","resumeAll","play","pauseAll","pause","stopAll","save","volume_music","volume_effect","switch_music","switch_effect","data","JSON","stringify","storage","set","getComponent","addComponent","get","parse","e"],"mappings":"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","sourcesContent":["import { Component } from \"cc\";\r\nimport { oops } from \"../../Oops\";\r\nimport { AudioEffect } from \"./AudioEffect\";\r\nimport { AudioMusic } from \"./AudioMusic\";\r\n\r\nconst LOCAL_STORE_KEY = \"game_audio\";\r\n\r\n/** \r\n * 音频管理\r\n * @example \r\n// 模块功能通过 oops.audio 调用\r\noops.audio.playMusic(\"audios/nocturne\");\r\n */\r\nexport class AudioManager extends Component {\r\n    private local_data: any = {};\r\n\r\n    private music!: AudioMusic;\r\n    private effect!: AudioEffect;\r\n\r\n    private _volume_music: number = 1;\r\n    private _volume_effect: number = 1;\r\n    private _switch_music: boolean = true;\r\n    private _switch_effect: boolean = true;\r\n\r\n    /**\r\n     * 设置背景音乐播放完成回调\r\n     * @param callback 背景音乐播放完成回调\r\n     */\r\n    setMusicComplete(callback: Function | null = null) {\r\n        this.music.onComplete = callback;\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐\r\n     * @param url        资源地址\r\n     * @param callback   音乐播放完成事件\r\n     */\r\n    playMusic(url: string, callback?: Function) {\r\n        if (this._switch_music) {\r\n            this.music.load(url, callback);\r\n        }\r\n    }\r\n\r\n    /** 循环播放背景音乐 */\r\n    playerMusicLoop(url: string) {\r\n        if (this._switch_music) {\r\n            this.music.loop = true;\r\n            this.music.load(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取背景音乐播放进度\r\n     */\r\n    get progressMusic(): number {\r\n        return this.music.progress;\r\n    }\r\n    /**\r\n     * 设置背景乐播放进度\r\n     * @param value     播放进度值\r\n     */\r\n    set progressMusic(value: number) {\r\n        this.music.progress = value;\r\n    }\r\n\r\n    /**\r\n     * 获取背景音乐音量\r\n     */\r\n    get volumeMusic(): number {\r\n        return this._volume_music;\r\n    }\r\n    /** \r\n     * 设置背景音乐音量\r\n     * @param value     音乐音量值\r\n     */\r\n    set volumeMusic(value: number) {\r\n        this._volume_music = value;\r\n        this.music.volume = value;\r\n    }\r\n\r\n    /** \r\n     * 获取背景音乐开关值 \r\n     */\r\n    get switchMusic(): boolean {\r\n        return this._switch_music;\r\n    }\r\n    /** \r\n     * 设置背景音乐开关值\r\n     * @param value     开关值\r\n     */\r\n    set switchMusic(value: boolean) {\r\n        this._switch_music = value;\r\n\r\n        if (value == false)\r\n            this.music.stop();\r\n    }\r\n\r\n    /**\r\n     * 播放音效\r\n     * @param url        资源地址\r\n     */\r\n    playEffect(url: string) {\r\n        if (this._switch_effect) {\r\n            this.effect.load(url);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 获取音效音量 \r\n     */\r\n    get volumeEffect(): number {\r\n        return this._volume_effect;\r\n    }\r\n    /**\r\n     * 设置获取音效音量\r\n     * @param value     音效音量值\r\n     */\r\n    set volumeEffect(value: number) {\r\n        this._volume_effect = value;\r\n        this.effect.volume = value;\r\n    }\r\n\r\n    /** \r\n     * 获取音效开关值 \r\n     */\r\n    get switchEffect(): boolean {\r\n        return this._switch_effect;\r\n    }\r\n    /**\r\n     * 设置音效开关值\r\n     * @param value     音效开关值\r\n     */\r\n    set switchEffect(value: boolean) {\r\n        this._switch_effect = value;\r\n        if (value == false)\r\n            this.effect.stop();\r\n    }\r\n\r\n    /** 恢复当前暂停的音乐与音效播放 */\r\n    resumeAll() {\r\n        if (this.music) {\r\n            this.music.play();\r\n            this.effect.play();\r\n        }\r\n    }\r\n\r\n    /** 暂停当前音乐与音效的播放 */\r\n    pauseAll() {\r\n        if (this.music) {\r\n            this.music.pause();\r\n            this.effect.pause();\r\n        }\r\n    }\r\n\r\n    /** 停止当前音乐与音效的播放 */\r\n    stopAll() {\r\n        if (this.music) {\r\n            this.music.stop();\r\n            this.effect.stop();\r\n        }\r\n    }\r\n\r\n    /** 保存音乐音效的音量、开关配置数据到本地 */\r\n    save() {\r\n        this.local_data.volume_music = this._volume_music;\r\n        this.local_data.volume_effect = this._volume_effect;\r\n        this.local_data.switch_music = this._switch_music;\r\n        this.local_data.switch_effect = this._switch_effect;\r\n\r\n        let data = JSON.stringify(this.local_data);\r\n        oops.storage.set(LOCAL_STORE_KEY, data);\r\n    }\r\n\r\n\r\n    /** 本地加载音乐音效的音量、开关配置数据并设置到游戏中 */\r\n    load() {\r\n        this.music = this.getComponent(AudioMusic) || this.addComponent(AudioMusic)!;\r\n        this.effect = this.getComponent(AudioEffect) || this.addComponent(AudioEffect)!;\r\n\r\n        let data = oops.storage.get(LOCAL_STORE_KEY);\r\n        if (data) {\r\n            try {\r\n                this.local_data = JSON.parse(data);\r\n                this._volume_music = this.local_data.volume_music;\r\n                this._volume_effect = this.local_data.volume_effect;\r\n                this._switch_music = this.local_data.switch_music;\r\n                this._switch_effect = this.local_data.switch_effect;\r\n            }\r\n            catch (e) {\r\n                this.local_data = {};\r\n                this._volume_music = 1;\r\n                this._volume_effect = 1;\r\n                this._switch_music = true;\r\n                this._switch_effect = true;\r\n            }\r\n\r\n            if (this.music) this.music.volume = this._volume_music;\r\n            if (this.effect) this.effect.volume = this._volume_effect;\r\n        }\r\n    }\r\n}"]}