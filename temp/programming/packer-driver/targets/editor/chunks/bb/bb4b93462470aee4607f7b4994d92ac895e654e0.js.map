{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/assets/script/battle/collision/Object.ts"],"names":["Component","Node","PhysicsSystem","UITransform","Vec2","Vec3","_decorator","ccenum","cCollider","ShapeType","cBox","cPolygon","cSphere","ccclass","property","Trigger","Dirty","cObject","group","type","PhysicsGroup","visible","Box","Sphere","Polygon","min","max","step","agent","tryVelocity","velocity","isDirty","RTS","shape","body","onLoad","center","size","radius","points","inst","create","isAgent","weight","neighborDist","maxRadius","maxVelocity","mask","instance","collisionMatrix","insert","setPosition","position","node","T","setRotation","rotation","R","setScale","scale","S","setAnchor","anchor","c0","c1","uts","getComponent","anchorPoint","s","contentSize","x","width","y","height","getRotation","getPosition","getScale","remove","retrieve","removeFromParent","parent","addChild","setAnimation","name","setColor","color","init","onTrigger","b","trigger","enter","stay","exit","hasChangeDirty","flag","hasChangedFlags","TransformBit","POSITION","ROTATION","SCALE","NON","onDestroy","unscheduleAllCallbacks","DEFAULT"],"mappings":"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","sourcesContent":["import { CCInteger, Color, Component, Node, PhysicsSystem, Quat, UITransform, Vec2, Vec3, _decorator, ccenum } from 'cc';\nimport { cBody } from './Body';\nimport { cCollider } from './Collider';\nimport { ShapeType, cBox, cPolygon, cShape, cSphere } from './Shape';\nconst { ccclass, property } = _decorator;\n\nexport enum Trigger {\n    default = 0,\n    enter = 1,\n    stay = 2,\n    exit = 3,\n};\n\nexport enum Dirty {\n    R = 1,\n    T = 2,\n    S = 4,\n    RTS = 7,\n    RS = R | S,\n    NON = 0,\n};\n\nccenum(ShapeType)\n@ccclass('cObject')\nexport class cObject extends Component {\n\n    @property({ group: \"Body\" })\n    trigger: boolean = false; //碰撞开关\n\n    @property({ type: PhysicsSystem.PhysicsGroup, group: \"Body\" })\n    group = PhysicsSystem.PhysicsGroup.DEFAULT; //碰撞分组\n\n    @property({ type: ShapeType, group: \"Shape\" })\n    type: ShapeType = ShapeType.Box; //相交形状类型\n\n    @property({ group: \"Shape\" })\n    center: Vec3 = new Vec3();  //偏移位置，是shape相对node节点的中心偏移\n\n    @property({ group: \"Shape\", visible() { return this.type == ShapeType.Box; } })\n    size: Vec3 = new Vec3(); //方块的长宽高\n\n    @property({ group: \"Shape\", visible() { return this.type == ShapeType.Sphere; } })\n    radius: number = 0; //半径，sphere 或者 capsule\n\n    @property({ type:[Vec2] , group: \"Shape\", visible() { return this.type == ShapeType.Polygon; } })\n    points: Array<Vec2> = [];\n\n\n    @property({ group: \"Agent\" })\n    agent: boolean = false; //Agent开关\n\n    \n    @property({ min:0.01 , max:1.0, step:0.01, group: \"Agent\", visible() { return this.agent; } })\n    weight: number = 0.5; //Agent 权值越小，穿透力越强\n\n    @property({ group: \"Agent\", visible() { return this.agent; } })\n    maxRadius: number = 0; //Agent碰撞半径,小于等于物体体积\n\n    @property({ group: \"Agent\", visible() { return this.agent; } })\n    maxVelocity: number = 0; //Agent 最大速度上限\n    \n    tryVelocity:Vec3 = new Vec3(); //最大期望速度\n    velocity: Vec3 = new Vec3(); //当前实际速度\n    isDirty: Dirty = Dirty.RTS;\n    shape: cShape = null;\n    body: cBody = null;\n\n\n    onLoad() {\n\n        //创建碰撞形状\n        switch (this.type) {\n            case ShapeType.Box:\n                this.shape = new cBox(this.center, this.size);\n                break;\n            case ShapeType.Sphere:\n                this.shape = new cSphere(this.center, this.radius);\n                break;\n            case ShapeType.Polygon:\n                this.shape = new cPolygon(this.center, this.points);\n                break;\n        }\n\n\n        //创建碰撞body容器\n        this.body = cCollider.inst.create(this);\n\n        \n        this.body.shape = this.shape; //绑定碰撞形状\n        this.body.group = this.group; //碰撞分组掩码\n        this.body.isAgent = this.agent; // agent 检测开关\n        this.body.weight = this.weight; // agent 避让优先级\n        this.body.neighborDist = this.maxRadius; // agent 体积半径\n        this.body.maxVelocity = this.maxVelocity; // agent 最大速度\n        this.body.mask = PhysicsSystem.instance.collisionMatrix[this.group];\n\n        //把body加入碰撞管理\n        cCollider.inst.insert(this.body);\n\n\n        this.isDirty = Dirty.RTS;   //首次更新标记\n    }\n\n    //同步位置到body\n    setPosition(position: Vec3) {\n        this.node.position = position;\n        this.isDirty |= Dirty.T;\n    }\n\n    //同步旋转到body\n    setRotation(rotation: Quat) {\n        this.node.rotation = rotation;\n        this.isDirty |= Dirty.R;\n    }\n\n    //同步缩放到body\n    setScale(scale: Vec3) {\n        this.node.scale = scale;\n        this.isDirty |= Dirty.S;\n    }\n\n    //设置瞄点，2D专用\n    setAnchor(anchor: Vec2) {\n\n        let c0 = this.center;\n        let c1 = this.shape.center;\n        let uts = this.node.getComponent(UITransform);\n        if(uts){\n            uts.anchorPoint = anchor;\n\n            let s = uts.contentSize;\n            c1.x = (0.5 - anchor.x) * s.width + c0.x;\n            c1.y = (0.5 - anchor.y) * s.height + c0.y;\n            \n            this.isDirty |= Dirty.T;\n        }\n    }\n\n    getRotation() { return this.node.rotation; }\n    getPosition() { return this.node.position; }\n    getScale() { return this.node.scale; }\n\n    //删除当前节点\n    remove(retrieve: boolean = true) {\n\n        //移除body, retrieve: 是否回收body ？\n        cCollider.inst.remove(this.body, retrieve);\n\n        //从父节点移除\n        this.node.removeFromParent();\n\n        //最后node用户自己控制回收和释放\n        //this.remove().destroy() // 回收body，释放node\n        //pool.push(this.remove(false)); //不回收body , 回收node\n\n        return this.node;\n    }\n\n    //重新添加到父节点\n    insert(parent: Node) {\n\n        //插入body, 强制更新body数据\n        cCollider.inst.insert(this.body, true);\n\n        //添加到父节点\n        if (this.node.parent != parent)\n            parent.addChild(this.node);\n    }\n\n\n    setAnimation(name: string) { }\n    setColor(color: Color) { }\n    init() { }\n\n    //trigger 回调 enter,stay exit\n    onTrigger(b: cBody, trigger: Trigger) {\n\n        switch (trigger) {\n            case Trigger.enter:\n                //onTriggerEnter();\n                break;\n            case Trigger.stay:\n                //onTriggerStay();\n                break;\n            case Trigger.exit:\n                //onTriggerExit();\n                break;\n        }\n    }\n\n    hasChangeDirty(){\n        let isDirty = this.isDirty\n        let flag = this.node.hasChangedFlags;\n        if(flag){\n            if(flag&Node.TransformBit.POSITION) isDirty|=Dirty.T; \n            if(flag&Node.TransformBit.ROTATION) isDirty|=Dirty.R; \n            if(flag&Node.TransformBit.SCALE) isDirty|=Dirty.S; \n        }\n\n        this.isDirty = Dirty.NON;\n        \n        return isDirty;\n    }\n\n    onDestroy() {\n        cCollider.inst.remove(this.body,true);\n        this.unscheduleAllCallbacks();\n        this.shape = null;\n        this.body = null;\n\n    }\n}\n\n"]}