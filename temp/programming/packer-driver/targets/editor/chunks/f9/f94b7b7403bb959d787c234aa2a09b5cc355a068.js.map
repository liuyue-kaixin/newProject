{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/libs/animator-effect/3d/geometry/DrawMeshSector.ts"],"names":["Component","gfx","macro","Material","MeshRenderer","utils","Vec3","_decorator","ccclass","property","DrawMeshSector","type","tooltip","start","createMesh","model","addComponent","segments","Math","floor","angledegree","positions","vertices_count","vertices","Array","angleRad","RAD","angleCur","angledelta","i","cosA","cos","sinA","sin","radius","innerRadius","push","x","y","z","indice_count","indices","vi","uvs","u","v","primitiveMode","PrimitiveMode","TRIANGLE_FAN","attributes","name","AttributeName","ATTR_NORMAL","format","Format","RGB32F","IGeometry","mesh","material","mat"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-02-10 09:50:41\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-04-08 17:22:27\r\n */\r\n\r\nimport { Component, gfx, macro, Material, MeshRenderer, utils, Vec3, _decorator } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** 绘制扇形网格 */\r\n@ccclass('DrawSectorMesh')\r\nexport class DrawMeshSector extends Component {\r\n    @property({ type: Material })\r\n    public mat: Material | null = null;\r\n\r\n    @property({\r\n        tooltip: \"外圈半径\"\r\n    })\r\n    public radius: number = 5;\r\n\r\n    @property({\r\n        tooltip: \"内圈半径\"\r\n    })\r\n    public innerRadius: number = 1;\r\n\r\n    @property({\r\n        tooltip: \"扇形角度\"\r\n    })\r\n    public angledegree: number = 60;\r\n\r\n    start() {\r\n        this.createMesh()\r\n    }\r\n\r\n    createMesh() {\r\n        const model = this.addComponent(MeshRenderer)!;\r\n        const segments: number = Math.floor(this.angledegree / 4) + 1;                        // 三角形个数（平滑度）\r\n\r\n        var positions: number[] = [];                                                         // 顶点位置数据\r\n\r\n        // 组装顶点数据\r\n        var vertices_count: number = segments * 2 + 2;                                        // vertices(顶点)的个数与triangles（索引三角形顶点数）匹配\r\n        var vertices: Array<Vec3> = new Array<Vec3>(vertices_count);\r\n        var angleRad: number = this.angledegree * macro.RAD;                                  // 角度转弧度\r\n        var angleCur: number = angleRad;\r\n        var angledelta: number = angleRad / segments;                                         // 每个三角形的弧度\r\n        for (var i = 0; i < vertices_count; i += 2) {                                         // 扇形每二个三角形之间共用2个顶点，所有生成时每次循环生成二个顶点\r\n            var cosA: number = Math.cos(angleCur);\r\n            var sinA: number = Math.sin(angleCur);\r\n\r\n            vertices[i] = new Vec3(this.radius * cosA, 0, this.radius * sinA);                // 已知扇形外圈半径为斜边求x、z值，得到第一个顶点位置（外圈半径顶点）\r\n            vertices[i + 1] = new Vec3(this.innerRadius * cosA, 0, this.innerRadius * sinA);  // 已知扇形内圈半径为斜边求x、z值，得到第二个顶点位置（内圈半径顶点）\r\n            angleCur -= angledelta;\r\n\r\n            positions.push(vertices[i].x);\r\n            positions.push(vertices[i].y);\r\n            positions.push(vertices[i].z);\r\n            positions.push(vertices[i + 1].x);\r\n            positions.push(vertices[i + 1].y);\r\n            positions.push(vertices[i + 1].z);\r\n        }\r\n\r\n\r\n        // 组装三角形数据\r\n        var indice_count: number = segments * 6;                                               // 扇形外圈与扇形内圈会生成一个四边形，即二个三角形，6个顶点索引\r\n        var indices: Array<number> = new Array<number>(indice_count);\r\n        for (var i = 0, vi = 0; i < indice_count; i += 6, vi += 2) {                           // i为三角形顶点索引号，vi为顶点位置索引\r\n            indices[i] = vi;\r\n            indices[i + 1] = vi + 3;\r\n            indices[i + 2] = vi + 1;\r\n            indices[i + 3] = vi + 2;\r\n            indices[i + 4] = vi + 3;\r\n            indices[i + 5] = vi;\r\n        }\r\n\r\n        // 组装UV数据\r\n        var uvs: number[] = [];\r\n        for (var i = 0; i < vertices_count; i++) {\r\n            var u = vertices[i].x / this.radius / 2 + 0.5\r\n            var v = vertices[i].z / this.radius / 2 + 0.5\r\n            uvs.push(u, v);\r\n        }\r\n\r\n        const primitiveMode = gfx.PrimitiveMode.TRIANGLE_FAN;\r\n        const attributes: any[] = [{\r\n            name: gfx.AttributeName.ATTR_NORMAL,\r\n            format: gfx.Format.RGB32F,\r\n        }];\r\n\r\n        var IGeometry = {\r\n            positions: positions,\r\n            indices: indices,\r\n            uvs: uvs,\r\n            primitiveMode: primitiveMode,           // 默认值效果一样，需要研究作用\r\n            attributes: attributes                  // 默认值效果一样，需要研究作用\r\n        }\r\n\r\n        const mesh = utils.createMesh(IGeometry);\r\n        model.mesh = mesh;\r\n        model.material = this.mat;\r\n    }\r\n}\r\n"]}