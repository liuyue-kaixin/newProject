{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/core/utils/MathUtil.ts"],"names":["MathUtil","sign","x","progress","start","end","t","lerp","numStart","numEnd","lerpAngle","current","target","dAngle","angleTowards","speed","dir","Math","abs","clamp","value","minLimit","maxLimit","probability","random","deg2Rad","PI","rad2Deg"],"mappings":"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","sourcesContent":["/** 数学工具 */\r\nexport class MathUtil {\r\n    /**\r\n     * 角度转弧度\r\n     */\r\n    static deg2Rad: number = Math.PI / 180;\r\n\r\n    /**\r\n     * 弧度转角度\r\n     */\r\n    static rad2Deg: number = 180 / Math.PI;\r\n\r\n    /**\r\n     * 获得随机方向\r\n     * @param x -1为左，1为右\r\n     * @returns \r\n     */\r\n    static sign(x: number) {\r\n        if (x > 0) {\r\n            return 1;\r\n        }\r\n        if (x < 0) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 随时间变化进度值\r\n     * @param start 初始值\r\n     * @param end   结束值\r\n     * @param t     时间\r\n     */\r\n    static progress(start: number, end: number, t: number) {\r\n        return start + (end - start) * t;\r\n    }\r\n\r\n    /**\r\n     * 插值\r\n     * @param numStart 开始数值\r\n     * @param numEnd   结束数值\r\n     * @param t        时间\r\n     */\r\n    static lerp(numStart: number, numEnd: number, t: number): number {\r\n        if (t > 1) {\r\n            t = 1;\r\n        }\r\n        else if (t < 0) {\r\n            t = 0\r\n        }\r\n\r\n        return numStart * (1 - t) + (numEnd * t);\r\n    }\r\n\r\n    /**\r\n     * 角度插值\r\n     * @param angle1 角度1\r\n     * @param angle2 角度2\r\n     * @param t      时间\r\n     */\r\n    static lerpAngle(current: number, target: number, t: number): number {\r\n        current %= 360;\r\n        target %= 360;\r\n\r\n        var dAngle: number = target - current;\r\n\r\n        if (dAngle > 180) {\r\n            target = current - (360 - dAngle);\r\n        }\r\n        else if (dAngle < -180) {\r\n            target = current + (360 + dAngle);\r\n        }\r\n\r\n        return (MathUtil.lerp(current, target, t) % 360 + 360) % 360;\r\n    }\r\n\r\n    /**\r\n     * 按一定的速度从一个角度转向令一个角度\r\n     * @param current 当前角度\r\n     * @param target  目标角度\r\n     * @param speed   速度\r\n     */\r\n    static angleTowards(current: number, target: number, speed: number): number {\r\n        current %= 360;\r\n        target %= 360;\r\n\r\n        var dAngle: number = target - current;\r\n\r\n        if (dAngle > 180) {\r\n            target = current - (360 - dAngle);\r\n        }\r\n        else if (dAngle < -180) {\r\n            target = current + (360 + dAngle);\r\n        }\r\n\r\n        var dir = target - current;\r\n\r\n        if (speed > Math.abs(dir)) {\r\n            return target;\r\n        }\r\n\r\n        return ((current + speed * Math.sign(dir)) % 360 + 360) % 360;\r\n    }\r\n\r\n    /**\r\n     * 获取方位内值，超过时获取对应边界值\r\n     * @param value     值\r\n     * @param minLimit  最小值\r\n     * @param maxLimit  最大值\r\n     */\r\n    static clamp(value: number, minLimit: number, maxLimit: number) {\r\n        if (value < minLimit) {\r\n            return minLimit;\r\n        }\r\n\r\n        if (value > maxLimit) {\r\n            return maxLimit;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 获得一个值的概率\r\n     * @param value 值\r\n     */\r\n    static probability(value: number) {\r\n        return Math.random() < value;\r\n    }\r\n}\r\n"]}