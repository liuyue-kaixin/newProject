{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/libs/model-view/VMCustom.ts"],"names":["Toggle","_decorator","VMBase","VMEnv","ccclass","property","executeInEditMode","menu","help","COMP_ARRAY_CHECK","VMCustom","tooltip","step","range","visible","controller","_timer","_watchComponent","_canWatchComponent","_oldValue","onLoad","checkEditorComponent","editor","node","getComponent","componentName","checkComponentState","onRestore","start","onValueInit","checkArray","i","length","params","comp","componentProperty","console","error","getComponentValue","setComponentValue","value","isChecked","VM","getValue","watchPath","onValueController","newValue","oldValue","setValue","onValueChanged","n","o","pathArr","update","dt","refreshRate"],"mappings":"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","sourcesContent":["import { Toggle, _decorator } from 'cc';\r\nimport { VMBase } from './VMBase';\r\nimport { VMEnv } from './VMEnv';\r\n\r\nconst { ccclass, property, executeInEditMode, menu, help } = _decorator;\r\n\r\n/** 自动检查识别的数组,你可以准备自己的组件放上去自动识别 */\r\nconst COMP_ARRAY_CHECK = [\r\n    ['BhvFrameIndex', 'index', false],\r\n    ['BhvGroupToggle', 'index', false],\r\n    ['BhvRollNumber', 'targetValue', false],\r\n    // 组件名、默认属性、controller值\r\n    ['cc.Label', 'string', false],\r\n    ['cc.RichText', 'string', false],\r\n    ['cc.EditBox', 'string', true],\r\n    ['cc.Slider', 'progress', true],\r\n    ['cc.ProgressBar', 'progress', false],\r\n    ['cc.Toggle', 'isChecked', true]\r\n];\r\n\r\n\r\n/**\r\n * [VM-Custom]\r\n * 自定义数值监听, 可以快速对该节点上任意一个组件上的属性进行双向绑定\r\n */\r\n@ccclass\r\n@executeInEditMode\r\n@menu('ModelViewer/VM-Custom (自定义VM)')\r\n@help('https://gitee.com/dgflash/oops-framework/blob/master/doc/mvvm/VMCustom.md')\r\nexport class VMCustom extends VMBase {\r\n    @property({\r\n        tooltip: '激活controller,以开启双向绑定，否则只能接收消息',\r\n    })\r\n    controller: boolean = false;\r\n\r\n    @property({\r\n        tooltip: \"监视对象路径\"\r\n    })\r\n    watchPath: string = \"\";\r\n\r\n    @property({\r\n        tooltip: '绑定组件的名字'\r\n    })\r\n    componentName: string = \"\";\r\n\r\n    @property({\r\n        tooltip: '组件上需要监听的属性'\r\n    })\r\n    componentProperty: string = \"\";\r\n\r\n    @property({\r\n        tooltip: '刷新间隔频率(只影响脏检查的频率)',\r\n        step: 0.01,\r\n        range: [0, 1],\r\n        visible: function () {\r\n            // @ts-ignore\r\n            return this.controller === true;\r\n        }\r\n    })\r\n    refreshRate: number = 0.1;\r\n\r\n    /** 计时器 */\r\n    private _timer = 0;\r\n\r\n    /** 监听的组件对象 */\r\n    private _watchComponent: any = null;\r\n\r\n    /** 是否能监听组件的数据 */\r\n    private _canWatchComponent: boolean = false;\r\n\r\n    /** 检查的值 */\r\n    private _oldValue: any = null;\r\n\r\n    onLoad() {\r\n        super.onLoad();\r\n\r\n        // 只在运行时检查组件是否缺失可用\r\n        this.checkEditorComponent();//编辑器检查\r\n\r\n        if (VMEnv.editor) return;\r\n\r\n        this._watchComponent = this.node.getComponent(this.componentName);\r\n        this.checkComponentState();\r\n    }\r\n\r\n    onRestore() {\r\n        this.checkEditorComponent();\r\n    }\r\n\r\n    start() {\r\n        //从 watch 的路径中获取一个初始值\r\n        this.onValueInit();\r\n    }\r\n\r\n    // 挂在对应节点后，自动获取组件属性和名字\r\n    checkEditorComponent() {\r\n        if (VMEnv.editor) return;\r\n\r\n        let checkArray = COMP_ARRAY_CHECK;\r\n        for (let i = 0; i < checkArray.length; i++) {\r\n            const params = checkArray[i];\r\n            let comp = this.node.getComponent(params[0] as string);\r\n            if (comp) {\r\n                if (this.componentName == '') this.componentName = params[0] as string;\r\n                if (this.componentProperty == '') this.componentProperty = params[1] as string;\r\n                if (params[2] !== null) this.controller = params[2] as boolean;\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkComponentState() {\r\n        this._canWatchComponent = false;\r\n        if (!this._watchComponent) { console.error('未设置需要监听的组件'); return; }\r\n        if (!this.componentProperty) { console.error('未设置需要监听的组件 的属性'); return; }\r\n        if (this.componentProperty in this._watchComponent === false) { console.error('需要监听的组件的属性不存在'); return; }\r\n        this._canWatchComponent = true;\r\n    }\r\n\r\n    getComponentValue() {\r\n        return this._watchComponent[this.componentProperty];\r\n    }\r\n\r\n    setComponentValue(value: any) {\r\n        // 如果遇到 Toggle 组件就调用上面的方法解决\r\n        if (this.componentName == \"cc.Toggle\") {\r\n            this.node.getComponent(Toggle)!.isChecked = value\r\n        }\r\n        else {\r\n            this._watchComponent[this.componentProperty] = value;\r\n        }\r\n    }\r\n\r\n    /** 初始化获取数据 */\r\n    onValueInit() {\r\n        if (VMEnv.editor) return;\r\n\r\n        //更新信息\r\n        this.setComponentValue(this.VM.getValue(this.watchPath));\r\n    }\r\n\r\n    /** [可重写]组件的值发生变化后，触发更新此值 */\r\n    onValueController(newValue: any, oldValue: any) {\r\n        this.VM.setValue(this.watchPath, newValue);\r\n    }\r\n\r\n    /** [可重写]初始化改变数据 */\r\n    onValueChanged(n: any, o: any, pathArr: string[]) {\r\n        this.setComponentValue(n);\r\n    }\r\n\r\n    update(dt: number) {\r\n        // 脏检查（组件是否存在，是否被激活）\r\n        if (VMEnv.editor) return;\r\n\r\n        //if (this.templateMode == true) return; //todo 模板模式下不能计算  \r\n        if (!this.controller) return;\r\n        if (!this._canWatchComponent || this._watchComponent['enabled'] === false) return;\r\n\r\n        //刷新频率检查\r\n        this._timer += dt;\r\n        if (this._timer < this.refreshRate) return;\r\n        this._timer = 0;\r\n\r\n        let oldValue = this._oldValue;\r\n        let newValue = this.getComponentValue();\r\n\r\n        if (this._oldValue === newValue) return;\r\n        this._oldValue = this.getComponentValue();\r\n        this.onValueController(newValue, oldValue);\r\n    }\r\n}\r\n"]}