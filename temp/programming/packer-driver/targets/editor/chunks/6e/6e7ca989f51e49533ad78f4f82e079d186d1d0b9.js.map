{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/libs/ecs/ECSMask.ts"],"names":["ECSMask","ECSModel","constructor","mask","size","length","Math","ceil","compTid","Uint32Array","set","num","delete","has","or","other","i","and","clear"],"mappings":";;;wCAQaA,O;;;;;;;;;;;;;;AAFJC,MAAAA,Q,iBAAAA,Q;;;;;;AANT;AACA;AACA;AACA;AACA;AACA;;;yBAGaD,O,GAAN,MAAMA,OAAN,CAAc;AAIjBE,QAAAA,WAAW,GAAG;AAAA,eAHNC,IAGM;AAAA,eAFNC,IAEM,GAFS,CAET;AACV,cAAIC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAU;AAAA;AAAA,oCAASC,OAAT,GAAmB,EAA7B,CAAb;AACA,eAAKL,IAAL,GAAY,IAAIM,WAAJ,CAAgBJ,MAAhB,CAAZ;AACA,eAAKD,IAAL,GAAYC,MAAZ;AACH;;AAEDK,QAAAA,GAAG,CAACC,GAAD,EAAc;AACb;AACA;AACA,eAAKR,IAAL,CAAYQ,GAAG,GAAG,EAAP,KAAe,CAA1B,KAAkC,KAAMA,GAAG,GAAG,EAA9C;AACH;;AAEDC,QAAAA,MAAM,CAACD,GAAD,EAAc;AAChB,eAAKR,IAAL,CAAYQ,GAAG,GAAG,EAAP,KAAe,CAA1B,KAAiC,EAAE,KAAMA,GAAG,GAAG,EAAd,CAAjC;AACH;;AAEDE,QAAAA,GAAG,CAACF,GAAD,EAAc;AACb,iBAAO,CAAC,EAAE,KAAKR,IAAL,CAAYQ,GAAG,GAAG,EAAP,KAAe,CAA1B,IAAiC,KAAMA,GAAG,GAAG,EAA/C,CAAR;AACH;;AAEDG,QAAAA,EAAE,CAACC,KAAD,EAAiB;AACf,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,IAAzB,EAA+BY,CAAC,EAAhC,EAAoC;AAChC;AACA,gBAAI,KAAKb,IAAL,CAAUa,CAAV,IAAeD,KAAK,CAACZ,IAAN,CAAWa,CAAX,CAAnB,EAAkC;AAC9B,qBAAO,IAAP;AACH;AACJ;;AACD,iBAAO,KAAP;AACH;;AAEDC,QAAAA,GAAG,CAACF,KAAD,EAAiB;AAChB,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,IAAzB,EAA+BY,CAAC,EAAhC,EAAoC;AAChC,gBAAI,CAAC,KAAKb,IAAL,CAAUa,CAAV,IAAeD,KAAK,CAACZ,IAAN,CAAWa,CAAX,CAAhB,KAAkC,KAAKb,IAAL,CAAUa,CAAV,CAAtC,EAAoD;AAChD,qBAAO,KAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;AAEDE,QAAAA,KAAK,GAAG;AACJ,eAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,IAAzB,EAA+BY,CAAC,EAAhC,EAAoC;AAChC,iBAAKb,IAAL,CAAUa,CAAV,IAAe,CAAf;AACH;AACJ;;AA/CgB,O","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-05-12 14:18:44\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-05-24 11:09:49\r\n */\r\nimport { ECSModel } from \"./ECSModel\";\r\n\r\nexport class ECSMask {\r\n    private mask: Uint32Array;\r\n    private size: number = 0;\r\n\r\n    constructor() {\r\n        let length = Math.ceil(ECSModel.compTid / 31);\r\n        this.mask = new Uint32Array(length);\r\n        this.size = length;\r\n    }\r\n\r\n    set(num: number) {\r\n        // https://stackoverflow.com/questions/34896909/is-it-correct-to-set-bit-31-in-javascript\r\n        // this.mask[((num / 32) >>> 0)] |= ((1 << (num % 32)) >>> 0);\r\n        this.mask[((num / 31) >>> 0)] |= (1 << (num % 31));\r\n    }\r\n\r\n    delete(num: number) {\r\n        this.mask[((num / 31) >>> 0)] &= ~(1 << (num % 31));\r\n    }\r\n\r\n    has(num: number) {\r\n        return !!(this.mask[((num / 31) >>> 0)] & (1 << (num % 31)));\r\n    }\r\n\r\n    or(other: ECSMask) {\r\n        for (let i = 0; i < this.size; i++) {\r\n            // &操作符最大也只能对2^30进行操作，如果对2^31&2^31会得到负数。当然可以(2^31&2^31) >>> 0，这样多了一步右移操作。\r\n            if (this.mask[i] & other.mask[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    and(other: ECSMask) {\r\n        for (let i = 0; i < this.size; i++) {\r\n            if ((this.mask[i] & other.mask[i]) != this.mask[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clear() {\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.mask[i] = 0;\r\n        }\r\n    }\r\n}"]}