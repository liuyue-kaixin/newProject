{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/core/gui/layer/LayerUI.ts"],"names":["LayerUI","error","instantiate","isValid","Node","warn","Widget","oops","ViewParams","DelegateComponent","constructor","name","ui_nodes","Map","ui_cache","widget","addComponent","isAlignLeft","isAlignRight","isAlignTop","isAlignBottom","left","right","top","bottom","alignMode","enabled","getUuid","prefabPath","uuid","replace","add","config","params","callbacks","prefab","viewParams","get","valid","set","load","bundle","vp","node","createNode","res","defaultBundleName","err","childNode","comp","getComponent","parent","remove","isDestroy","removeCache","children","__nodes","i","length","delete","removeByUuid","destroy","getByUuid","arr","push","has","prefabPathOrUUID","find","prefabPathReg","test","result","size","clear","forEach","value","key"],"mappings":"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","sourcesContent":["/*\r\n * UI基础层，允许添加多个预制件节点\r\n * add          : 添加一个预制件节点到层容器中，该方法将返回一个唯一uuid来标识该操作Node节点。\r\n * delete       : 根据uuid删除Node节点，如果节点还在队列中也会被删除, 删除节点可以用gui.delete(node)或this.node.destroy()\r\n * deleteByUuid : 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除。\r\n * get          : 根据uuid获取Node节点，如果节点不存在或者预制件还在队列中，则返回null 。\r\n * getByUuid    : 根据预制件路径获取当前显示的该预制件的所有Node节点数组。\r\n * has          : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\r\n * find         : 判断当前层是否包含 uuid或预制件路径对应的Node节点。\r\n * size         : 当前层上显示的所有Node节点数。\r\n * clear        : 清除所有Node节点，队列当中未创建的任务也会被清除。\r\n */\r\nimport { error, instantiate, isValid, Node, Prefab, warn, Widget } from \"cc\";\r\nimport { oops } from \"../../Oops\";\r\nimport { UICallbacks, ViewParams } from \"./Defines\";\r\nimport { DelegateComponent } from \"./DelegateComponent\";\r\nimport { UIConfig } from \"./LayerManager\";\r\n\r\n/** 界面层对象 */\r\nexport class LayerUI extends Node {\r\n    /** 界面节点集合 */\r\n    protected ui_nodes = new Map<string, ViewParams>();\r\n    /** 被移除的界面缓存数据 */\r\n    protected ui_cache = new Map<string, ViewParams>();\r\n\r\n    /**\r\n     * UI基础层，允许添加多个预制件节点\r\n     * @param name 该层名\r\n     * @param container 容器Node\r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n\r\n        var widget: Widget = this.addComponent(Widget);\r\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignTop = widget.isAlignBottom = true;\r\n        widget.left = widget.right = widget.top = widget.bottom = 0;\r\n        widget.alignMode = 2;\r\n        widget.enabled = true;\r\n    }\r\n\r\n    /** 构造一个唯一标识UUID */\r\n    protected getUuid(prefabPath: string): string {\r\n        var uuid = `${this.name}_${prefabPath}`;\r\n        return uuid.replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * 添加一个预制件节点到层容器中，该方法将返回一个唯一`uuid`来标识该操作节点\r\n     * @param prefabPath 预制件路径\r\n     * @param params     自定义参数\r\n     * @param callbacks  回调函数对象，可选\r\n     */\r\n    add(config: UIConfig, params?: any, callbacks?: UICallbacks): string {\r\n        let prefabPath = config.prefab;\r\n        var uuid = this.getUuid(prefabPath);\r\n        var viewParams = this.ui_nodes.get(uuid);\r\n\r\n        if (viewParams && viewParams.valid) {\r\n            warn(`路径为【${prefabPath}】的预制重复加载`);\r\n            return \"\";\r\n        }\r\n\r\n        if (viewParams == null) {\r\n            viewParams = new ViewParams();\r\n            viewParams.uuid = uuid;\r\n            viewParams.prefabPath = prefabPath;\r\n            this.ui_nodes.set(viewParams.uuid, viewParams);\r\n        }\r\n\r\n        viewParams.params = params ?? {};\r\n        viewParams.callbacks = callbacks ?? {};\r\n        viewParams.valid = true;\r\n\r\n        this.load(viewParams, config.bundle)\r\n\r\n        return uuid;\r\n    }\r\n\r\n    /**\r\n     * 加载界面资源\r\n     * @param viewParams 显示参数\r\n     * @param bundle     远程资源包名，如果为空就是默认本地资源包\r\n     */\r\n    protected load(viewParams: ViewParams, bundle?: string) {\r\n        var vp: ViewParams = this.ui_nodes.get(viewParams.uuid)!;\r\n        if (vp && vp.node) {\r\n            this.createNode(vp);\r\n        }\r\n        else {\r\n            // 优先加载配置的指定资源包中资源，如果没配置则加载默认资源包资源\r\n            bundle = bundle || oops.res.defaultBundleName;\r\n            oops.res.load(bundle, viewParams.prefabPath, (err: Error | null, res: Prefab) => {\r\n                if (err) {\r\n                    error(err);\r\n                }\r\n\r\n                let childNode: Node = instantiate(res);\r\n                viewParams.node = childNode;\r\n\r\n                let comp: DelegateComponent = childNode.addComponent(DelegateComponent);\r\n                comp.viewParams = viewParams;\r\n\r\n                this.createNode(viewParams);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建界面节点\r\n     * @param viewParams  视图参数\r\n     */\r\n    protected createNode(viewParams: ViewParams) {\r\n        viewParams.valid = true;\r\n\r\n        let comp: DelegateComponent = viewParams.node.getComponent(DelegateComponent)!;\r\n        comp.add();\r\n        viewParams.node.parent = this;\r\n\r\n        return viewParams.node;\r\n    }\r\n\r\n    /**\r\n     * 根据预制件路径删除，预制件如在队列中也会被删除，如果该预制件存在多个也会一起删除\r\n     * @param prefabPath   预制路径\r\n     * @param isDestroy    移除后是否释放\r\n     */\r\n    remove(prefabPath: string, isDestroy: boolean): void {\r\n        // 验证是否删除后台缓存界面\r\n        if (isDestroy) this.removeCache(prefabPath);\r\n\r\n        // 界面移出舞台\r\n        let children = this.__nodes();\r\n        for (let i = 0; i < children.length; i++) {\r\n            let viewParams = children[i].viewParams;\r\n            if (viewParams.prefabPath === prefabPath) {\r\n                if (isDestroy) {\r\n                    // 直接释放界面\r\n                    this.ui_nodes.delete(viewParams.uuid);\r\n                }\r\n                else {\r\n                    // 不释放界面，缓存起来待下次使用\r\n                    this.ui_cache.set(viewParams.prefabPath, viewParams);\r\n                }\r\n\r\n                children[i].remove(isDestroy);\r\n                viewParams.valid = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据唯一标识删除节点，如果节点还在队列中也会被删除\r\n     * @param uuid  唯一标识\r\n     */\r\n    protected removeByUuid(uuid: string, isDestroy: boolean): void {\r\n        var viewParams = this.ui_nodes.get(uuid);\r\n        if (viewParams) {\r\n            if (isDestroy)\r\n                this.ui_nodes.delete(viewParams.uuid);\r\n\r\n            var childNode = viewParams.node;\r\n            var comp = childNode.getComponent(DelegateComponent)!;\r\n            comp.remove(isDestroy);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 删除缓存的界面，当缓存界面被移除舞台时，可通过此方法删除缓存界面\r\n     */\r\n    private removeCache(prefabPath: string) {\r\n        let viewParams = this.ui_cache.get(prefabPath);\r\n        if (viewParams) {\r\n            this.ui_nodes.delete(viewParams.uuid);\r\n            this.ui_cache.delete(prefabPath);\r\n            var childNode = viewParams.node;\r\n            childNode.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据唯一标识获取节点，如果节点不存在或者还在队列中，则返回null \r\n     * @param uuid  唯一标识\r\n     */\r\n    getByUuid(uuid: string): Node {\r\n        let children = this.__nodes();\r\n        for (let comp of children) {\r\n            if (comp.viewParams && comp.viewParams.uuid === uuid) {\r\n                return comp.node;\r\n            }\r\n        }\r\n        return null!;\r\n    }\r\n\r\n    /**\r\n     * 根据预制件路径获取当前显示的该预制件的所有Node节点数组\r\n     * @param prefabPath \r\n     */\r\n    get(prefabPath: string): Array<Node> {\r\n        let arr: Array<Node> = [];\r\n        let children = this.__nodes();\r\n        for (let comp of children) {\r\n            if (comp.viewParams.prefabPath === prefabPath) {\r\n                arr.push(comp.node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 判断当前层是否包含 uuid或预制件路径对应的Node节点\r\n     * @param prefabPathOrUUID 预制件路径或者UUID\r\n     */\r\n    has(prefabPathOrUUID: string): boolean {\r\n        let children = this.__nodes();\r\n        for (let comp of children) {\r\n            if (comp.viewParams.uuid === prefabPathOrUUID || comp.viewParams.prefabPath === prefabPathOrUUID) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 获取当前层包含指定正则匹配的Node节点。\r\n     * @param prefabPathReg 匹配预制件路径的正则表达式对象\r\n     */\r\n    find(prefabPathReg: RegExp): Node[] {\r\n        let arr: Node[] = [];\r\n        let children = this.__nodes();\r\n        for (let comp of children) {\r\n            if (prefabPathReg.test(comp.viewParams.prefabPath)) {\r\n                arr.push(comp.node);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /** 获取当前层所有窗口事件触发组件 */\r\n    protected __nodes(): Array<DelegateComponent> {\r\n        let result: Array<DelegateComponent> = [];\r\n        let children = this.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            let comp = children[i].getComponent(DelegateComponent);\r\n            if (comp && comp.viewParams && comp.viewParams.valid && isValid(comp)) {\r\n                result.push(comp);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** 层节点数量 */\r\n    size(): number {\r\n        return this.children.length;\r\n    }\r\n\r\n    /**\r\n     * 清除所有节点，队列当中的也删除\r\n     * @param isDestroy  移除后是否释放\r\n     */\r\n    clear(isDestroy: boolean): void {\r\n        // 清除所有显示的界面\r\n        this.ui_nodes.forEach((value: ViewParams, key: string) => {\r\n            this.removeByUuid(value.uuid, isDestroy);\r\n            value.valid = false;\r\n        });\r\n        this.ui_nodes.clear();\r\n\r\n        // 清除缓存中的界面\r\n        if (isDestroy) {\r\n            this.ui_cache.forEach((value: ViewParams, prefabPath: string) => {\r\n                this.removeCache(prefabPath);\r\n            });\r\n        }\r\n    }\r\n}"]}