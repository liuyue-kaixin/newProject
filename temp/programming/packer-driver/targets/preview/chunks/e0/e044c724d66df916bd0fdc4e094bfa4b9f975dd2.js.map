{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/assets/script/game/account/Account.ts"],"names":["oops","ecs","GameEvent","Account","register","Entity","init","addEvent","destroy","removeEvent","message","on","GameServerConnected","onHandler","off","event","args","getPlayer","connect","dispatchEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAOSA,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,G,iBAAAA,G;;AACAC,MAAAA,S,iBAAAA,S;;;;;;AATT;AACA;AACA;AACA;AACA;AACA;;;AAMA;AACA;AACA;AACA;AACA;AACA;yBAEaC,O,WADZ;AAAA;AAAA,sBAAIC,QAAJ,CAAa,SAAb,C,gBAAD,MACaD,OADb,SAC6B;AAAA;AAAA,sBAAIE,MADjC,CACwC;AAE1BC,QAAAA,IAAI,GAAG;AACb,eAAKC,QAAL;AACH;;AAEDC,QAAAA,OAAO,GAAS;AACZ,eAAKC,WAAL;AACA,gBAAMD,OAAN;AACH;AAED;;;AACQD,QAAAA,QAAQ,GAAG;AACf;AAAA;AAAA,4BAAKG,OAAL,CAAaC,EAAb,CAAgB;AAAA;AAAA,sCAAUC,mBAA1B,EAA+C,KAAKC,SAApD,EAA+D,IAA/D;AACH;AAED;;;AACQJ,QAAAA,WAAW,GAAG;AAClB;AAAA;AAAA,4BAAKC,OAAL,CAAaI,GAAb,CAAiB;AAAA;AAAA,sCAAUF,mBAA3B,EAAgD,KAAKC,SAArD,EAAgE,IAAhE;AACH;;AAEOA,QAAAA,SAAS,CAACE,KAAD,EAAgBC,IAAhB,EAA2B;AACxC,kBAAQD,KAAR;AACI,iBAAK;AAAA;AAAA,wCAAUH,mBAAf;AACI,mBAAKK,SAAL;AACA;AAHR;AAKH;AAED;;;AACAC,QAAAA,OAAO,GAAG;AACN;AACA;AAEA;AACA;AAAA;AAAA,4BAAKR,OAAL,CAAaS,aAAb,CAA2B;AAAA;AAAA,sCAAUP,mBAArC;AACH;AAED;;;AACAK,QAAAA,SAAS,GAAG,CACR;AACH;;AAzCmC,O,eA4CxC;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["/*\n * @Author: dgflash\n * @Date: 2021-11-11 17:45:23\n * @LastEditors: dgflash\n * @LastEditTime: 2022-08-01 13:49:37\n */\n\nimport { oops } from \"../../../../extensions/oops-plugin-framework/assets/core/Oops\";\nimport { ecs } from \"../../../../extensions/oops-plugin-framework/assets/libs/ecs/ECS\";\nimport { GameEvent } from \"../common/config/GameEvent\";\n\n/**\n * 账号模块\n * 1、连接游戏服务器\n * 2、登录玩家帐号，获取玩家信息\n * 3、断线重连接\n */\n@ecs.register('Account')\nexport class Account extends ecs.Entity {\n\n    protected init() {\n        this.addEvent();\n    }\n\n    destroy(): void {\n        this.removeEvent();\n        super.destroy();\n    }\n\n    /** 添加全局消息事件 */\n    private addEvent() {\n        oops.message.on(GameEvent.GameServerConnected, this.onHandler, this);\n    }\n\n    /** 移除全局消息事件 */\n    private removeEvent() {\n        oops.message.off(GameEvent.GameServerConnected, this.onHandler, this);\n    }\n\n    private onHandler(event: string, args: any) {\n        switch (event) {\n            case GameEvent.GameServerConnected:\n                this.getPlayer();\n                break;\n        }\n    }\n\n    /** 连接游戏服务器 */\n    connect() {\n        // netChannel.gameCreate();\n        // netChannel.gameConnect();\n\n        // 无网状态下测试代码，有网络时会通过触发网络连接成功事件对接后续流程\n        oops.message.dispatchEvent(GameEvent.GameServerConnected)\n    }\n\n    /** 获取玩家信息 */\n    getPlayer() {\n        // this.add(AccountNetDataComp);\n    }\n}\n\n// export class EcsAccountSystem extends ecs.System {\n//     constructor() {\n//         super();\n\n//         this.add(new AccountNetDataSystem());\n//     }\n// }\n"]}