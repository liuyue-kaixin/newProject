{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/libs/animator/core/AnimatorParams.ts"],"names":["AnimatorParams","ParamType","constructor","dataArr","_paramMap","Map","forEach","data","param","type","value","init","set","getParamType","key","get","setNumber","NUMBER","setBool","BOOLEAN","setTrigger","TRIGGER","resetTrigger","autoTrigger","AUTO_TRIGGER","resetAutoTrigger","resetAllAutoTrigger","getNumber","getBool","getTrigger","getAutoTrigger"],"mappings":"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","sourcesContent":["import { ParamType } from \"./AnimatorCondition\";\r\n\r\n/**\r\n * 参数结构\r\n */\r\ninterface Param {\r\n    type: ParamType;\r\n    value: number;\r\n}\r\n\r\n/**\r\n * 状态机参数\r\n */\r\nexport default class AnimatorParams {\r\n    private _paramMap: Map<string, Param> = new Map();\r\n\r\n    constructor(dataArr: any[]) {\r\n        dataArr.forEach((data: any) => {\r\n            let param: Param = {\r\n                type: data.type,\r\n                value: data.init\r\n            };\r\n            this._paramMap.set(data.param, param);\r\n        });\r\n    }\r\n\r\n    public getParamType(key: string): ParamType {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param) {\r\n            return param.type;\r\n        } else {\r\n            return null!;\r\n        }\r\n    }\r\n\r\n    public setNumber(key: string, value: number) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.NUMBER) {\r\n            param.value = value;\r\n        }\r\n    }\r\n\r\n    public setBool(key: string, value: boolean) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.BOOLEAN) {\r\n            param.value = value ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    public setTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            param.value = 1;\r\n        }\r\n    }\r\n\r\n    public resetTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            param.value = 0;\r\n        }\r\n    }\r\n\r\n    public autoTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            param.value = 1;\r\n        }\r\n    }\r\n\r\n    public resetAutoTrigger(key: string) {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            param.value = 0;\r\n        }\r\n    }\r\n\r\n    public resetAllAutoTrigger() {\r\n        this._paramMap.forEach((param: Param, key: string) => {\r\n            if (param.type === ParamType.AUTO_TRIGGER) {\r\n                param.value = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    public getNumber(key: string): number {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.NUMBER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getBool(key: string): number {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.BOOLEAN) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getTrigger(key: string): number {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.TRIGGER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getAutoTrigger(key: string): number {\r\n        let param: Param = this._paramMap.get(key)!;\r\n        if (param && param.type === ParamType.AUTO_TRIGGER) {\r\n            return param.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n"]}