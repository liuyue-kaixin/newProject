{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/libs/animator/AnimatorCustomization.ts"],"names":["_decorator","AnimatorBase","ccclass","property","menu","disallowMultiple","AnimatorCustomization","override","visible","onInit","_hasInit","initArgs","AssetRawUrl","initJson","json","playAnimation","animName","loop","_animationPlayer","scaleTime","scale"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACFC,MAAAA,Y;;;;;;;;;OAGD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,IAArB;AAA2BC,QAAAA;AAA3B,O,GAAgDL,U;AAEtD;AACA;AACA;;yBAIqBM,qB,WADpBF,IAAI,CAAC,gCAAD,C,UAGAD,QAAQ,CAAC;AAAEI,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,C,EALZN,O,UACAG,gB,mCADD,MAGqBC,qBAHrB;AAAA;AAAA,wCAGgE;AAAA;AAAA;;AAC5D;AAD4D;AAAA;;AAK5D;AACJ;AACA;AACA;AACA;AACA;AACA;AACWG,QAAAA,MAAM,GAAqH;AAC9H,cAAI,KAAKC,QAAT,EAAmB;AACf;AACH;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,eAAKC,QAAL,CAAc,YAAd;;AAEA,cAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC3B,iBAAKC,QAAL,CAAc,KAAKD,WAAL,CAAiBE,IAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACcC,QAAAA,aAAa,CAACC,QAAD,EAAmBC,IAAnB,EAAkC;AACrD,cAAI,KAAKC,gBAAL,IAAyBF,QAA7B,EAAuC;AACnC,iBAAKE,gBAAL,CAAsBH,aAAtB,CAAoCC,QAApC,EAA8CC,IAA9C;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACcE,QAAAA,SAAS,CAACC,KAAD,EAAgB;AAC/B,cAAI,KAAKF,gBAAT,EAA2B;AACvB,iBAAKA,gBAAL,CAAsBC,SAAtB,CAAgCC,KAAhC;AACH;AACJ;;AA9C2D,O;;;;;iBAG3B,K","sourcesContent":["import { _decorator } from \"cc\";\r\nimport AnimatorBase, { AnimationPlayer } from \"./core/AnimatorBase\";\r\nimport { AnimatorStateLogic } from \"./core/AnimatorStateLogic\";\r\n\r\nconst { ccclass, property, menu, disallowMultiple } = _decorator;\r\n\r\n/** \r\n * 自定义动画控制的状态机组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@menu('animator/AnimatorCustomization')\r\nexport default class AnimatorCustomization extends AnimatorBase {\r\n    /** 此组件必须主动调用onInit初始化 */\r\n    @property({ override: true, visible: false })\r\n    protected PlayOnStart: boolean = false;\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @override\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        if (this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this.initArgs(...args);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @override\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n        if (this._animationPlayer && animName) {\r\n            this._animationPlayer.playAnimation(animName, loop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 缩放动画播放速率\r\n     * @override\r\n     * @param scale 缩放倍率\r\n     */\r\n    protected scaleTime(scale: number) {\r\n        if (this._animationPlayer) {\r\n            this._animationPlayer.scaleTime(scale);\r\n        }\r\n    }\r\n}\r\n"]}