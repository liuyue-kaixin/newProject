{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/libs/animator/AnimatorAnimation.ts"],"names":["Animation","_decorator","AnimatorBase","ccclass","property","requireComponent","disallowMultiple","menu","AnimatorAnimation","_animation","_animState","_wrapModeMap","Map","start","PlayOnStart","_hasInit","getComponent","on","EventType","FINISHED","onAnimFinished","LASTFRAME","AssetRawUrl","initJson","json","onInit","initArgs","playAnimation","animName","loop","play","getState","has","set","wrapMode","get","scaleTime","scale","speed"],"mappings":"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","sourcesContent":["import { Animation, AnimationState, _decorator } from \"cc\";\r\nimport AnimatorBase, { AnimationPlayer } from \"./core/AnimatorBase\";\r\nimport { AnimatorStateLogic } from \"./core/AnimatorStateLogic\";\r\n\r\nconst { ccclass, property, requireComponent, disallowMultiple, menu } = _decorator;\r\n\r\n/** \r\n * Cocos Animation状态机组件\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@requireComponent(Animation)\r\n@menu('animator/AnimatorAnimation')\r\nexport default class AnimatorAnimation extends AnimatorBase {\r\n    /** Animation组件 */\r\n    protected _animation: Animation = null!;\r\n    /** 当前的动画实例 */\r\n    protected _animState: AnimationState = null!;\r\n    /** 记录初始的wrapmode */\r\n    protected _wrapModeMap: Map<AnimationState, number> = new Map();\r\n\r\n    protected start() {\r\n        if (!this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this._animation = this.getComponent(Animation)!;\r\n        this._animation.on(Animation.EventType.FINISHED, this.onAnimFinished, this);\r\n        this._animation.on(Animation.EventType.LASTFRAME, this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @override\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        if (this.PlayOnStart || this._hasInit) {\r\n            return;\r\n        }\r\n        this._hasInit = true;\r\n\r\n        this.initArgs(...args);\r\n\r\n        this._animation = this.getComponent(Animation)!;\r\n        this._animation.on(Animation.EventType.FINISHED, this.onAnimFinished, this);\r\n        this._animation.on(Animation.EventType.LASTFRAME, this.onAnimFinished, this);\r\n\r\n        if (this.AssetRawUrl !== null) {\r\n            this.initJson(this.AssetRawUrl.json);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @override\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n        if (!animName) {\r\n            return;\r\n        }\r\n\r\n        this._animation.play(animName);\r\n        this._animState = this._animation.getState(animName);\r\n        if (!this._animState) {\r\n            return;\r\n        }\r\n        if (!this._wrapModeMap.has(this._animState)) {\r\n            this._wrapModeMap.set(this._animState, this._animState.wrapMode);\r\n        }\r\n        this._animState.wrapMode = loop ? 2 : this._wrapModeMap.get(this._animState)!;\r\n    }\r\n\r\n    /**\r\n     * 缩放动画播放速率\r\n     * @override\r\n     * @param scale 缩放倍率\r\n     */\r\n    protected scaleTime(scale: number) {\r\n        if (this._animState) {\r\n            this._animState.speed = scale;\r\n        }\r\n    }\r\n}\r\n"]}