{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/libs/animator/core/AnimatorState.ts"],"names":["AnimatorState","AnimatorTransition","name","_name","motion","_motion","loop","_loop","multi","_multi","speed","_speed","value","constructor","data","ac","_transitions","_ac","state","multiplier","i","transitions","length","transition","isValid","push","checkAndTrans","check","doTrans"],"mappings":";;;kDAMqBA,a;;;;;;;;;;;;;;;;;;AALdC,MAAAA,kB;;;;;;;AAEP;AACA;AACA;yBACqBD,a,GAAN,MAAMA,aAAN,CAAoB;AAU/B;AACe,YAAJE,IAAI,GAAG;AAAE,iBAAO,KAAKC,KAAZ;AAAoB;AACxC;;;AACiB,YAANC,MAAM,GAAG;AAAE,iBAAO,KAAKC,OAAZ;AAAsB;AAC5C;;;AACe,YAAJC,IAAI,GAAG;AAAE,iBAAO,KAAKC,KAAZ;AAAoB;AACxC;;;AACgB,YAALC,KAAK,GAAG;AAAE,iBAAO,KAAKC,MAAZ;AAAqB;AAC1C;;;AACgB,YAALC,KAAK,GAAG;AAAE,iBAAO,KAAKC,MAAZ;AAAqB;;AAC1B,YAALD,KAAK,CAACE,KAAD,EAAgB;AAAE,eAAKD,MAAL,GAAcC,KAAd;AAAsB;;AAExDC,QAAAA,WAAW,CAACC,IAAD,EAAYC,EAAZ,EAAoC;AAAA,eArBvCZ,KAqBuC,GArBvB,EAqBuB;AAAA,eApBvCE,OAoBuC,GApBrB,EAoBqB;AAAA,eAnBvCE,KAmBuC,GAnBtB,KAmBsB;AAAA,eAlBvCI,MAkBuC,GAlBtB,CAkBsB;AAAA,eAjBvCF,MAiBuC,GAjBtB,EAiBsB;AAAA,eAfvCO,YAeuC,GAfF,EAeE;AAAA,eAdvCC,GAcuC,GAdb,IAca;AAC3C,eAAKd,KAAL,GAAaW,IAAI,CAACI,KAAlB;AACA,eAAKb,OAAL,GAAeS,IAAI,CAACV,MAAL,IAAe,EAA9B;AACA,eAAKG,KAAL,GAAaO,IAAI,CAACR,IAAL,IAAa,KAA1B;AACA,eAAKK,MAAL,GAAcG,IAAI,CAACJ,KAAL,IAAc,CAA5B;AACA,eAAKD,MAAL,GAAcK,IAAI,CAACK,UAAL,IAAmB,EAAjC;AAEA,eAAKF,GAAL,GAAWF,EAAX;;AAEA,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,WAAL,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9C,gBAAIG,UAA8B,GAAG;AAAA;AAAA,0DAAuBT,IAAI,CAACO,WAAL,CAAiBD,CAAjB,CAAvB,EAA4CL,EAA5C,CAArC;AACAQ,YAAAA,UAAU,CAACC,OAAX,MAAwB,KAAKR,YAAL,CAAkBS,IAAlB,CAAuBF,UAAvB,CAAxB;AACH;AACJ;AAED;AACJ;AACA;;;AACWG,QAAAA,aAAa,GAAG;AACnB,eAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,YAAL,CAAkBM,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AAC/C,gBAAIG,UAA8B,GAAG,KAAKP,YAAL,CAAkBI,CAAlB,CAArC;;AACA,gBAAIG,UAAU,IAAIA,UAAU,CAACI,KAAX,EAAlB,EAAsC;AAClCJ,cAAAA,UAAU,CAACK,OAAX;AACA;AACH;AACJ;AACJ;;AAhD8B,O","sourcesContent":["import AnimatorController from \"./AnimatorController\";\r\nimport AnimatorTransition from \"./AnimatorTransition\";\r\n\r\n/**\r\n * 状态管理类\r\n */\r\nexport default class AnimatorState {\r\n    private _name: string = \"\";\r\n    private _motion: string = \"\";\r\n    private _loop: boolean = false;\r\n    private _speed: number = 1;\r\n    private _multi: string = \"\";\r\n\r\n    private _transitions: AnimatorTransition[] = [];\r\n    private _ac: AnimatorController = null!;\r\n\r\n    /** 状态名 */\r\n    public get name() { return this._name; }\r\n    /** 动画名 */\r\n    public get motion() { return this._motion; }\r\n    /** 动画是否循环播放 */\r\n    public get loop() { return this._loop; }\r\n    /** 动画播放速度的混合参数 */\r\n    public get multi() { return this._multi; }\r\n    /** 动画播放速度 */\r\n    public get speed() { return this._speed; }\r\n    public set speed(value: number) { this._speed = value; }\r\n\r\n    constructor(data: any, ac: AnimatorController) {\r\n        this._name = data.state;\r\n        this._motion = data.motion || '';\r\n        this._loop = data.loop || false;\r\n        this._speed = data.speed || 1;\r\n        this._multi = data.multiplier || '';\r\n\r\n        this._ac = ac;\r\n\r\n        for (let i = 0; i < data.transitions.length; i++) {\r\n            let transition: AnimatorTransition = new AnimatorTransition(data.transitions[i], ac);\r\n            transition.isValid() && this._transitions.push(transition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断各个分支是否满足条件，满足则转换状态\r\n     */\r\n    public checkAndTrans() {\r\n        for (let i = 0; i < this._transitions.length; i++) {\r\n            let transition: AnimatorTransition = this._transitions[i];\r\n            if (transition && transition.check()) {\r\n                transition.doTrans();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}