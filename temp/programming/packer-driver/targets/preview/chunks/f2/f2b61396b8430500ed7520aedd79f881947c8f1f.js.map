{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/core/utils/PhysicsUtil.ts"],"names":["GroupItem","PhysicsUtil","value","_value","name","_name","mask","constructor","setNodeLayer","item","node","layer","children","forEach","n","DEFAULT","GAME_OBJECT_SELECT","GAME_OWNER"],"mappings":";;;kEASaA,S,EAgCAC,W;;;;;;;;;;;;;;;;;;AAzCb;AACA;AACA;AACA;AACA;AACA;;AAGA;;;2BACaD,S,GAAN,MAAMA,SAAN,CAAgB;AAEnB;AACS,YAALE,KAAK,GAAW;AAChB,iBAAO,KAAKC,MAAZ;AACH;;AAGD;AACQ,YAAJC,IAAI,GAAW;AACf,iBAAO,KAAKC,KAAZ;AACH;AAED;;;AACQ,YAAJC,IAAI,GAAW;AACf,iBAAO,KAAK,KAAKH,MAAjB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,WAAW,CAACL,KAAD,EAAgBE,IAAhB,EAA8B;AAAA,eAtBjCD,MAsBiC;AAAA,eAhBjCE,KAgBiC;AACrC,eAAKF,MAAL,GAAcD,KAAd;AACA,eAAKG,KAAL,GAAaD,IAAb;AACH;;AA1BkB,O;AA6BvB;AACA;AACA;;;6BACaH,W,GAAN,MAAMA,WAAN,CAAkB;AAQF,eAAZO,YAAY,CAACC,IAAD,EAAkBC,IAAlB,EAA8B;AAC7CA,UAAAA,IAAI,CAACC,KAAL,GAAaF,IAAI,CAACH,IAAlB;AACAI,UAAAA,IAAI,CAACE,QAAL,CAAcC,OAAd,CAAsBC,CAAC,IAAI;AACvBA,YAAAA,CAAC,CAACH,KAAF,GAAUF,IAAI,CAACH,IAAf;AACAL,YAAAA,WAAW,CAACO,YAAZ,CAAyBC,IAAzB,EAA+BK,CAA/B;AACH,WAHD;AAIH;;AAdoB,O;;AACrB;AADSb,MAAAA,W,CAEFc,O,GAAU,IAAIf,SAAJ,CAAc,CAAd,EAAiB,SAAjB,C;;AACjB;AAHSC,MAAAA,W,CAIFe,kB,GAAqB,IAAIhB,SAAJ,CAAc,CAAd,EAAiB,oBAAjB,C;;AAC5B;AALSC,MAAAA,W,CAMFgB,U,GAAa,IAAIjB,SAAJ,CAAc,CAAd,EAAiB,YAAjB,C","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-07-21 17:30:59\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-09-02 14:40:28\r\n */\r\nimport { Node } from \"cc\";\r\n\r\n/** 物理分组数据 */\r\nexport class GroupItem {\r\n    private _value: number;\r\n    /** 分组值 */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    private _name!: string;\r\n    /** 分组名 */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /** 碰撞掩码 */\r\n    get mask(): number {\r\n        return 1 << this._value;\r\n    }\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param value 分组值\r\n     * @param name  分组名\r\n     */\r\n    constructor(value: number, name: string) {\r\n        this._value = value;\r\n        this._name = name;\r\n    }\r\n}\r\n\r\n/***\r\n * 为了方便使用，将编辑器中的物理分组定义到代码。如果编辑器中有修改，确保同步到这里。\r\n */\r\nexport class PhysicsUtil {\r\n    /** 默认物理分组 */\r\n    static DEFAULT = new GroupItem(0, 'DEFAULT');\r\n    /** 能通过屏幕触摸中发出的射线检查到的游戏对象 */\r\n    static GAME_OBJECT_SELECT = new GroupItem(1, 'GAME_OBJECT_SELECT');\r\n    /** 玩家自己 */\r\n    static GAME_OWNER = new GroupItem(2, 'GAME_OWNER');\r\n\r\n    static setNodeLayer(item: GroupItem, node: Node) {\r\n        node.layer = item.mask;\r\n        node.children.forEach(n => {\r\n            n.layer = item.mask;\r\n            PhysicsUtil.setNodeLayer(item, n);\r\n        });\r\n    }\r\n}"]}