{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/module/common/GameComponent.ts"],"names":["Component","_decorator","oops","EventDispatcher","ViewUtil","ccclass","GameComponent","_event","nodes","Map","resPaths","resPathsDir","event","on","listener","object","off","dispatchEvent","args","getNode","name","get","nodeTreeInfoLite","node","getRes","path","type","bundleName","res","loadAsync","paths","Array","forEach","set","defaultBundleName","load","onProgress","onComplete","loadDir","dir","release","value","key","clear","releaseDir","playMusic","url","audio","playerMusicLoop","playEffect","onDestroy","destroy"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-04-14 17:08:01\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-12-13 11:36:00\r\n */\r\nimport { Asset, Component, Node, __private, _decorator } from \"cc\";\r\nimport { oops } from \"../../core/Oops\";\r\nimport { EventDispatcher } from \"../../core/common/event/EventDispatcher\";\r\nimport { ListenerFunc } from \"../../core/common/event/EventMessage\";\r\nimport { AssetType, CompleteCallback, ProgressCallback } from \"../../core/common/loader/ResLoader\";\r\nimport { ViewUtil } from \"../../core/utils/ViewUtil\";\r\n\r\nconst { ccclass } = _decorator;\r\n\r\n/** 游戏显示对象组件模板 */\r\n@ccclass(\"GameComponent\")\r\nexport class GameComponent extends Component {\r\n    //#region 全局事件管理\r\n    private _event: EventDispatcher | null = null;\r\n    /** 全局事件管理器 */\r\n    private get event(): EventDispatcher {\r\n        if (this._event == null) this._event = new EventDispatcher();\r\n        return this._event;\r\n    }\r\n\r\n    /**\r\n     * 注册全局事件\r\n     * @param event       事件名\r\n     * @param listener    处理事件的侦听器函数\r\n     * @param object      侦听函数绑定的this对象\r\n     */\r\n    on(event: string, listener: ListenerFunc, object: any) {\r\n        this.event.on(event, listener, object);\r\n    }\r\n\r\n    /**\r\n     * 移除全局事件\r\n     * @param event      事件名\r\n     */\r\n    off(event: string) {\r\n        this.event.off(event);\r\n    }\r\n\r\n    /** \r\n     * 触发全局事件 \r\n     * @param event      事件名\r\n     * @param args       事件参数\r\n     */\r\n    dispatchEvent(event: string, args: any = null) {\r\n        this.event.dispatchEvent(event, args);\r\n    }\r\n    //#endregion\r\n\r\n    //#region 预制节点管理\r\n    /** 摊平的节点集合（不能重名） */\r\n    private nodes: Map<string, Node> = new Map();\r\n\r\n    /** 通过节点名获取预制上的节点，整个预制不能有重名节点 */\r\n    getNode(name: string): Node | undefined {\r\n        return this.nodes.get(name);\r\n    }\r\n\r\n    /** 平摊所有节点存到Map<string, Node>中通过get(name: string)方法获取 */\r\n    nodeTreeInfoLite() {\r\n        ViewUtil.nodeTreeInfoLite(this.node, this.nodes);\r\n    }\r\n    //#endregion\r\n\r\n    //#region 资源加载管理\r\n    /** 资源路径 */\r\n    private resPaths: Map<string, string> = new Map();\r\n    private resPathsDir: Map<string, string> = new Map();\r\n\r\n    /**\r\n     * 获取资源\r\n     * @param path          资源路径\r\n     * @param type          资源类型\r\n     * @param bundleName    远程资源包名\r\n     */\r\n    getRes<T extends Asset>(path: string, type?: __private._types_globals__Constructor<T> | null, bundleName?: string): T | null {\r\n        return oops.res.get(path, type, bundleName);\r\n    }\r\n\r\n    /** 异步加载资源 */\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    loadAsync<T extends Asset>(\r\n        bundleName: string,\r\n        paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n    ) {\r\n        if (paths instanceof Array) {\r\n            paths.forEach(path => {\r\n                this.resPaths.set(path, oops.res.defaultBundleName);\r\n            });\r\n        }\r\n        else {\r\n            this.resPaths.set(bundleName, oops.res.defaultBundleName);\r\n        }\r\n        return oops.res.loadAsync(bundleName, paths, type);\r\n    }\r\n\r\n    /** 加载资源 */\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(bundleName: string, paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], onProgress: ProgressCallback | null, onComplete: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(paths: string | string[], type: AssetType<T> | null, onComplete?: CompleteCallback<T> | null): void;\r\n    load<T extends Asset>(\r\n        bundleName: string,\r\n        paths?: string | string[] | AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        onProgress?: ProgressCallback | CompleteCallback | null,\r\n        onComplete?: CompleteCallback | null,\r\n    ) {\r\n        if (paths instanceof Array) {\r\n            paths.forEach(path => {\r\n                this.resPaths.set(path, oops.res.defaultBundleName);\r\n            });\r\n        }\r\n        else {\r\n            this.resPaths.set(bundleName, oops.res.defaultBundleName);\r\n        }\r\n        oops.res.load(bundleName, paths, type, onProgress, onComplete);\r\n    }\r\n\r\n    /** 加载文件名中资源 */\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(bundleName: string, dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, type: AssetType<T> | null, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, onProgress: ProgressCallback | null, onComplete: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(dir: string, type: AssetType<T> | null, onComplete?: CompleteCallback<T[]> | null): void;\r\n    loadDir<T extends Asset>(\r\n        bundleName: string,\r\n        dir?: string | AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        type?: AssetType<T> | ProgressCallback | CompleteCallback | null,\r\n        onProgress?: ProgressCallback | CompleteCallback | null,\r\n        onComplete?: CompleteCallback | null,\r\n    ) {\r\n        if (typeof dir === \"string\") {\r\n            this.resPathsDir.set(dir, oops.res.defaultBundleName);\r\n        }\r\n        else {\r\n            this.resPathsDir.set(bundleName, oops.res.defaultBundleName);\r\n        }\r\n        oops.res.loadDir(bundleName, dir, type, onProgress, onComplete);\r\n    }\r\n\r\n    /** 释放一个资源 */\r\n    release() {\r\n        this.resPaths.forEach((value: string, key: string) => {\r\n            oops.res.release(key, value);\r\n        });\r\n        this.resPaths.clear();\r\n        this.resPaths = null!;\r\n    }\r\n\r\n    /** 释放一个文件夹的资源 */\r\n    releaseDir() {\r\n        this.resPathsDir.forEach((value: string, key: string) => {\r\n            oops.res.releaseDir(key, value);\r\n        });\r\n        this.resPathsDir.clear();\r\n        this.resPathsDir = null!;\r\n    }\r\n    //#endregion\r\n\r\n    //#region 音频播放管理\r\n    /**\r\n     * 循环播放背景音乐 - 音频资源会在对象释放时自动释放\r\n     * @param url       资源地址\r\n     */\r\n    playMusic(url: string) {\r\n        this.resPaths.set(url, oops.res.defaultBundleName);\r\n        oops.audio.playerMusicLoop(url);\r\n    }\r\n\r\n    /**\r\n    * 播放音效 - 音频资源会在对象释放时自动释放\r\n    * @param url        资源地址\r\n    */\r\n    playEffect(url: string) {\r\n        this.resPaths.set(url, oops.res.defaultBundleName);\r\n        oops.audio.playEffect(url);\r\n    }\r\n    //#endregion\r\n\r\n    protected onDestroy() {\r\n        // 释放消息对象\r\n        if (this._event) {\r\n            this._event.destroy();\r\n            this._event = null;\r\n        }\r\n\r\n        // 节点引用数据清除\r\n        this.nodes.clear();\r\n\r\n        // 自动释放资源\r\n        this.release();\r\n        this.releaseDir();\r\n    }\r\n}"]}