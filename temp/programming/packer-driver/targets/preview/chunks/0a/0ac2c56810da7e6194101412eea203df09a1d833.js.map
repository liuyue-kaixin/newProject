{"version":3,"sources":["file:///Volumes/SSD/ccProject/assets/script/battle/demos/bulletHell/ghost.ts"],"names":["_decorator","instantiate","Quat","Vec3","Trigger","Enemy","ccclass","property","tempPos","tempRot","Ghost","get","prefab","ghost","pools","pop","node","getComponent","put","push","remove","onTrigger","b","trigger","exit","group","BULLET","PLAYER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;AAAoCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AAEtDC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,K,iBAAAA,K;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAExBQ,MAAAA,O,GAAU,IAAIL,IAAJ,E;AACVM,MAAAA,O,GAAU,IAAIP,IAAJ,E;;uBAEHQ,K,WADZJ,OAAO,CAAC,OAAD,C,2BAAR,MACaI,KADb;AAAA;AAAA,0BACiC;AAInB,eAAHC,GAAG,CAACC,MAAD,EAAiB;AACvB,cAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,GAAX,MAAoB,IAAhC;;AACA,cAAI,CAACF,KAAL,EAAY;AACR,gBAAIG,IAAI,GAAGf,WAAW,CAACW,MAAD,CAAtB;AACAC,YAAAA,KAAK,GAAGG,IAAI,CAACC,YAAL,CAAkBP,KAAlB,CAAR;AACH;;AAED,iBAAOG,KAAP;AACH;;AAES,eAAHK,GAAG,CAACL,KAAD,EAAe;AACrB;AACA,eAAKC,KAAL,CAAWK,IAAX,CAAgBN,KAAhB,EAFqB,CAGrB;;AACAA,UAAAA,KAAK,CAACO,MAAN,CAAa,KAAb;AACH;;AAGDC,QAAAA,SAAS,CAACC,CAAD,EAAUC,OAAV,EAA4B;AACjC,cAAGA,OAAO,IAAI;AAAA;AAAA,kCAAQC,IAAtB,EAA6B;;AAE7B,kBAAQF,CAAC,CAACG,KAAV;AACI,iBAAK,KAAKC,MAAV;AAAkB;AACd;;AACJ,iBAAK,KAAKC,MAAV;AAAkB;AACd;AAJR,WAHiC,CAUjC;;;AACAjB,UAAAA,KAAK,CAACQ,GAAN,CAAU,IAAV,EAXiC,CAajC;AACA;AACH;;AArC4B,O,UAGtBJ,K,GAAsB,E","sourcesContent":["import { _decorator, instantiate, PhysicsSystem, Prefab, Quat, Vec3 } from 'cc';\nimport { cBody } from '../../collision/Body';\nimport { Trigger } from '../../collision/Object';\nimport { Enemy } from './enemy';\nimport { Player } from './player';\nconst { ccclass, property } = _decorator;\n\nconst tempPos = new Vec3();\nconst tempRot = new Quat();\n@ccclass('Ghost')\nexport class Ghost extends Enemy {\n\n    //缓存池管理\n    static pools: Array<Ghost> = [];\n    static get(prefab: Prefab) {\n        let ghost = this.pools.pop() || null;\n        if (!ghost) {\n            let node = instantiate(prefab);\n            ghost = node.getComponent(Ghost);\n        }\n\n        return ghost;\n    }\n\n    static put(ghost: Ghost) {\n        //压入缓存池管理节点\n        this.pools.push(ghost);\n        //移除node不回收body\n        ghost.remove(false);\n    }\n\n\n    onTrigger(b: cBody,trigger: Trigger) {\n        if(trigger == Trigger.exit ) return;\n\n        switch (b.group) {\n            case this.BULLET: //碰到子弹\n                break;\n            case this.PLAYER: //碰到player\n                break;\n        }\n\n        //碰撞自我加收\n        Ghost.put(this);\n\n        //播放死亡特效\n        //.........\n    }\n}\n\n"]}