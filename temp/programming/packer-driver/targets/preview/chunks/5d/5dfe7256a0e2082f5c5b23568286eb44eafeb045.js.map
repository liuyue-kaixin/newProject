{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/assets/script/battle/collision/Collider.ts"],"names":["cCollider","Agent","cBody","Dirty","Trigger","ShapeSupport","id","pools","axis","frameID","insertID","bodys","isDirty","pairs","Map","inst","_inst","create","obj","body","pop","object","insert","force","inCollider","push","isRemove","isRetrieve","fid","RTS","remove","retrieve","reset","i","length","clear","update","dt","reBuild","triggers","process","n","m","agentMgr","j","N","bi","A","aabb","an","am","mask","group","upper","objA","bj","lower","B","objB","a2b","b2a","isAgent","check","at","shape","type","bt","onTrigger","endTrigger","state","trigger","data","get","undefined","stay","fida","fidb","enter","set","a","b","deletes","size","entries","values","next","value","exit","delete","change","preBuildAxis","sort","l","v","w","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","x","y","z","updateBound","s","sx","sy","sz","cX","cY","cZ","invN","X","Y","Z"],"mappings":"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","sourcesContent":["import { Agent } from \"./Agent\";\nimport { cBody } from \"./Body\";\nimport { Dirty, Trigger, cObject } from \"./Object\";\nimport { ShapeSupport } from \"./Shape\";\n\n\n\nexport class cCollider {\n\n    private id: number = 0;\n    private pools: Array<cBody> = [];\n\n    private static _inst: cCollider = null;\n    static get inst() {\n        if (this._inst == null) {\n            this._inst = new cCollider();\n        }\n        return this._inst;\n    }\n\n    private axis: number = -1;\n    private frameID: number = 0;\n    private insertID: number = 0;\n    private bodys: Array<cBody> = [];\n    private isDirty: boolean = false;\n    private pairs: Map<number, any> = new Map();\n\n    create(obj: cObject) {\n\n        let body = this.pools.pop();\n        if (!body) {\n            body = new cBody(obj);\n            body.id = this.id++;\n            return body;\n        }\n\n        body.object = obj;\n        return body;\n    }\n\n\n    //插入 body, force 强制更新数据\n    insert(body: cBody, force: boolean = false) {\n\n        if (!body) return;\n\n        if (!body.inCollider) {\n            //不在列表,重新插入\n            this.bodys.push(body);\n            body.inCollider = true;\n        }\n\n        //复位状态\n       \n        body.isRemove = false;\n        body.isRetrieve = false;\n        body.fid = this.insertID++;\n\n        //强制刷新body数据\n        if (force && body.object) {\n            body.object.isDirty = Dirty.RTS;\n            // body.updateBound(Dirty.RTS);\n        }\n    }\n\n    //删除 body: 提前标记删除 , update中执行移除\n    remove(body: cBody, retrieve: boolean = false) {\n\n        if (!body) return;\n        body.isRemove = true; //标记移除body\n        body.isRetrieve = retrieve; //是否回收复用body?\n    }\n\n    //重置回收bodys\n    reset() { \n        this.axis = -1;\n        this.frameID = 0;\n        this.isDirty = true;\n\n        //回收bodys\n        let bodys = this.bodys;\n        for (let i = bodys.length - 1; i >= 0; i--) {\n            let body = bodys[i];\n            this.pools.push(body);\n            body.clear();\n        }\n        bodys.length = 0;\n\n    }\n\n    //退出释放bodys\n    clear() { \n        this.id = 0;\n        this.axis = -1;\n        this.frameID = 0;\n        this.isDirty = true;\n        this.pools.length = 0;\n\n        //清空bodys\n        let bodys = this.bodys;\n        for (let i = bodys.length - 1; i >= 0; i--) {\n            bodys[i].clear();\n        }\n        bodys.length = 0;\n    }\n\n\n    update(dt: number) {\n        this.reBuild();\n        this.triggers();\n        Agent.inst.process(this.bodys);\n    }\n\n    //相交碰撞测试\n    private triggers(): void { //resultCB: (a: Body, b: Body) => void\n\n        ++this.frameID;\n       \n        let axis = this.axis,\n            n = (axis >> 2) & 0x3,\n            m = (axis >> 4) & 0x3;\n\n        let bodys = this.bodys;\n        let agentMgr = Agent.inst;\n        let i = 0, j = 0, N = bodys.length;\n        for (i = 0; i < N; i++) {\n\n            let bi = bodys[i];\n            if (bi.isRemove) continue;\n\n            let A = bi.aabb,\n                an = A[n],\n                am = A[m],\n                mask = bi.mask,\n                group = bi.group,\n                upper = bi.upper,\n                objA = bi.object;\n\n            for (j = i + 1; j < N; j++) {\n\n                let bj = bodys[j];\n                if (bj.isRemove) continue;\n\n                if (upper <= bj.lower) {\n                    break;\n                }\n\n                let B = bj.aabb, objB = bj.object;\n                let a2b = mask & bj.group, b2a = bj.mask & group;\n\n                if (!(an > B[n + 3] || B[n] > A[n + 3] || am > B[m + 3] || B[m] > A[m + 3])) {\n                    \n                    if(bi.isAgent && bj.isAgent){\n                        agentMgr.check(bi,bj);\n                        agentMgr.check(bj,bi);\n                    }\n\n                    if((a2b || b2a)){\n                        let at = objA.shape.type;\n                        let bt = objB.shape.type;\n                        if (at > bt) {\n                            if (!ShapeSupport[bt | at](bj, bi))\n                                continue; \n                        } else {\n                            if (!ShapeSupport[at | bt](bi, bj))\n                                continue; \n                        }\n\n                        if(bi.id < bj.id)\n                            this.onTrigger(bj,bi,(b2a?1:0)|(a2b?2:0));\n                        else\n                            this.onTrigger(bi,bj,(a2b?1:0)|(b2a?2:0));\n                    }\n                }\n            }\n        }\n        \n        this.endTrigger();\n    }\n\n    private onTrigger(bi:cBody,bj:cBody,state:number){\n        \n        let trigger = 0;\n        let id = (bi.id * (bi.id + 1) >> 1) + bj.id - 1;\n\n        let pairs = this.pairs;\n        let data = pairs.get(id);\n        if (data !== undefined) {\n            trigger = Trigger.stay;\n            if(data.fida != bi.fid || data.fidb != bj.fid){\n                trigger = Trigger.enter;\n                data.fida = bi.fid;\n                data.fidb = bj.fid;\n            }\n            data.frameID = this.frameID;\n            data.state = state;\n        } else {\n            trigger = Trigger.enter;\n            pairs.set(id, { id: id, a: bi, b: bj, fida:bi.fid , fidb:bj.fid, frameID: this.frameID, state:state });\n        }\n\n        let objA = bi.object;\n        if ((state&1) && objA && objA.trigger && !bi.isRemove) {\n            objA.onTrigger(bj, trigger);\n        }\n\n        let objB = bj.object;\n        if ((state&2) && objB && objB.trigger && !bj.isRemove) {\n            objB.onTrigger(bi, trigger);\n        }\n    }\n\n    private endTrigger(){\n\n        let deletes = [];\n        let pairs = this.pairs;\n     \n        let length = pairs.size;\n        let frameID = this.frameID;\n        let entries = pairs.values();\n        for (let i = 0; i < length; i++) {\n            let data = entries.next().value;\n            let bi = data.a;\n            let bj = data.b;\n\n            if (data.frameID != frameID || bi.isRemove || bj.isRemove) {\n\n                if(data.fida == bi.fid && data.fidb == bj.fid){\n                    let objA = bi.object;\n                    if (objA && objA.trigger && !bi.isRemove)\n                        objA.onTrigger(bj, Trigger.exit);\n                    \n                    let objB = bj.object;\n                    if (objB && objB.trigger && !bj.isRemove)\n                        objB.onTrigger(bi, Trigger.exit);\n                }\n\n                deletes.push(data.id);\n            }\n        }\n\n        length = deletes.length - 1;\n        while(length >= 0){\n            pairs.delete(deletes[length--]);\n        }\n        deletes.length = 0;\n    }\n\n    private reBuild(): void {\n\n        let change = false;\n        let axis = this.preBuildAxis();\n        if ((axis & 0x3) != (this.axis & 0x3) || this.axis < 0) {\n            this.axis = axis;\n            change = true;\n        }\n\n        if (change || this.isDirty) {\n\n            this.isDirty = false;\n\n            let bodys = this.bodys;\n            axis = this.axis & 0x3;\n            for (let i = 0, N = bodys.length; i !== N; i++) {\n                let bi = bodys[i];\n                let aabb = bi.aabb;\n                bi.lower = aabb[axis];\n                bi.upper = aabb[axis + 3];\n            }\n\n            if (!change)\n                this.sort(bodys);\n            else\n                bodys.sort((a: cBody, b: cBody) => a.lower - b.lower);\n\n        }\n    }\n\n\n    private sort(a: Array<cBody>): void {\n\n        let i = 0, j = 0, l = 0;\n        for (i = 1, l = a.length; i < l; i++) {\n            let v = a[i];\n            let lower = v.lower;\n            for (j = i - 1; j >= 0; j--) {\n                let w = a[j];\n                if (w.lower <= lower) {\n                    break;\n                }\n                a[j + 1] = w;\n            }\n\n            if (j + 1 != i) {\n                a[j + 1] = v;\n            }\n        }\n    }\n\n\n    private preBuildAxis(): number {\n\n        let axis = 0,\n            sumX = 0, sumX2 = 0,\n            sumY = 0, sumY2 = 0,\n            sumZ = 0, sumZ2 = 0,\n            x = 0.0, y = 0.0, z = 0.0;\n\n        let bodys = this.bodys;\n        let N = bodys.length;\n\n        let length = 0;\n        let isDirty = false;\n        for (let i = 0; i < N; i++) {\n\n            let body = bodys[i];\n\n            //删除body\n            if (body.isRemove) {\n                //是否回收body\n                if (body.isRetrieve) {\n                    this.pools.push(body);\n                    body.clear();\n                }\n                //已从collider移除\n                body.inCollider = false;\n                continue;\n            }\n\n            if ((++length) <= i) {\n                bodys[length - 1] = body;\n            }\n            if (body.updateBound()) isDirty = true;\n\n            let s = body.aabb,\n                sx = (s[3] - s[0]),\n                sy = (s[4] - s[1]),\n                sz = (s[5] - s[2]);\n            x += sx * sx, y += sy * sy; z += sz * sz;\n\n            let cX = (s[3] + s[0]) * 0.5;\n            sumX += cX, sumX2 += cX * cX;\n\n            let cY = (s[4] + s[1]) * 0.5;\n            sumY += cY, sumY2 += cY * cY;\n\n            let cZ = (s[5] + s[2]) * 0.5;\n            sumZ += cZ, sumZ2 += cZ * cZ;\n        }\n\n        this.bodys.length = length;\n        this.isDirty = isDirty;\n\n        let invN = 1.0 / length;\n        x = x > 0 ? length / x : 0;\n        y = y > 0 ? length / y : 0;\n        z = z > 0 ? length / z : 0;\n\n        let X = (sumX2 - sumX * sumX * invN) * x;\n        let Y = (sumY2 - sumY * sumY * invN) * y;\n        let Z = (sumZ2 - sumZ * sumZ * invN) * z;\n\n        if (X == 0) X = x; if (Y == 0) Y = y; if (Z == 0) Z = z;\n\n        if (X > Y) {\n            if (X > Z) {\n                axis = 0;\n                axis |= (Y > Z ? (1 << 2) | (2 << 4) : (1 << 4) | (2 << 2));//yz:zy;\n            } else {\n                axis = 2;\n                axis |= (X > Y ? (0 << 2) | (1 << 4) : (0 << 4) | (1 << 2));//xy:yx;\n            }\n        } else if (Y > Z) {\n            axis = 1;\n            axis |= (X > Z ? (0 << 2) | (2 << 4) : (0 << 4) | (2 << 2));//xz:zx;\n        } else {\n            axis = 2;\n            axis |= (X > Y ? (0 << 2) | (1 << 4) : (0 << 4) | (1 << 2));//xy:yx;\n        }\n\n\n        return axis;\n    }\n\n}\n\n"]}