{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/libs/network/NetProtocolProtobuf.ts"],"names":["NetProtocolProtobuf","getHeadlen","getHearbeat","getPackageLen","msg","toString","length","checkResponsePackage","respProtocol","handlerResponsePackage","code","isCompress","data","JSON","parse","handlerRequestPackage","reqProtocol","rspCmd","cmd","callback","getPackageId"],"mappings":";;;8BASaA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATb;AACA;AACA;AACA;AACA;AACA;;;AAGA;qCACaA,mB,GAAN,MAAMA,mBAAN,CAAqD;AACxDC,QAAAA,UAAU,GAAW;AACjB,iBAAO,CAAP;AACH;;AAEDC,QAAAA,WAAW,GAAY;AACnB,iBAAO,EAAP;AACH;;AAEDC,QAAAA,aAAa,CAACC,GAAD,EAAuB;AAChC,iBAAOA,GAAG,CAACC,QAAJ,GAAeC,MAAtB;AACH;;AAEDC,QAAAA,oBAAoB,CAACC,YAAD,EAA2C;AAC3D,iBAAO,IAAP;AACH;;AAEDC,QAAAA,sBAAsB,CAACD,YAAD,EAA2C;AAC7D,cAAIA,YAAY,CAACE,IAAb,IAAqB,CAAzB,EAA4B;AACxB,gBAAIF,YAAY,CAACG,UAAjB,EAA6B,CACzB;AACA;AACH;;AACDH,YAAAA,YAAY,CAACI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACI,IAAxB,CAApB;AAEA,mBAAO,IAAP;AACH,WARD,MASK;AACD,mBAAO,KAAP;AACH;AACJ;;AAEDG,QAAAA,qBAAqB,CAACC,WAAD,EAAwC;AACzD,cAAIC,MAAM,GAAGD,WAAW,CAACE,GAAzB;AACAF,UAAAA,WAAW,CAACG,QAAZ,GAAuBF,MAAvB;;AACA,cAAID,WAAW,CAACL,UAAhB,EAA4B,CACxB;AACA;AACH;;AACD,iBAAOM,MAAP;AACH;;AAEDG,QAAAA,YAAY,CAACZ,YAAD,EAA0C;AAClD,iBAAOA,YAAY,CAACW,QAApB;AACH;;AA5CuD,O","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-04-21 13:48:44\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-04-21 14:11:25\r\n */\r\nimport { IProtocolHelper, IRequestProtocol, IResponseProtocol, NetData } from \"./NetInterface\";\r\n\r\n/** Protobuf.js 数据压缩协议 */\r\nexport class NetProtocolProtobuf implements IProtocolHelper {\r\n    getHeadlen(): number {\r\n        return 0;\r\n    }\r\n\r\n    getHearbeat(): NetData {\r\n        return \"\";\r\n    }\r\n\r\n    getPackageLen(msg: NetData): number {\r\n        return msg.toString().length;\r\n    }\r\n\r\n    checkResponsePackage(respProtocol: IResponseProtocol): boolean {\r\n        return true;\r\n    }\r\n\r\n    handlerResponsePackage(respProtocol: IResponseProtocol): boolean {\r\n        if (respProtocol.code == 1) {\r\n            if (respProtocol.isCompress) {\r\n                // respProtocol.data\r\n                // const p = Person.decode(msg);\r\n            }\r\n            respProtocol.data = JSON.parse(respProtocol.data);\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handlerRequestPackage(reqProtocol: IRequestProtocol): string {\r\n        var rspCmd = reqProtocol.cmd;\r\n        reqProtocol.callback = rspCmd;\r\n        if (reqProtocol.isCompress) {\r\n            // reqProtocol.data\r\n            // const msg = Person.encode({ name: \"dgflash\", id: 1 }).finish();\r\n        }\r\n        return rspCmd;\r\n    }\r\n\r\n    getPackageId(respProtocol: IResponseProtocol): string {\r\n        return respProtocol.callback!;\r\n    }\r\n}"]}