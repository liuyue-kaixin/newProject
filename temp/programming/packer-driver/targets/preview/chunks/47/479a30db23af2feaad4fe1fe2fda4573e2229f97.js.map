{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/libs/model-view/VMBase.ts"],"names":["Component","log","_decorator","DEBUG","VM","VMEnv","DEBUG_WATCH_PATH","ccclass","help","VMBase","watchPath","templateMode","watchPathArr","templateValueArr","onLoad","editor","paths","split","i","length","p","index","node","parent","children","findIndex","n","toString","join","pathArr","path","name","onEnable","setMultPathEvent","bindPath","onValueChanged","onValueInit","onDisable","unbindPath","enabled","arr","o"],"mappings":"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","sourcesContent":["import { Component, log, _decorator } from 'cc';\r\nimport { DEBUG } from 'cc/env';\r\nimport { VM } from './ViewModel';\r\nimport { VMEnv } from './VMEnv';\r\n\r\n// 用来处理通知数据的层级\r\n// 控制旗下子节点的数据\r\n// 目前只是起到一个识别组件的作用，之后会抽象很多功能在这里面\r\n// player.equips.* 可以自动根据所在父对象的位置设置顺序\r\n\r\nconst DEBUG_WATCH_PATH: boolean = false;\r\n\r\nconst { ccclass, help } = _decorator;\r\n\r\n/**\r\n * watchPath 的基础，只提供绑定功能 和 对应的数据更新函数\r\n */\r\n@ccclass\r\n@help('https://gitee.com/dgflash/oops-framework/blob/master/doc/mvvm/VMBase.md')\r\nexport class VMBase extends Component {\r\n    /**VM管理 */\r\n    VM = VM;\r\n\r\n    /** watch 单路径  */\r\n    watchPath: string = '';\r\n\r\n    /** 是否启用模板多路径模式 */\r\n    templateMode: boolean = false;\r\n\r\n    /** watch 多路径 */\r\n    protected watchPathArr: string[] = [];\r\n\r\n    /** 储存模板多路径的值 */\r\n    protected templateValueArr: any[] = [];\r\n\r\n    /**\r\n     * 如果需要重写onLoad 方法，请根据顺序调用 super.onLoad()，执行默认方法\r\n     */\r\n    onLoad() {\r\n        if (VMEnv.editor) return;\r\n\r\n        // 提前拆分、并且解析路径\r\n        let paths = this.watchPath.split('.');\r\n        for (let i = 1; i < paths.length; i++) {\r\n            const p = paths[i];\r\n            // 如果发现了路径使用了 * ，则自动去自己的父节点查找自己所在 index 值\r\n            if (p == '*') {\r\n                let index = this.node.parent!.children.findIndex(n => n === this.node);\r\n                if (index <= 0) index = 0;\r\n                paths[i] = index.toString();\r\n                break;\r\n            }\r\n        }\r\n\r\n        // 替换掉原路径\r\n        this.watchPath = paths.join('.');\r\n\r\n        // 提前进行路径数组 的 解析\r\n        let pathArr = this.watchPathArr;\r\n        if (pathArr.length >= 1) {\r\n            for (let i = 0; i < pathArr.length; i++) {\r\n                const path = pathArr[i];\r\n                let paths = path.split('.');\r\n\r\n                for (let i = 1; i < paths.length; i++) {\r\n                    const p = paths[i];\r\n                    if (p == '*') {\r\n                        let index = this.node.parent!.children.findIndex(n => n === this.node);\r\n                        if (index <= 0) index = 0;\r\n                        paths[i] = index.toString();\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                this.watchPathArr[i] = paths.join('.');\r\n            }\r\n        }\r\n\r\n        // 打印出所有绑定的路径，方便调试信息\r\n        if (DEBUG_WATCH_PATH && DEBUG) {\r\n            log('所有路径', this.watchPath ? [this.watchPath] : this.watchPathArr, '<<', this.node.parent!.name + '.' + this.node.name)\r\n        }\r\n\r\n        if (this.watchPath == '' && this.watchPathArr.join('') == '') {\r\n            log('可能未设置路径的节点:', this.node.parent!.name + '.' + this.node.name);\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        if (VMEnv.editor) return;\r\n\r\n        if (this.templateMode) {\r\n            this.setMultPathEvent(true);\r\n        }\r\n        else if (this.watchPath != '') {\r\n            this.VM.bindPath(this.watchPath, this.onValueChanged, this);\r\n        }\r\n\r\n        this.onValueInit();                     // 激活时,调用值初始化\r\n    }\r\n\r\n    onDisable() {\r\n        if (VMEnv.editor) return;\r\n\r\n        if (this.templateMode) {\r\n            this.setMultPathEvent(false);\r\n        }\r\n        else if (this.watchPath != '') {\r\n            this.VM.unbindPath(this.watchPath, this.onValueChanged, this);\r\n        }\r\n    }\r\n\r\n    // 多路径监听方式\r\n    private setMultPathEvent(enabled: boolean = true) {\r\n        if (VMEnv.editor) return;\r\n\r\n        let arr = this.watchPathArr;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const path = arr[i];\r\n            if (enabled) {\r\n                this.VM.bindPath(path, this.onValueChanged, this);\r\n            }\r\n            else {\r\n                this.VM.unbindPath(path, this.onValueChanged, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onValueInit() {\r\n        // 虚方法\r\n    }\r\n\r\n    /**\r\n     * 值变化事件\r\n     * @param n       新值\r\n     * @param o       旧值\r\n     * @param pathArr 对象路径数组\r\n     */\r\n    protected onValueChanged(n: any, o: any, pathArr: string[]) {\r\n\r\n    }\r\n}\r\n"]}