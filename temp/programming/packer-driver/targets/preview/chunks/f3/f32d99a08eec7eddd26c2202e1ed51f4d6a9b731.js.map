{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/libs/model-view/ViewModel.ts"],"names":["ViewModel","VMManager","setValueFromPath","obj","path","value","tag","props","split","i","length","propName","console","error","getValueFromPath","def","director","log","JsonOb","VM_EMIT_HEAD","DEBUG_SHOW_PATH","constructor","data","$data","_tag","active","emitToRootPath","_callback","bind","n","o","name","join","emit","concat","e","setValue","getValue","_mvs","Map","setObjValue","getObjValue","add","activeRootObject","vm","has","get","includes","set","remove","delete","res","addValue","trim","rs","resPath","slice","bindPath","callback","target","useCapture","node","on","unbindPath","off","inactive","forEach","mv","VM"],"mappings":"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","sourcesContent":["import { director, log } from 'cc';\r\nimport { JsonOb } from './JsonOb';\r\n\r\nconst VM_EMIT_HEAD = 'VC:';\r\nconst DEBUG_SHOW_PATH = false;\r\n\r\n/** 通过 .  路径设置值 */\r\nfunction setValueFromPath(obj: any, path: string, value: any, tag: string | null = '') {\r\n    let props = path.split('.');\r\n    for (let i = 0; i < props.length; i++) {\r\n        const propName = props[i];\r\n        if (propName in obj === false) { console.error('[' + propName + '] not find in ' + tag + '.' + path); break; }\r\n        if (i == props.length - 1) {\r\n            obj[propName] = value;\r\n        }\r\n        else {\r\n            obj = obj[propName];\r\n        }\r\n    }\r\n}\r\n\r\n/** 通过 . 路径 获取值 */\r\nfunction getValueFromPath(obj: any, path: string, def?: any, tag: string | null = ''): any {\r\n    let props = path.split('.');\r\n    for (let i = 0; i < props.length; i++) {\r\n        const propName = props[i];\r\n        if ((propName in obj === false)) { console.error('[' + propName + '] not find in ' + tag + '.' + path); return def; }\r\n        obj = obj[propName];\r\n    }\r\n    if (obj === null || typeof obj === \"undefined\") obj = def;//如果g == null 则返回一个默认值\r\n    return obj;\r\n}\r\n\r\n/**\r\n * ModelViewer 类\r\n */\r\nclass ViewModel<T>{\r\n    constructor(data: T, tag: string) {\r\n        new JsonOb(data, this._callback.bind(this));\r\n        this.$data = data;\r\n        this._tag = tag;\r\n    }\r\n\r\n    public $data: T;\r\n\r\n    // 索引值用的标签\r\n    private _tag: string | null = null;\r\n\r\n    /** 激活状态, 将会通过 director.emit 发送值变动的信号, 适合需要屏蔽的情况 */\r\n    public active: boolean = true;\r\n\r\n    /** 是否激活根路径回调通知, 不激活的情况下 只能监听末端路径值来判断是否变化 */\r\n    public emitToRootPath: boolean = false;\r\n\r\n    // 回调函数 请注意 回调的 path 数组是 引用类型，禁止修改\r\n    private _callback(n: any, o: any, path: string[]): void {\r\n        if (this.active == true) {\r\n            let name = VM_EMIT_HEAD + this._tag + '.' + path.join('.')\r\n            if (DEBUG_SHOW_PATH) log('>>', n, o, path);\r\n            director.emit(name, n, o, [this._tag].concat(path));                            // 通知末端路径\r\n\r\n            if (this.emitToRootPath) director.emit(VM_EMIT_HEAD + this._tag, n, o, path);   // 通知主路径\r\n\r\n            if (path.length >= 2) {\r\n                for (let i = 0; i < path.length - 1; i++) {\r\n                    const e = path[i];\r\n                    //log('中端路径');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 通过路径设置数据的方法\r\n    public setValue(path: string, value: any) {\r\n        setValueFromPath(this.$data, path, value, this._tag);\r\n    }\r\n\r\n    // 获取路径的值\r\n    public getValue(path: string, def?: any): any {\r\n        return getValueFromPath(this.$data, path, def, this._tag);\r\n    }\r\n}\r\n\r\n/**\r\n * VM 对象管理器(工厂)\r\n */\r\nclass VMManager {\r\n    private _mvs: Map<string, ViewModel<any>> = new Map<string, ViewModel<any>>();\r\n\r\n    /**\r\n     * 绑定一个数据，并且可以由VM所管理（绑定的数据只能是值类型）\r\n     * @param data 需要绑定的数据\r\n     * @param tag 对应该数据的标签(用于识别为哪个VM，不允许重复)\r\n     * @param activeRootObject 激活主路径通知，可能会有性能影响，一般不使用\r\n     */\r\n    add<T>(data: T, tag: string = 'global', activeRootObject: boolean = false) {\r\n        let vm = new ViewModel<T>(data, tag);\r\n        let has = this._mvs.get(tag);\r\n        if (tag.includes('.')) {\r\n            console.error('cant write . in tag:', tag);\r\n            return;\r\n        }\r\n        if (has) {\r\n            console.error('already set VM tag:' + tag);\r\n            return;\r\n        }\r\n\r\n        vm.emitToRootPath = activeRootObject;\r\n\r\n        this._mvs.set(tag, vm);\r\n    }\r\n\r\n    /**\r\n     * 移除并且销毁 VM 对象\r\n     * @param tag \r\n     */\r\n    remove(tag: string) {\r\n        this._mvs.delete(tag);\r\n    }\r\n\r\n    /**\r\n     * 获取绑定的数据\r\n     * @param tag 数据tag\r\n     */\r\n    get<T>(tag: string): ViewModel<T> | undefined {\r\n        let res = this._mvs.get(tag);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 通过全局路径,而不是 VM 对象来 设置值\r\n     * @param path - 全局取值路径\r\n     * @param value - 需要增加的值\r\n     */\r\n    addValue(path: string, value: any) {\r\n        path = path.trim();//防止空格,自动剔除\r\n        let rs = path.split('.');\r\n        if (rs.length < 2) { console.error('Cant find path:' + path) };\r\n        let vm = this.get(rs[0]);\r\n        if (!vm) { console.error('Cant Set VM:' + rs[0]); return; };\r\n        let resPath = rs.slice(1).join('.');\r\n        vm.setValue(resPath, vm.getValue(resPath) + value);\r\n    }\r\n\r\n    /**\r\n     * 通过全局路径,而不是 VM 对象来 获取值\r\n     * @param path - 全局取值路径\r\n     * @param def - 如果取不到值的返回的默认值\r\n     */\r\n    getValue(path: string, def?: any): any {\r\n        path = path.trim();                 // 防止空格,自动剔除\r\n        let rs = path.split('.');\r\n        if (rs.length < 2) { console.error('Get Value Cant find path:' + path); return; };\r\n        let vm = this.get(rs[0]);\r\n        if (!vm) { console.error('Cant Get VM:' + rs[0]); return; };\r\n        return vm.getValue(rs.slice(1).join('.'), def);\r\n    }\r\n\r\n    /**\r\n     * 通过全局路径,而不是 VM 对象来 设置值\r\n     * @param path - 全局取值路径\r\n     * @param value - 需要设置的值\r\n     */\r\n    setValue(path: string, value: any) {\r\n        path = path.trim();                 // 防止空格,自动剔除\r\n        let rs = path.split('.');\r\n        if (rs.length < 2) { console.error('Set Value Cant find path:' + path); return; };\r\n        let vm = this.get(rs[0]);\r\n        if (!vm) { console.error('Cant Set VM:' + rs[0]); return; };\r\n        vm.setValue(rs.slice(1).join('.'), value);\r\n\r\n    }\r\n\r\n    setObjValue = setValueFromPath;\r\n    getObjValue = getValueFromPath;\r\n\r\n    /** 等同于 director.on */\r\n    bindPath(path: string, callback: Function, target?: any, useCapture?: boolean): void {\r\n        path = path.trim();                 // 防止空格,自动剔除\r\n        if (path == '') {\r\n            console.error(target.node.name, '节点绑定的路径为空');\r\n            return;\r\n        }\r\n        if (path.split('.')[0] === '*') {\r\n            console.error(path, '路径不合法,可能错误覆盖了 VMParent 的onLoad 方法, 或者父节点并未挂载 VMParent 相关的组件脚本');\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        director.on(VM_EMIT_HEAD + path, callback, target, useCapture);\r\n    }\r\n\r\n    /** 等同于 director.off */\r\n    unbindPath(path: string, callback: Function, target?: any): void {\r\n        path = path.trim();//防止空格,自动剔除\r\n        if (path.split('.')[0] === '*') {\r\n            console.error(path, '路径不合法,可能错误覆盖了 VMParent 的onLoad 方法, 或者父节点并未挂载 VMParent 相关的组件脚本');\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        director.off(VM_EMIT_HEAD + path, callback, target);\r\n    }\r\n\r\n    /** 冻结所有标签的 VM，视图将不会受到任何信息 */\r\n    inactive(): void {\r\n        this._mvs.forEach(mv => {\r\n            mv.active = false;\r\n        })\r\n    }\r\n\r\n    /** 激活所有标签的 VM*/\r\n    active(): void {\r\n        this._mvs.forEach(mv => {\r\n            mv.active = false;\r\n        })\r\n    }\r\n}\r\n\r\n//   整数、小数、时间、缩写\r\n\r\n/**\r\n *  VM管理对象,使用文档: \r\n *  https://github.com/wsssheep/cocos_creator_mvvm_tools/blob/master/docs/ViewModelScript.md\r\n */\r\nexport let VM = new VMManager();"]}