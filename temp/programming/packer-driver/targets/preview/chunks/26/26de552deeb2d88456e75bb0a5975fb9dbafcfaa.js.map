{"version":3,"sources":["file:///Volumes/SSD/ccProject/extensions/oops-plugin-framework/assets/core/utils/ArrayUtil.ts"],"names":["ArrayUtil","noRepeated","arr","res","i","length","repeat","j","push","copy2DArray","array","newArray","concat","fisherYatesShuffle","count","index","Math","floor","random","temp","confound","result","slice","sort","flattening","some","v","Array","isArray","apply","removeItem","item","value","splice","combineArrays","array1","array2","getRandomValueInArray"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2021-08-11 16:41:12\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-09-02 14:50:57\r\n */\r\n\r\n/** 数组工具 */\r\nexport class ArrayUtil {\r\n    /**\r\n     * 数组去重，并创建一个新数组返回\r\n     * @param arr  源数组\r\n     */\r\n    static noRepeated(arr: any[]) {\r\n        var res = [arr[0]];\r\n        for (var i = 1; i < arr.length; i++) {\r\n            var repeat = false;\r\n            for (var j = 0; j < res.length; j++) {\r\n                if (arr[i] == res[j]) {\r\n                    repeat = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!repeat) {\r\n                res.push(arr[i]);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 复制二维数组\r\n     * @param array 目标数组 \r\n     */\r\n    static copy2DArray(array: any[][]): any[][] {\r\n        let newArray: any[][] = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            newArray.push(array[i].concat());\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n     * Fisher-Yates Shuffle 随机置乱算法\r\n     * @param array 目标数组\r\n     */\r\n    static fisherYatesShuffle(array: any[]): any[] {\r\n        let count = array.length;\r\n        while (count) {\r\n            let index = Math.floor(Math.random() * count--);\r\n            let temp = array[count];\r\n            array[count] = array[index];\r\n            array[index] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * 混淆数组\r\n     * @param array 目标数组\r\n     */\r\n    static confound(array: []): any[] {\r\n        let result = array.slice().sort(() => Math.random() - .5);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 数组扁平化\r\n     * @param array 目标数组\r\n     */\r\n    static flattening(array: any[]) {\r\n        for (; array.some(v => Array.isArray(v));) {    // 判断 array 中是否有数组\r\n            array = [].concat.apply([], array); // 压扁数组\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /** 删除数组中指定项 */\r\n    static removeItem(array: any[], item: any) {\r\n        var temp = array.concat();\r\n        for (let i = 0; i < temp.length; i++) {\r\n            const value = temp[i];\r\n            if (item == value) {\r\n                array.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 合并数组\r\n     * @param array1 目标数组1\r\n     * @param array2 目标数组2\r\n     */\r\n    static combineArrays(array1: any[], array2: any[]): any[] {\r\n        let newArray = [...array1, ...array2];\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n     * 获取随机数组成员\r\n     * @param array 目标数组\r\n     */\r\n    static getRandomValueInArray(array: any[]): any {\r\n        let newArray = array[Math.floor(Math.random() * array.length)];\r\n        return newArray;\r\n    }\r\n}\r\n"]}