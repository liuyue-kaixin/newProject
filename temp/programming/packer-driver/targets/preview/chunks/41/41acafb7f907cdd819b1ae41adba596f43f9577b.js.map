{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/libs/gui/language/LanguagePack.ts"],"names":["LanguagePack","director","error","JsonAsset","TTFFont","Logger","oops","JsonUtil","LanguageData","LanguageLabel","LanguageSpine","LanguageSprite","json","texture","spine","updateLanguage","lang","rootNodes","getScene","children","i","length","labels","getComponentsInChildren","j","language","sprites","spines","loadLanguageAssets","callback","loadTexture","loadSpine","loadJson","loadTable","Promise","resolve","reject","excel","loadAsync","logConfig","path","res","loadDir","err","assets","load","asste","releaseLanguageAssets","langTexture","releaseDir","logView","langJson","release","langSpine"],"mappings":"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","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2021-07-03 16:13:17\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2023-08-22 16:34:28\r\n */\r\nimport { director, error, JsonAsset, TTFFont, warn } from \"cc\";\r\nimport { Logger } from \"../../../core/common/log/Logger\";\r\nimport { oops } from \"../../../core/Oops\";\r\nimport { JsonUtil } from \"../../../core/utils/JsonUtil\";\r\nimport { LanguageData } from \"./LanguageData\";\r\nimport { LanguageLabel } from \"./LanguageLabel\";\r\nimport { LanguageSpine } from \"./LanguageSpine\";\r\nimport { LanguageSprite } from \"./LanguageSprite\";\r\n\r\nexport class LanguagePack {\r\n    /** JSON资源目录 */\r\n    json: string = \"language/json\";\r\n    /** 纹理资源目录 */\r\n    texture: string = \"language/texture\";\r\n    /** SPINE资源目录 */\r\n    spine: string = \"language/spine\";\r\n\r\n    /**\r\n     * 刷新语言文字\r\n     * @param lang \r\n     */\r\n    updateLanguage(lang: string) {\r\n        let rootNodes = director.getScene()!.children;\r\n        for (let i = 0; i < rootNodes.length; ++i) {\r\n            // 更新所有的LanguageLabel节点\r\n            let labels = rootNodes[i].getComponentsInChildren(LanguageLabel);\r\n            for (let j = 0; j < labels.length; j++) {\r\n                labels[j].language();\r\n            }\r\n\r\n            // 更新所有的LanguageSprite节点\r\n            let sprites = rootNodes[i].getComponentsInChildren(LanguageSprite);\r\n            for (let j = 0; j < sprites.length; j++) {\r\n                sprites[j].language();\r\n            }\r\n\r\n            // 更新所有的LanguageSpine节点\r\n            let spines = rootNodes[i].getComponentsInChildren(LanguageSpine);\r\n            for (let j = 0; j < spines.length; j++) {\r\n                spines[j].language();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 下载对应语言包资源\r\n     * @param lang 语言标识\r\n     * @param callback 下载完成回调\r\n     */\r\n    async loadLanguageAssets(lang: string, callback: Function) {\r\n        await this.loadTexture(lang);\r\n        await this.loadSpine(lang);\r\n        await this.loadJson(lang);\r\n        await this.loadTable(lang);\r\n\r\n        callback(lang);\r\n    }\r\n\r\n    /** 多语言Excel配置表数据 */\r\n    private loadTable(lang: string) {\r\n        return new Promise(async (resolve, reject) => {\r\n            LanguageData.excel = await JsonUtil.loadAsync(\"Language\");\r\n            if (LanguageData.excel) {\r\n                Logger.logConfig(\"config/game/Language\", \"下载语言包 excel 资源\");\r\n            }\r\n            resolve(null);\r\n        });\r\n    }\r\n\r\n    /** 纹理多语言资源 */\r\n    private loadTexture(lang: string) {\r\n        return new Promise((resolve, reject) => {\r\n            let path = `${this.texture}/${lang}`;\r\n            oops.res.loadDir(path, (err: any, assets: any) => {\r\n                if (err) {\r\n                    error(err);\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n                Logger.logConfig(path, \"下载语言包 textures 资源\");\r\n                resolve(null);\r\n            })\r\n        });\r\n    }\r\n\r\n    /** Json格式多语言资源 */\r\n    private loadJson(lang: string) {\r\n        return new Promise((resolve, reject) => {\r\n            let path = `${this.json}/${lang}`;\r\n            oops.res.load(path, JsonAsset, (err: Error | null, asste: JsonAsset) => {\r\n                if (err) {\r\n                    error(err);\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n\r\n                LanguageData.json = asste.json;\r\n                Logger.logConfig(path, \"下载语言包 json 资源\");\r\n\r\n                oops.res.load(path, TTFFont, (err: Error | null) => {\r\n                    if (err == null) Logger.logConfig(path, \"下载语言包 ttf 资源\");\r\n\r\n                    resolve(null);\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    /** SPINE动画多语言资源 */\r\n    private loadSpine(lang: string) {\r\n        return new Promise((resolve, reject) => {\r\n            let path = `${this.spine}/${lang}`;\r\n            oops.res.loadDir(path, (err: any, assets: any) => {\r\n                if (err) {\r\n                    error(err);\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n                Logger.logConfig(path, \"下载语言包 spine 资源\");\r\n                resolve(null);\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 释放某个语言的语言包资源包括json\r\n     * @param lang \r\n     */\r\n    releaseLanguageAssets(lang: string) {\r\n        let langTexture = `${this.texture}/${lang}`;\r\n        oops.res.releaseDir(langTexture);\r\n        Logger.logView(langTexture, \"释放语言 texture 资源\");\r\n\r\n        let langJson = `${this.json}/${lang}`;\r\n        oops.res.release(langJson);\r\n        Logger.logView(langJson, \"释放语言文字资源\");\r\n\r\n        let langSpine = `${this.spine}/${lang}`;\r\n        oops.res.release(langSpine);\r\n        Logger.logView(langSpine, \"释放语言 spine 资源\");\r\n    }\r\n}"]}