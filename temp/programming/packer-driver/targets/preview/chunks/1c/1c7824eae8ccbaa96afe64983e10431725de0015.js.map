{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/assets/bundle/battle/main.ts"],"names":["Component","Label","Node","Prefab","Slider","_decorator","instantiate","setDisplayStats","BulletHell","Player","Config","demo2d","demo3d","ccclass","property","main","currScense","start","changeDemos","schedule","length","demoIdx","getComponentInChildren","objects","children","totalTxt","string","removeFromParent","destroy","node","getChildByName","active","demoBullet","scheduleOnce","demosNode","addChild","onDemos","event","idx","target","getSiblingIndex","onSpeed","maxSpeed","progress","speedTxt","Math","round","onRotation","isRotate","isChecked","resetRotation","randomRotation","onSphere","max","maxNum","box","boxTxt","sbox","sphereTxt","sphere","onBox","sSphere","onSkill","inst"],"mappings":"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","sourcesContent":["import { Component, EventTouch, Label, Node, Prefab, Slider, Toggle, _decorator, instantiate, setDisplayStats } from 'cc';\nimport { BulletHell } from './demos/bulletHell/bulletHell';\nimport { Player } from './demos/bulletHell/player';\nimport { Config } from './demos/collisions/Config';\nimport { demo2d } from './demos/collisions/demo2d';\nimport { demo3d } from './demos/collisions/demo3d';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('main')\nexport class main extends Component {\n\n    @property(Prefab)\n    demo2d: Prefab = null;\n    @property(Prefab)\n    demo3d: Prefab = null;\n\n    @property(Prefab)\n    demoBullet: Prefab = null;\n\n    @property(Node)\n    demosNode: Node = null;\n\n    @property(Slider)\n    sbox: Slider = null;\n\n    @property(Slider)\n    sSphere: Slider = null;\n\n    @property(Label)\n    boxTxt: Label = null;\n\n    @property(Label)\n    sphereTxt: Label = null;\n\n    @property(Label)\n    speedTxt: Label = null;\n\n    @property(Label)\n    totalTxt: Label = null;\n\n\n    currScense: Node = null;\n\n    start() {\n\n        setDisplayStats(true);\n\n        this.changeDemos();\n\n        //刷新物体个数\n        this.schedule(() => {\n\n            let length = 0;\n            switch (Config.demoIdx) {\n                case 0:\n                    length = this.currScense.getComponentInChildren(demo2d).objects.length;\n                    break;\n                case 1:\n                    length = this.currScense.getComponentInChildren(demo3d).objects.length;\n                    break;\n                case 2:\n                    length = this.currScense.getComponentInChildren(BulletHell).objects.children.length;\n                    break;\n            }\n\n            this.totalTxt.string = \"\" + length;\n\n        }, 0.1);\n    }\n\n    changeDemos() {\n\n        if (this.currScense) {\n            //释放旧场景\n            this.currScense.removeFromParent();\n            this.currScense.destroy();\n            this.currScense = null;\n        }\n\n        switch (Config.demoIdx) {\n            case 0:\n\n                this.currScense = instantiate(this.demo2d);\n                this.node.getChildByName(\"Left\").active = true;\n                this.node.getChildByName(\"Skill\").active = false;\n                break;\n            case 1:\n                this.currScense = instantiate(this.demo3d);\n                this.node.getChildByName(\"Left\").active = true;\n                this.node.getChildByName(\"Skill\").active = false;\n                break;\n            case 2:\n                this.currScense = instantiate(this.demoBullet);\n                this.node.getChildByName(\"Left\").active = false;\n                this.node.getChildByName(\"Skill\").active = true;\n                break;\n        }\n\n        //下一帧加载新场景\n        this.scheduleOnce(() => {\n            this.demosNode.addChild(this.currScense);\n        });\n    }\n\n    onDemos(event: Toggle) {\n\n        let idx = event.target.getSiblingIndex();\n        if (idx != Config.demoIdx) {\n            Config.demoIdx = idx;\n            this.changeDemos();\n        }\n\n    }\n\n    onSpeed(event: Slider) {\n        Config.maxSpeed = event.progress;\n\n        this.speedTxt.string = \"speed:\" + Math.round(Config.maxSpeed * 100);\n    }\n\n    onRotation(event: Toggle) {\n        if (Config.isRotate == event.isChecked) return;\n\n\n        Config.isRotate = event.isChecked;\n        // if (!Config.isRotate) {\n        switch (Config.demoIdx) {\n            case 0:\n                if (!Config.isRotate)\n                    this.currScense.getComponentInChildren(demo2d).resetRotation();\n                else\n                    this.currScense.getComponentInChildren(demo2d).randomRotation();\n                break;\n            case 1:\n                if (!Config.isRotate)\n                    this.currScense.getComponentInChildren(demo3d).resetRotation();\n                else\n                    this.currScense.getComponentInChildren(demo3d).randomRotation();\n                break;\n        }\n        // }\n    }\n\n    onSphere(event: Slider) {\n\n        let max = Config.maxNum;\n        let progress = event.progress;\n\n\n        if (progress + Config.box >= 1) {\n            this.boxTxt.string = \"box:\" + Math.round((1 - progress) * max);\n            this.sbox.progress = 1 - progress;\n            Config.box = 1 - progress;\n\n        }\n\n        this.sphereTxt.string = \"sphere:\" + Math.round(progress * max);\n        event.progress = progress;\n        Config.sphere = progress;\n    }\n\n    onBox(event: Slider) {\n\n        let max = Config.maxNum;\n        let progress = event.progress;\n\n        if (progress + Config.sphere >= 1) {\n            this.sphereTxt.string = \"sphere:\" + Math.round((1 - progress) * max);\n            this.sSphere.progress = 1 - progress;\n            Config.sphere = 1 - progress;\n        }\n\n        this.boxTxt.string = \"box:\" + Math.round(progress * max);\n        event.progress = progress;\n        Config.box = progress;\n    }\n\n    onSkill(event:EventTouch) {\n\n       Player.inst.onSkill();\n       \n       //示范做了个定时\n       event.target.active = false;\n       this.scheduleOnce(()=>{\n        if(Config.demoIdx == 2){\n            event.target.active = true;\n        }\n       },5);\n    }\n}\n\n"]}