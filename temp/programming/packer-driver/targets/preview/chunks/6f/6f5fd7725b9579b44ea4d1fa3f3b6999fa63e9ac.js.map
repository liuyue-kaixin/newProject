{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/core/utils/StringUtil.ts"],"names":["StringUtil","guid","i","n","Math","floor","random","toString","numberTotPermil","value","toLocaleString","numberToThousand","fixed","k","sizes","log","r","pow","toFixed","numberToTenThousand","format","date","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","stringToArray1","str","split","stringToArray2","stringToArray3","stringToArray4","sub","showdot","m","stringLen","realLength","len","charCode","charCodeAt"],"mappings":"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","sourcesContent":["/** 字符串工具 */\r\nexport class StringUtil {\r\n    /** 获取一个唯一标识的字符串 */\r\n    static guid() {\r\n        let guid: string = \"\";\r\n        for (let i = 1; i <= 32; i++) {\r\n            let n = Math.floor(Math.random() * 16.0).toString(16);\r\n            guid += n;\r\n            if ((i == 8) || (i == 12) || (i == 16) || (i == 20))\r\n                guid += \"-\";\r\n        }\r\n        return guid;\r\n    }\r\n\r\n    /**\r\n     * 转美式计数字符串\r\n     * @param value 数字\r\n     * @example\r\n     * 123456789 = 123,456,789\r\n     */\r\n    static numberTotPermil(value: number): string {\r\n        return value.toLocaleString();\r\n    }\r\n\r\n    /** \r\n     * 转英文单位计数\r\n     * @param value 数字\r\n     * @param fixed 保留小数位数\r\n     * @example\r\n     * 12345 = 12.35K\r\n     */\r\n    static numberToThousand(value: number, fixed: number = 2): string {\r\n        var k = 1000;\r\n        var sizes = ['', 'K', 'M', 'G'];\r\n        if (value < k) {\r\n            return value.toString();\r\n        }\r\n        else {\r\n            var i = Math.floor(Math.log(value) / Math.log(k));\r\n            var r = ((value / Math.pow(k, i)));\r\n            return r.toFixed(fixed) + sizes[i];\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 转中文单位计数\r\n     * @param value 数字\r\n     * @param fixed 保留小数位数\r\n     * @example\r\n     * 12345 = 1.23万\r\n     */\r\n    static numberToTenThousand(value: number, fixed: number = 2): string {\r\n        var k = 10000;\r\n        var sizes = ['', '万', '亿', '万亿'];\r\n        if (value < k) {\r\n            return value.toString();\r\n        }\r\n        else {\r\n            var i = Math.floor(Math.log(value) / Math.log(k));\r\n            return ((value / Math.pow(k, i))).toFixed(fixed) + sizes[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 时间格式化\r\n     * @param date  时间对象\r\n     * @param fmt   格式化字符(yyyy-MM-dd hh:mm:ss S)\r\n     */\r\n    static format(date: Date, fmt: string) {\r\n        var o: any = {\r\n            \"M+\": date.getMonth() + 1,                   // 月份 \r\n            \"d+\": date.getDate(),                        // 日 \r\n            \"h+\": date.getHours(),                       // 小时 \r\n            \"m+\": date.getMinutes(),                     // 分 \r\n            \"s+\": date.getSeconds(),                     // 秒 \r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度 \r\n            \"S\": date.getMilliseconds()                  // 毫秒 \r\n        };\r\n        if (/(y+)/.test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n        }\r\n        for (var k in o) {\r\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n            }\r\n        }\r\n        return fmt;\r\n    }\r\n\r\n    /**\r\n     * \",\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray1(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\",\");\r\n    }\r\n\r\n    /** \r\n     * \"|\" 分割字符串成数组 \r\n     * @param str 字符串\r\n     */\r\n    static stringToArray2(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\"|\");\r\n    }\r\n\r\n    /** \r\n     * \":\" 分割字符串成数组\r\n     * @param str 字符串\r\n     */\r\n    static stringToArray3(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\":\");\r\n    }\r\n\r\n    /** \r\n     * \";\" 分割字符串成数组 \r\n     * @param str 字符串\r\n     */\r\n    static stringToArray4(str: string) {\r\n        if (str == \"\") {\r\n            return [];\r\n        }\r\n        return str.split(\";\");\r\n    }\r\n\r\n    /**\r\n     * 字符串截取\r\n     * @param str     字符串\r\n     * @param n       截取长度\r\n     * @param showdot 是否把截取的部分用省略号代替\r\n     */\r\n    static sub(str: string, n: number, showdot: boolean = false) {\r\n        var r = /[^\\x00-\\xff]/g;\r\n        if (str.replace(r, \"mm\").length <= n) { return str; }\r\n        var m = Math.floor(n / 2);\r\n        for (var i = m; i < str.length; i++) {\r\n            if (str.substr(0, i).replace(r, \"mm\").length >= n) {\r\n                if (showdot) {\r\n                    return str.substr(0, i) + \"...\";\r\n                } else {\r\n                    return str.substr(0, i);\r\n                }\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 计算字符串长度，中文算两个字节\r\n     * @param str 字符串\r\n     */\r\n    static stringLen(str: string) {\r\n        var realLength = 0, len = str.length, charCode = -1;\r\n        for (var i = 0; i < len; i++) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode >= 0 && charCode <= 128)\r\n                realLength += 1;\r\n            else\r\n                realLength += 2;\r\n        }\r\n        return realLength;\r\n    }\r\n}\r\n"]}