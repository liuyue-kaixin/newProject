{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/libs/render-texture/RtToSprite.ts"],"names":["Camera","Component","gfx","Node","RenderTexture","Sprite","SpriteFrame","UITransform","_decorator","ccclass","property","RtToSprite","type","tooltip","visible","rotation","rt","touched","start","size","sprite","getComponent","refreshRenderTexture","width","height","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","event","eulerAngles","model","deltaX","touch","getDelta","x","y","w","h","colorAttachment","ColorAttachment","depthStencilAttachment","DepthStencilAttachment","pi","RenderPassInfo","reset","passInfo","spriteframe","spriteFrame","sp","originalSize","rect","offset","isRotate","rotated","borderTop","insetTop","borderLeft","insetLeft","borderBottom","insetBottom","borderRight","insetRight","camera","targetTexture","texture","onDestroy","off","destroy"],"mappings":"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","sourcesContent":["import { Camera, Component, EventTouch, gfx, Node, RenderTexture, Sprite, SpriteFrame, UITransform, Vec3, _decorator } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/** 三维模型显示到二维精灵上 */\r\n@ccclass('RtToSprite')\r\nexport class RtToSprite extends Component {\r\n    @property({\r\n        type: Camera,\r\n        tooltip: \"渲染模型的三维摄像机\"\r\n    })\r\n    camera: Camera | null = null;\r\n\r\n    @property({\r\n        type: Sprite,\r\n        tooltip: \"显示模型的二维精灵组件\"\r\n    })\r\n    sprite: Sprite | null = null;\r\n\r\n    @property({\r\n        tooltip: \"是否触摸控制旋转\"\r\n    })\r\n    rotation: boolean = false;\r\n\r\n    @property({\r\n        type: Node,\r\n        tooltip: \"三维模型\",\r\n        visible: function () {\r\n            //@ts-ignore\r\n            return this.rotation === true;\r\n        },\r\n    })\r\n    model: Node | null = null;\r\n\r\n    private rt: RenderTexture = new RenderTexture();\r\n    private touched = false;                             // 是否触摸节点\r\n\r\n    start() {\r\n        let size = this.sprite!.getComponent(UITransform)!;\r\n        this.refreshRenderTexture(size.width, size.height);\r\n\r\n        if (this.rotation) {\r\n            this.sprite!.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n            this.sprite!.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n            this.sprite!.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n            this.sprite!.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n        }\r\n    }\r\n\r\n    protected onTouchStart(event: EventTouch) {\r\n        this.touched = true;\r\n    }\r\n\r\n    protected onTouchMove(event: EventTouch) {\r\n        if (this.touched) {\r\n            let eulerAngles: Vec3 = this.model!.eulerAngles;\r\n            let deltaX = event.touch!.getDelta().x!;\r\n            eulerAngles.y += -deltaX;\r\n            this.model!.eulerAngles = eulerAngles;\r\n        }\r\n    }\r\n\r\n    protected onTouchEnd(event: EventTouch) {\r\n        this.touched = false;\r\n    }\r\n\r\n    /** 刷新纹理内容 */\r\n    refreshRenderTexture(w: number, h: number): void {\r\n        const colorAttachment = new gfx.ColorAttachment();\r\n        const depthStencilAttachment = new gfx.DepthStencilAttachment();\r\n        const pi = new gfx.RenderPassInfo([colorAttachment], depthStencilAttachment, []);\r\n\r\n        this.rt.reset({\r\n            width: w,\r\n            height: h,\r\n            passInfo: pi\r\n        });\r\n\r\n        let spriteframe: SpriteFrame = this.sprite!.spriteFrame!;\r\n        let sp: SpriteFrame = new SpriteFrame();\r\n        sp.reset({\r\n            originalSize: spriteframe.originalSize,\r\n            rect: spriteframe.rect,\r\n            offset: spriteframe.offset,\r\n            isRotate: spriteframe.rotated,\r\n            borderTop: spriteframe.insetTop,\r\n            borderLeft: spriteframe.insetLeft,\r\n            borderBottom: spriteframe.insetBottom,\r\n            borderRight: spriteframe.insetRight,\r\n        });\r\n\r\n        this.camera!.targetTexture = this.rt;\r\n        sp.texture = this.rt;\r\n        this.sprite!.spriteFrame = sp;\r\n    }\r\n\r\n    onDestroy() {\r\n        if (this.rotation) {\r\n            this.sprite!.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n            this.sprite!.node.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n            this.sprite!.node.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n            this.sprite!.node.off(Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n        }\r\n        this.rt.destroy();\r\n    }\r\n}\r\n"]}