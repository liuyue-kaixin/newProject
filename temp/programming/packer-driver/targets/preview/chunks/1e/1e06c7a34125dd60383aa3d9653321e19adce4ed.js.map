{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/core/utils/Vec3Util.ts"],"names":["Vec3Util","Mat4","Vec3","MathUtil","x","y","z","left","right","up","down","forward","back","one","zero","progress","start","end","t","current","add","pos1","pos2","outPos","sub","subtract","mul","pos","scalar","multiplyScalar","div","equals","magnitude","length","normalize","direction","distance","lerp","posStart","posEnd","bezierOne","slerp","from","to","dir","rotateTo","angle","Math","PI","lenght","axis","cross","radian","rotateMatrix","rotate","m00","m04","m08","m01","m05","m09","m02","m06","m10","pStart","clone","pEnd","bezierTwo","posCon","n","tt","pCon","bezierThree","posCon1","posCon2","nn","nnn","ttt","pCon1","pCon2","dot","dir1","dir2","tempDir1","tempDir2","i","j","k","iv","jv","kv","dotValue","acos","sign","dirAngle","a","b","c"],"mappings":"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","sourcesContent":["\r\nimport { Mat4, Vec3 } from \"cc\";\r\nimport { MathUtil } from \"./MathUtil\";\r\n\r\n/** 向量工具 */\r\nexport class Vec3Util {\r\n    /**\r\n     * X轴\r\n     */\r\n    static get x(): Readonly<Vec3> {\r\n        return new Vec3(1, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Y轴\r\n     */\r\n    static get y(): Readonly<Vec3> {\r\n        return new Vec3(0, 1, 0);\r\n    }\r\n\r\n    /**\r\n     * Z轴\r\n     */\r\n    static get z(): Readonly<Vec3> {\r\n        return new Vec3(0, 0, 1);\r\n    }\r\n\r\n    /**\r\n     * 左向量\r\n     */\r\n    static get left(): Readonly<Vec3> {\r\n        return new Vec3(-1, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 右向量\r\n     */\r\n    static get right(): Readonly<Vec3> {\r\n        return new Vec3(1, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 上向量\r\n     */\r\n    static get up(): Readonly<Vec3> {\r\n        return new Vec3(0, 1, 0);\r\n    }\r\n\r\n    /**\r\n     * 下向量\r\n     */\r\n    static get down(): Readonly<Vec3> {\r\n        return new Vec3(0, -1, 0);\r\n    }\r\n\r\n    /**\r\n     * 前向量\r\n     */\r\n    static get forward(): Readonly<Vec3> {\r\n        return new Vec3(0, 0, 1);\r\n    }\r\n\r\n    /**\r\n     * 后向量\r\n     */\r\n    static get back(): Readonly<Vec3> {\r\n        return new Vec3(0, 0, -1);\r\n    }\r\n\r\n    /**\r\n     * 1向量\r\n     */\r\n    static get one(): Readonly<Vec3> {\r\n        return new Vec3(1, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * 0向量\r\n     */\r\n    static get zero(): Readonly<Vec3> {\r\n        return new Vec3(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 随时间变化进度值\r\n     * @param start  起始位置\r\n     * @param end    结束位置\r\n     * @param t      进度[0，1]\r\n     */\r\n    static progress(start: Vec3, end: Vec3, t: number): Vec3 {\r\n        var current = new Vec3();\r\n        current.x = MathUtil.progress(start.x, end.x, t);\r\n        current.y = MathUtil.progress(start.y, end.y, t);\r\n        current.z = MathUtil.progress(start.z, end.z, t);\r\n        return current;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的和\r\n     * @param pos1  向量1\r\n     * @param pos2  向量2\r\n     */\r\n    static add(pos1: Vec3, pos2: Vec3): Vec3 {\r\n        var outPos: Vec3 = new Vec3();\r\n        Vec3.add(outPos, pos1, pos2);\r\n        return outPos;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的差\r\n     * @param pos1  向量1\r\n     * @param pos2  向量2\r\n     */\r\n    static sub(pos1: Vec3, pos2: Vec3): Vec3 {\r\n        var outPos: Vec3 = new Vec3();\r\n        Vec3.subtract(outPos, pos1, pos2);\r\n        return outPos;\r\n    }\r\n\r\n    /**\r\n     * 三维向量乘以常量\r\n     * @param pos     向量\r\n     * @param scalar  常量\r\n     */\r\n    static mul(pos: Vec3, scalar: number): Vec3 {\r\n        var outPos: Vec3 = new Vec3();\r\n        Vec3.multiplyScalar(outPos, pos, scalar);\r\n        return outPos;\r\n    }\r\n\r\n    /**\r\n     * 三维向量除常量\r\n     * @param pos     向量\r\n     * @param scalar  常量\r\n     */\r\n    static div(pos: Vec3, scalar: number): Vec3 {\r\n        var outPos: Vec3 = new Vec3();\r\n\r\n        outPos.x = pos.x / scalar;\r\n        outPos.y = pos.y / scalar;\r\n        outPos.z = pos.z / scalar;\r\n\r\n        return outPos;\r\n    }\r\n\r\n    /**\r\n     * 判断两个三维向量的值是否相等\r\n     * @param pos1  向量1\r\n     * @param pos2  向量2\r\n     */\r\n    static equals(pos1: Vec3, pos2: Vec3): boolean {\r\n        if (pos1.x == pos2.x && pos1.y == pos2.y && pos1.z == pos2.z) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 三维向量的模\r\n     * @param pos  向量\r\n     */\r\n    static magnitude(pos: Vec3): number {\r\n        return pos.length();\r\n    }\r\n\r\n    /**\r\n     * 三维向量归一化\r\n     * @param pos  向量\r\n     */\r\n    static normalize(pos: Vec3): Vec3 {\r\n        var outPos: Vec3 = new Vec3(pos.x, pos.y, pos.z);\r\n        return outPos.normalize();\r\n    }\r\n\r\n    /**\r\n     * 获得位置1，到位置2的方向\r\n     * @param pos1  向量1\r\n     * @param pos2  向量2\r\n     */\r\n    static direction(pos1: Vec3, pos2: Vec3): Vec3 {\r\n        var outPos: Vec3 = new Vec3();\r\n        Vec3.subtract(outPos, pos2, pos1)\r\n        return outPos.normalize();\r\n    }\r\n\r\n    /**\r\n     * 获得两点间的距离\r\n     * @param pos1  向量1\r\n     * @param pos2  向量2\r\n     */\r\n    static distance(pos1: Vec3, pos2: Vec3): number {\r\n        return Vec3.distance(pos1, pos2);\r\n    }\r\n\r\n    /**\r\n     * 插值运算\r\n     * @param posStart  开始俏步\r\n     * @param posEnd    结束位置\r\n     * @param t         时间\r\n     */\r\n    static lerp(posStart: Vec3, posEnd: Vec3, t: number): Vec3 {\r\n        return this.bezierOne(t, posStart, posEnd);\r\n    }\r\n\r\n    /**\r\n     * 球面插值\r\n     * @param from  起点\r\n     * @param to    终点\r\n     * @param t     时间\r\n     */\r\n    static slerp(from: Vec3, to: Vec3, t: number): Vec3 {\r\n        if (t <= 0) {\r\n            return from;\r\n        }\r\n        else if (t >= 1) {\r\n            return to;\r\n        }\r\n\r\n        var dir: Vec3 = this.rotateTo(from, to, (Vec3.angle(from, to) / Math.PI * 180) * t);\r\n        var lenght: number = to.length() * t + from.length() * (1 - t);\r\n\r\n        return (dir.normalize()).multiplyScalar(lenght);\r\n    }\r\n\r\n    /**\r\n     * 向量旋转一个角度\r\n     * @param from  起点\r\n     * @param to    终点\r\n     * @param angle 角并\r\n     */\r\n    static rotateTo(from: Vec3, to: Vec3, angle: number): Vec3 {\r\n        //如果两个方向角度为0，则返回目标\r\n        if (Vec3.angle(from, to) == 0) {\r\n            return to;\r\n        }\r\n\r\n        var axis: Vec3 = new Vec3()                 // 获得旋转轴\r\n        Vec3.cross(axis, from, to);\r\n        axis.normalize();\r\n\r\n        var radian: number = angle * Math.PI / 180; // 获得弧度\r\n        var rotateMatrix: Mat4 = new Mat4();\r\n        rotateMatrix.rotate(radian, axis);\r\n\r\n        return new Vec3(\r\n            from.x * rotateMatrix.m00 + from.y * rotateMatrix.m04 + from.z * rotateMatrix.m08,\r\n            from.x * rotateMatrix.m01 + from.y * rotateMatrix.m05 + from.z * rotateMatrix.m09,\r\n            from.x * rotateMatrix.m02 + from.y * rotateMatrix.m06 + from.z * rotateMatrix.m10\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 一次贝塞尔即为线性插值函数\r\n     * @param t \r\n     * @param posStart \r\n     * @param posEnd \r\n     * @returns \r\n     */\r\n    static bezierOne(t: number, posStart: Vec3, posEnd: Vec3): Vec3 {\r\n        if (t > 1) {\r\n            t = 1;\r\n        }\r\n        else if (t < 0) {\r\n            t = 0\r\n        }\r\n\r\n        var pStart: Vec3 = posStart.clone();\r\n        var pEnd: Vec3 = posEnd.clone();\r\n\r\n        return pStart.multiplyScalar(1 - t).add(pEnd.multiplyScalar(t));\r\n    }\r\n\r\n    /**\r\n     * 二次贝塞尔曲线\r\n     * @param t \r\n     * @param posStart \r\n     * @param posCon \r\n     * @param posEnd \r\n     * @returns \r\n     */\r\n    static bezierTwo(t: number, posStart: Vec3, posCon: Vec3, posEnd: Vec3): Vec3 {\r\n        if (t > 1) {\r\n            t = 1;\r\n        }\r\n        else if (t < 0) {\r\n            t = 0\r\n        }\r\n\r\n        var n = (1 - t);\r\n        var tt = t * t;\r\n\r\n        var pStart: Vec3 = posStart.clone();\r\n        var pos = new Vec3();\r\n\r\n        var pCon: Vec3 = posCon.clone();\r\n        var pEnd: Vec3 = posEnd.clone();\r\n\r\n        pos.add(pStart.multiplyScalar(n * n));\r\n        pos.add(pCon.multiplyScalar(2 * n * t));\r\n        pos.add(pEnd.multiplyScalar(tt));\r\n\r\n        return pos;\r\n    }\r\n\r\n    /**\r\n     * 三次贝塞尔\r\n     * @param t \r\n     * @param posStart \r\n     * @param posCon1 \r\n     * @param posCon2 \r\n     * @param posEnd \r\n     * @returns \r\n     */\r\n    static bezierThree(t: number, posStart: Vec3, posCon1: Vec3, posCon2: Vec3, posEnd: Vec3): Vec3 {\r\n        if (t > 1) {\r\n            t = 1;\r\n        }\r\n        else if (t < 0) {\r\n            t = 0\r\n        }\r\n\r\n        var n = (1 - t);\r\n        var nn = n * n;\r\n        var nnn = nn * n;\r\n        var tt = t * t;\r\n        var ttt = tt * t;\r\n\r\n        var pStart: Vec3 = posStart.clone();\r\n        var pos = posStart.clone();\r\n\r\n        var pCon1: Vec3 = posCon1.clone();\r\n        var pCon2: Vec3 = posCon2.clone();\r\n        var pEnd: Vec3 = posEnd.clone();\r\n\r\n        pos.add(pStart.multiplyScalar(nnn));\r\n        pos.add(pCon1.multiplyScalar(3 * nn * t));\r\n        pos.add(pCon2.multiplyScalar(3 * n * tt));\r\n        pos.add(pEnd.multiplyScalar(ttt));\r\n\r\n        return pos;\r\n    }\r\n\r\n    /**\r\n     * 点乘\r\n     * @param dir1 方向量1\r\n     * @param dir2 方向量2\r\n     */\r\n    static dot(dir1: Vec3, dir2: Vec3): number {\r\n        var tempDir1: Vec3 = dir1;\r\n        var tempDir2: Vec3 = dir2;\r\n\r\n        return tempDir1.x * tempDir2.x + tempDir1.y * tempDir2.y + tempDir1.z * tempDir2.z;\r\n    }\r\n\r\n    /**\r\n     * 叉乘\r\n     * @param dir1 方向量1\r\n     * @param dir2 方向量2\r\n     */\r\n    static cross(dir1: Vec3, dir2: Vec3): Vec3 {\r\n        var i: Vec3 = new Vec3(1, 0, 0);\r\n        var j: Vec3 = new Vec3(0, 1, 0);\r\n        var k: Vec3 = new Vec3(0, 0, 1);\r\n\r\n        var tempDir1: Vec3 = new Vec3(dir1.x, dir1.y, dir1.z);\r\n        var tempDir2: Vec3 = new Vec3(dir2.x, dir2.y, dir2.z);\r\n\r\n        var iv: Vec3 = i.multiplyScalar(tempDir1.y * tempDir2.z - tempDir2.y * tempDir1.z);\r\n        var jv: Vec3 = j.multiplyScalar(tempDir2.x * tempDir1.z - tempDir1.x * tempDir2.z);\r\n        var kv: Vec3 = k.multiplyScalar(tempDir1.x * tempDir2.y - tempDir2.x * tempDir1.y);\r\n\r\n        return iv.add(jv).add(kv);\r\n    }\r\n\r\n    /**\r\n     * 获得两个方向向量的角度\r\n     * @param dir1 方向量1\r\n     * @param dir2 方向量2\r\n     */\r\n    static angle(dir1: Vec3, dir2: Vec3): number {\r\n        var dotValue = this.dot(dir1.clone().normalize(), dir2.clone().normalize());\r\n        return Math.acos(dotValue) / Math.PI * 180 * Math.sign(dotValue);\r\n    }\r\n\r\n    /**\r\n     * 获得方向a到方向b的角度（带有方向的角度）\r\n     * @param a 角度a\r\n     * @param b 角度b\r\n     */\r\n    static dirAngle(a: Vec3, b: Vec3): number {\r\n        var c: Vec3 = Vec3Util.cross(a, b);\r\n        var angle: number = Vec3Util.angle(a, b);\r\n        // a 到 b 的夹角\r\n        var sign = Math.sign(Vec3Util.dot(c.normalize(), Vec3Util.cross(b.normalize(), a.normalize())));\r\n\r\n        return angle * sign;\r\n    }\r\n}\r\n"]}