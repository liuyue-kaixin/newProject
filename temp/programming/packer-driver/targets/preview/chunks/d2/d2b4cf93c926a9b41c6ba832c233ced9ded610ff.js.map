{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/ccProject/extensions/oops-plugin-framework/assets/core/common/event/EventDispatcher.ts"],"names":["EventDispatcher","MessageEventData","_msg","on","event","listener","object","off","dispatchEvent","args","destroy","clear"],"mappings":";;;gDAUaA,e;;;;;;;;;;;;;;;;;;AAHJC,MAAAA,gB,iBAAAA,gB;;;;;;AAPT;AACA;AACA;AACA;AACA;AACA;;;AAIA;iCACaD,e,GAAN,MAAMA,eAAN,CAAsB;AAAA;AAAA,eACfE,IADe,GACiB,IADjB;AAAA;;AAGzB;AACJ;AACA;AACA;AACA;AACA;AACIC,QAAAA,EAAE,CAACC,KAAD,EAAgBC,QAAhB,EAAwCC,MAAxC,EAAqD;AACnD,cAAI,KAAKJ,IAAL,IAAa,IAAjB,EAAuB;AACnB,iBAAKA,IAAL,GAAY;AAAA;AAAA,uDAAZ;AACH;;AACD,eAAKA,IAAL,CAAUC,EAAV,CAAaC,KAAb,EAAoBC,QAApB,EAA8BC,MAA9B;AACH;AAED;AACJ;AACA;AACA;;;AACIC,QAAAA,GAAG,CAACH,KAAD,EAAgB;AACf,cAAI,KAAKF,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUK,GAAV,CAAcH,KAAd;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACII,QAAAA,aAAa,CAACJ,KAAD,EAAgBK,IAAhB,EAAkC;AAAA,cAAlBA,IAAkB;AAAlBA,YAAAA,IAAkB,GAAN,IAAM;AAAA;;AAC3C,cAAI,KAAKP,IAAL,IAAa,IAAjB,EAAuB;AACnB,iBAAKA,IAAL,GAAY;AAAA;AAAA,uDAAZ;AACH;;AACD,eAAKA,IAAL,CAAUM,aAAV,CAAwBJ,KAAxB,EAA+BK,IAA/B;AACH;AAED;AACJ;AACA;;;AACIC,QAAAA,OAAO,GAAG;AACN,cAAI,KAAKR,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAUS,KAAV;AACH;;AACD,eAAKT,IAAL,GAAY,IAAZ;AACH;;AA9CwB,O","sourcesContent":["/*\r\n * @Author: dgflash\r\n * @Date: 2022-09-01 18:00:28\r\n * @LastEditors: dgflash\r\n * @LastEditTime: 2022-09-02 10:57:01\r\n */\r\nimport { ListenerFunc } from \"./EventMessage\";\r\nimport { MessageEventData } from \"./MessageManager\";\r\n\r\n/* 事件对象基类，继承该类将拥有发送和接送事件的能力 */\r\nexport class EventDispatcher {\r\n    protected _msg: MessageEventData | null = null;\r\n\r\n    /**\r\n     * 注册全局事件\r\n     * @param event     事件名\r\n     * @param listener  处理事件的侦听器函数\r\n     * @param object    侦听函数绑定的作用域对象\r\n     */\r\n    on(event: string, listener: ListenerFunc, object: any) {\r\n        if (this._msg == null) {\r\n            this._msg = new MessageEventData();\r\n        }\r\n        this._msg.on(event, listener, object);\r\n    }\r\n\r\n    /**\r\n     * 移除全局事件\r\n     * @param event      事件名\r\n     */\r\n    off(event: string) {\r\n        if (this._msg) {\r\n            this._msg.off(event);\r\n        }\r\n    }\r\n\r\n    /** \r\n     * 触发全局事件 \r\n     * @param event      事件名\r\n     * @param args       事件参数\r\n     */\r\n    dispatchEvent(event: string, args: any = null) {\r\n        if (this._msg == null) {\r\n            this._msg = new MessageEventData();\r\n        }\r\n        this._msg.dispatchEvent(event, args);\r\n    }\r\n\r\n    /**\r\n     * 销毁事件对象\r\n     */\r\n    destroy() {\r\n        if (this._msg) {\r\n            this._msg.clear();\r\n        }\r\n        this._msg = null;\r\n    }\r\n}"]}