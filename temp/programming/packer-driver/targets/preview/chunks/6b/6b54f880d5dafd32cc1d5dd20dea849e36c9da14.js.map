{"version":3,"sources":["file:///Volumes/SSD%201/ccProject/extensions/oops-plugin-framework/assets/core/common/log/Logger.ts"],"names":["Logger","log","LogType","names","init","tags","Net","Model","Business","View","Config","Trace","setTags","tag","start","describe","console","time","end","timeEnd","table","msg","isOpen","trace","color","backLog","call","getDateString","logNet","orange","logModel","violet","logBusiness","blue","logView","green","logConfig","gray","print","type","stack","index","e","Error","lines","split","result","forEach","line","substring","lineBreak","length","push","list","splitList","value","a","concat","lastIndexOf","r","d","Date","str","getHours","toString","timeStr","getMinutes","getSeconds","getMilliseconds"],"mappings":"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","sourcesContent":["import { log } from \"cc\";\r\n\r\n/** 日志类型 */\r\nexport enum LogType {\r\n    /** 网络层日志 */\r\n    Net = 1,\r\n    /** 数据结构层日志 */\r\n    Model = 2,\r\n    /** 业务逻辑层日志 */\r\n    Business = 4,\r\n    /** 视图层日志 */\r\n    View = 8,\r\n    /** 配置日志 */\r\n    Config = 16,\r\n    /** 标准日志 */\r\n    Trace = 32,\r\n}\r\n\r\nvar names = {\r\n    \"1\": \"网络日志\",\r\n    \"2\": \"数据日志\",\r\n    \"4\": \"业务日志\",\r\n    \"8\": \"视图日志\",\r\n    \"16\": \"配置日志\",\r\n    \"32\": \"标准日志\",\r\n}\r\n\r\n/** \r\n * 日志管理 \r\n * @example\r\noops.log.trace(\"默认标准日志\");\r\noops.log.logConfig(\"灰色配置日志\");\r\noops.log.logNet(\"橙色网络日志\");\r\noops.log.logModel(\"紫色数据日志\");\r\noops.log.logBusiness(\"蓝色业务日志\");\r\noops.log.logView(\"绿色视图日志\");\r\n */\r\nexport class Logger {\r\n    private static tags: number = 0;\r\n\r\n    private static init(): void {\r\n        this.tags =\r\n            LogType.Net |\r\n            LogType.Model |\r\n            LogType.Business |\r\n            LogType.View |\r\n            LogType.Config |\r\n            LogType.Trace;\r\n    }\r\n\r\n    /** \r\n     * 设置显示的日志类型，默认值为不显示任何类型日志\r\n     * @example\r\noops.log.setTags(LogType.View|LogType.Business)\r\n     */\r\n    static setTags(tag: LogType = null!) {\r\n        if (tag) {\r\n            this.tags = tag;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 记录开始计时\r\n     * @param describe  标题描述\r\n     * @example\r\noops.log.start();\r\n...\r\n省略N行代码\r\n...\r\noops.log.end();\r\n     */\r\n    static start(describe: string = \"Time\"): void {\r\n        console.time(describe);\r\n    }\r\n\r\n    /**\r\n     * 打印范围内时间消耗\r\n     * @param describe  标题描述\r\n     * @example\r\noops.log.start();\r\n...\r\n省略N行代码\r\n...\r\noops.log.end();\r\n     */\r\n    static end(describe: string = \"Time\"): void {\r\n        console.timeEnd(describe);\r\n    }\r\n\r\n    /**\r\n     * 打印表格\r\n     * @param msg       日志消息\r\n     * @param describe  标题描述\r\n     * @example\r\nvar object:any = {uid:1000, name:\"oops\"};\r\noops.log.table(object);\r\n     */\r\n    static table(msg: any, describe?: string) {\r\n        if (!this.isOpen(LogType.Trace)) {\r\n            return;\r\n        }\r\n        console.table(msg);\r\n    }\r\n\r\n    /**\r\n     * 打印标准日志\r\n     * @param msg       日志消息\r\n     */\r\n    static trace(msg: any, color: string = \"color:#000000;\") {\r\n        // 标记没有打开，不打印该日志\r\n        if (!this.isOpen(LogType.Trace)) {\r\n            return;\r\n\r\n        }\r\n        var backLog = console.log || log;\r\n        backLog.call(null, \"%c%s%s\", color, this.getDateString(), msg);\r\n    }\r\n\r\n    /**\r\n     * 打印网络层日志\r\n     * @param msg       日志消息\r\n     * @param describe  标题描述\r\n     */\r\n    static logNet(msg: any, describe?: string) {\r\n        this.orange(LogType.Net, msg, describe);\r\n    }\r\n\r\n    /**\r\n     * 打印数据层日志\r\n     * @param msg       日志消息\r\n     * @param describe  标题描述\r\n     */\r\n    static logModel(msg: any, describe?: string) {\r\n        this.violet(LogType.Model, msg, describe);\r\n    }\r\n\r\n    /**\r\n     * 打印业务层日志\r\n     * @param msg       日志消息\r\n     * @param describe  标题描述\r\n     */\r\n    static logBusiness(msg: any, describe?: string) {\r\n        this.blue(LogType.Business, msg, describe);\r\n    }\r\n\r\n    /**\r\n     * 打印视图日志\r\n     * @param msg       日志消息\r\n     * @param describe  标题描述\r\n     */\r\n    static logView(msg: any, describe?: string) {\r\n        this.green(LogType.View, msg, describe);\r\n    }\r\n\r\n    /** 打印配置日志 */\r\n    static logConfig(msg: any, describe?: string) {\r\n        this.gray(LogType.Config, msg, describe);\r\n    }\r\n\r\n    // 橙色\r\n    private static orange(tag: LogType, msg: any, describe?: string) {\r\n        this.print(tag, msg, \"color:#ee7700;\", describe)\r\n    }\r\n\r\n    // 紫色\r\n    private static violet(tag: LogType, msg: any, describe?: string) {\r\n        this.print(tag, msg, \"color:Violet;\", describe)\r\n    }\r\n\r\n    // 蓝色\r\n    private static blue(tag: LogType, msg: any, describe?: string) {\r\n        this.print(tag, msg, \"color:#3a5fcd;\", describe)\r\n    }\r\n\r\n    // 绿色\r\n    private static green(tag: LogType, msg: any, describe?: string) {\r\n        this.print(tag, msg, \"color:green;\", describe)\r\n    }\r\n\r\n    // 灰色\r\n    private static gray(tag: LogType, msg: any, describe?: string) {\r\n        this.print(tag, msg, \"color:gray;\", describe)\r\n    }\r\n\r\n    private static isOpen(tag: LogType): boolean {\r\n        return (this.tags & tag) != 0;\r\n    }\r\n\r\n    /**\r\n     * 输出日志\r\n     * @param tag       日志类型\r\n     * @param msg       日志内容\r\n     * @param color     日志文本颜色\r\n     * @param describe  日志标题描述\r\n     */\r\n    private static print(tag: LogType, msg: any, color: string, describe?: string) {\r\n        // 标记没有打开，不打印该日志\r\n        if (!this.isOpen(tag)) {\r\n            return;\r\n\r\n        }\r\n        var backLog = console.log || log;\r\n        var type = names[tag];\r\n        if (describe) {\r\n            backLog.call(null, \"%c%s%s%s:%s%o\", color, this.getDateString(), '[' + type + ']', this.stack(5), describe, msg);\r\n        }\r\n        else {\r\n            backLog.call(null, \"%c%s%s%s:%o\", color, this.getDateString(), '[' + type + ']', this.stack(5), msg);\r\n        }\r\n    }\r\n\r\n    private static stack(index: number): string {\r\n        var e = new Error();\r\n        var lines = e.stack!.split(\"\\n\");\r\n        var result: Array<any> = [];\r\n        lines.forEach((line) => {\r\n            line = line.substring(7);\r\n            var lineBreak = line.split(\" \");\r\n            if (lineBreak.length < 2) {\r\n                result.push(lineBreak[0]);\r\n            }\r\n            else {\r\n                result.push({ [lineBreak[0]]: lineBreak[1] });\r\n            }\r\n        });\r\n\r\n        var list: string[] = [];\r\n        var splitList: Array<string> = [];\r\n        if (index < result.length - 1) {\r\n            var value: string;\r\n            for (var a in result[index]) {\r\n                var splitList = a.split(\".\");\r\n\r\n                if (splitList.length == 2) {\r\n                    list = splitList.concat();\r\n                }\r\n                else {\r\n                    value = result[index][a];\r\n                    var start = value!.lastIndexOf(\"/\");\r\n                    var end = value!.lastIndexOf(\".\");\r\n                    if (start > -1 && end > -1) {\r\n                        var r = value!.substring(start + 1, end);\r\n                        list.push(r);\r\n                    }\r\n                    else {\r\n                        list.push(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (list.length == 1) {\r\n            return \"[\" + list[0] + \".ts]\";\r\n        }\r\n        else if (list.length == 2) {\r\n            return \"[\" + list[0] + \".ts->\" + list[1] + \"]\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    private static getDateString(): string {\r\n        let d = new Date();\r\n        let str = d.getHours().toString();\r\n        let timeStr = \"\";\r\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\r\n        str = d.getMinutes().toString();\r\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\r\n        str = d.getSeconds().toString();\r\n        timeStr += (str.length == 1 ? \"0\" + str : str) + \":\";\r\n        str = d.getMilliseconds().toString();\r\n        if (str.length == 1) str = \"00\" + str;\r\n        if (str.length == 2) str = \"0\" + str;\r\n        timeStr += str;\r\n\r\n        timeStr = \"[\" + timeStr + \"]\";\r\n        return timeStr;\r\n    }\r\n}\r\n\r\n// @ts-ignore\r\nLogger.init();"]}