{"version":3,"sources":["file:///Volumes/%E5%9B%BA%E6%80%81/project/extensions/oops-plugin-framework/assets/libs/animator/core/AnimatorBase.ts"],"names":["Component","JsonAsset","_decorator","AnimatorController","ccclass","property","executionOrder","menu","AnimatorBase","type","tooltip","_hasInit","_ac","_stateLogicMap","_onStateChangeCall","_animationPlayer","onFrameEvent","param","onFrameEventCallback","curStateName","curState","name","curStateMotion","motion","getState","states","get","onInit","initArgs","args","forEach","arg","Map","updateAnimator","playSpeed","speed","multi","params","getNumber","scaleTime","curLogic","onUpdate","update","AutoUpdate","manualUpdate","initJson","json","onAnimFinished","onAnimationComplete","onFinishedCallback","playAnimation","animName","loop","scale","onStateChange","fromState","toState","fromStateName","fromLogic","onExit","toLogic","onEntry","setBool","key","value","getBool","setNumber","setTrigger","resetTrigger","autoTrigger","play","stateName"],"mappings":"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","sourcesContent":["import { Component, JsonAsset, _decorator } from 'cc';\r\nimport AnimatorController from \"./AnimatorController\";\r\nimport AnimatorState from \"./AnimatorState\";\r\nimport { AnimatorStateLogic } from './AnimatorStateLogic';\r\n\r\nconst { ccclass, property, executionOrder, menu } = _decorator;\r\n\r\n/**\r\n * 自定义控制动画播放的接口\r\n */\r\nexport interface AnimationPlayer {\r\n    /** 设置动画播放结束的回调 */\r\n    onFinishedCallback(target: AnimatorBase): void;\r\n    /** 设置动画帧事件的回调 */\r\n    onFrameEventCallback(type: string, target: AnimatorBase): void\r\n    /** 播放动画 */\r\n    playAnimation(animName: string, loop: boolean): void;\r\n    /** 缩放动画播放速率 */\r\n    scaleTime(scale: number): void;\r\n}\r\n\r\n/**\r\n * 状态机组件基类 优先执行生命周期\r\n */\r\n@ccclass\r\n@executionOrder(-1000)\r\n@menu('animator/AnimatorBase')\r\nexport default class AnimatorBase extends Component {\r\n    /** ---------- 后续扩展代码 开始 ---------- */\r\n\r\n    /** 三维骨骼动画动画帧自定义事件 */\r\n    private onFrameEvent(param: string) {\r\n        this._animationPlayer?.onFrameEventCallback(param, this);\r\n    }\r\n\r\n    /** ---------- 后续扩展代码 结束 ---------- */\r\n\r\n    @property({ type: JsonAsset, tooltip: '状态机json文件' })\r\n    AssetRawUrl: JsonAsset = null!;\r\n\r\n    @property({ tooltip: '是否在start中自动启动状态机' })\r\n    PlayOnStart: boolean = true;\r\n\r\n    @property({ tooltip: '是否在update中自动触发状态机逻辑更新' })\r\n    AutoUpdate: boolean = true;\r\n\r\n    /** 是否初始化 */\r\n    protected _hasInit: boolean = false;\r\n    /** 状态机控制 */\r\n    protected _ac: AnimatorController = null!;\r\n\r\n    /** 各个状态逻辑控制，key为状态名 */\r\n    protected _stateLogicMap: Map<string, AnimatorStateLogic> = null!;\r\n    /** 状态切换时的回调 */\r\n    protected _onStateChangeCall: (fromState: string, toState: string) => void = null!;\r\n    /** 自定义的动画播放控制器 */\r\n    protected _animationPlayer: AnimationPlayer = null!;\r\n\r\n    /** 当前状态名 */\r\n    public get curStateName(): string {\r\n        return this._ac.curState.name;\r\n    }\r\n    /** 当前动画名 */\r\n    public get curStateMotion(): string {\r\n        return this._ac.curState.motion;\r\n    }\r\n\r\n    /** 获取指定状态 */\r\n    public getState(name: string): AnimatorState | undefined {\r\n        return this._ac.states.get(name);\r\n    }\r\n\r\n    /**\r\n     * 手动初始化状态机，可传入0-3个参数，类型如下\r\n     * - onStateChangeCall 状态切换时的回调\r\n     * - stateLogicMap 各个状态逻辑控制\r\n     * - animationPlayer 自定义动画控制\r\n     * @virtual\r\n     */\r\n    public onInit(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n    }\r\n\r\n    /**\r\n     * 处理初始化参数\r\n     */\r\n    protected initArgs(...args: Array<Map<string, AnimatorStateLogic> | ((fromState: string, toState: string) => void) | AnimationPlayer>) {\r\n        args.forEach((arg) => {\r\n            if (!arg) {\r\n                return;\r\n            }\r\n            if (typeof arg === 'function') {\r\n                this._onStateChangeCall = arg;\r\n            }\r\n            else if (typeof arg === 'object') {\r\n                if (arg instanceof Map) {\r\n                    this._stateLogicMap = arg;\r\n                }\r\n                else {\r\n                    this._animationPlayer = arg;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateAnimator() {\r\n        // 混合当前动画播放速度\r\n        let playSpeed = this._ac.curState.speed;\r\n        if (this._ac.curState.multi) {\r\n            playSpeed *= this._ac.params.getNumber(this._ac.curState.multi) ?? 1;\r\n        }\r\n        this.scaleTime(playSpeed);\r\n\r\n        // 更新动画状态逻辑\r\n        if (this._stateLogicMap) {\r\n            let curLogic = this._stateLogicMap.get(this._ac.curState.name);\r\n            curLogic && curLogic.onUpdate();\r\n        }\r\n\r\n        // 更新状态机逻辑\r\n        this._ac.updateAnimator();\r\n    }\r\n\r\n    protected update() {\r\n        if (this._hasInit && this.AutoUpdate) {\r\n            this.updateAnimator();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 手动调用更新\r\n     */\r\n    public manualUpdate() {\r\n        if (this._hasInit && !this.AutoUpdate) {\r\n            this.updateAnimator();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析状态机json文件\r\n     */\r\n    protected initJson(json: any) {\r\n        this._ac = new AnimatorController(this, json);\r\n    }\r\n\r\n    /**\r\n     * 动画结束的回调\r\n     */\r\n    protected onAnimFinished() {\r\n        this._ac.onAnimationComplete();\r\n        this._animationPlayer?.onFinishedCallback(this);\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @virtual\r\n     * @param animName 动画名\r\n     * @param loop 是否循环播放\r\n     */\r\n    protected playAnimation(animName: string, loop: boolean) {\r\n    }\r\n\r\n    /**\r\n     * 缩放动画播放速率\r\n     * @virtual\r\n     * @param scale 缩放倍率\r\n     */\r\n    protected scaleTime(scale: number) {\r\n    }\r\n\r\n    /** \r\n     * 状态切换时的逻辑（状态机内部方法，不能由外部直接调用）\r\n     */\r\n    public onStateChange(fromState: AnimatorState, toState: AnimatorState) {\r\n        this.playAnimation(toState.motion, toState.loop);\r\n\r\n        let fromStateName = fromState ? fromState.name : '';\r\n\r\n        if (this._stateLogicMap) {\r\n            let fromLogic = this._stateLogicMap.get(fromStateName);\r\n            fromLogic && fromLogic.onExit();\r\n            let toLogic = this._stateLogicMap.get(toState.name);\r\n            toLogic && toLogic.onEntry();\r\n        }\r\n\r\n        this._onStateChangeCall && this._onStateChangeCall(fromStateName, toState.name);\r\n    }\r\n\r\n    /**\r\n     * 设置boolean类型参数的值\r\n     */\r\n    public setBool(key: string, value: boolean) {\r\n        this._ac.params.setBool(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取boolean类型参数的值\r\n     */\r\n    public getBool(key: string): boolean {\r\n        return this._ac.params.getBool(key) !== 0;\r\n    }\r\n\r\n    /**\r\n     * 设置number类型参数的值\r\n     */\r\n    public setNumber(key: string, value: number) {\r\n        this._ac.params.setNumber(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取number类型参数的值\r\n     */\r\n    public getNumber(key: string): number {\r\n        return this._ac.params.getNumber(key);\r\n    }\r\n\r\n    /**\r\n     * 设置trigger类型参数的值\r\n     */\r\n    public setTrigger(key: string) {\r\n        this._ac.params.setTrigger(key);\r\n    }\r\n\r\n    /**\r\n     * 重置trigger类型参数的值\r\n     */\r\n    public resetTrigger(key: string) {\r\n        this._ac.params.resetTrigger(key);\r\n    }\r\n\r\n    /**\r\n     * 设置autoTrigger类型参数的值（autoTrigger类型参数不需要主动reset，每次状态机更新结束后会自动reset）\r\n     */\r\n    public autoTrigger(key: string) {\r\n        this._ac.params.autoTrigger(key);\r\n    }\r\n\r\n    /**\r\n     * 无视条件直接跳转状态\r\n     * @param 状态名\r\n     */\r\n    public play(stateName: string) {\r\n        if (!this._hasInit) {\r\n            return;\r\n        }\r\n        this._ac.play(stateName);\r\n    }\r\n}\r\n"]}